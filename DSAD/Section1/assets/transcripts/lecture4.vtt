WEBVTT

05e14040-523e-4baf-a4d1-011ce69ab14c/70-0
00:01:00.783 --> 00:01:03.677
So we'll wait for a couple of
moments and then we'll get

05e14040-523e-4baf-a4d1-011ce69ab14c/70-1
00:01:03.677 --> 00:01:04.083
started.

05e14040-523e-4baf-a4d1-011ce69ab14c/99-0
00:01:23.573 --> 00:01:26.602
You also get a chance to look at
the notebooks, or at least the

05e14040-523e-4baf-a4d1-011ce69ab14c/99-1
00:01:26.602 --> 00:01:27.453
place where it is.

05e14040-523e-4baf-a4d1-011ce69ab14c/105-0
00:01:30.003 --> 00:01:30.613
Let me bring it here.

05e14040-523e-4baf-a4d1-011ce69ab14c/120-0
00:01:31.813 --> 00:01:33.943
Yeah, just let me know once the
browser is visible.

05e14040-523e-4baf-a4d1-011ce69ab14c/135-0
00:01:35.003 --> 00:01:39.194
Those are course Canvas page and
you see the updated list here

05e14040-523e-4baf-a4d1-011ce69ab14c/135-1
00:01:39.194 --> 00:01:39.593
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/155-0
00:01:40.183 --> 00:01:43.214
So yesterday I had only one, but
yesterday we learned about

05e14040-523e-4baf-a4d1-011ce69ab14c/155-1
00:01:43.214 --> 00:01:45.133
stacks, queues, sling list and
so on.

05e14040-523e-4baf-a4d1-011ce69ab14c/163-0
00:01:45.503 --> 00:01:47.293
So those notebooks are also
available here.

05e14040-523e-4baf-a4d1-011ce69ab14c/179-0
00:01:54.053 --> 00:01:55.803
And again, a word of caution for
all of you.

05e14040-523e-4baf-a4d1-011ce69ab14c/187-0
00:01:55.993 --> 00:01:57.983
Don't use this discussion forum.

05e14040-523e-4baf-a4d1-011ce69ab14c/194-0
00:01:58.033 --> 00:01:58.643
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/201-0
00:01:58.753 --> 00:02:01.223
So this discussion is for
something that is common.

05e14040-523e-4baf-a4d1-011ce69ab14c/221-0
00:02:01.673 --> 00:02:04.424
Yeah, for example, you need
something about the exams or

05e14040-523e-4baf-a4d1-011ce69ab14c/221-1
00:02:04.424 --> 00:02:06.643
say, textbooks or something like
that, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/274-0
00:02:06.833 --> 00:02:10.500
So for all those exercises and
other things that we are doing

05e14040-523e-4baf-a4d1-011ce69ab14c/274-1
00:02:10.500 --> 00:02:14.048
in our class, which is our
section specific, you need to go

05e14040-523e-4baf-a4d1-011ce69ab14c/274-2
00:02:14.048 --> 00:02:17.715
into this section Section 1 and
then you have this discussion

05e14040-523e-4baf-a4d1-011ce69ab14c/274-3
00:02:17.715 --> 00:02:20.553
inside and you need to be using
this one, yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/287-0
00:02:27.943 --> 00:02:29.773
Yeah, Krishna says check the
place but not the.

05e14040-523e-4baf-a4d1-011ce69ab14c/292-0
00:02:29.783 --> 00:02:30.313
Yeah, that's fine.

05e14040-523e-4baf-a4d1-011ce69ab14c/314-0
00:02:30.323 --> 00:02:33.223
Yeah, but as long as you know
where it is, you can of course

05e14040-523e-4baf-a4d1-011ce69ab14c/314-1
00:02:33.223 --> 00:02:34.743
explore that in the coming week.

05e14040-523e-4baf-a4d1-011ce69ab14c/337-0
00:02:42.153 --> 00:02:44.700
So to be as a question and
wrapped around queue, what is

05e14040-523e-4baf-a4d1-011ce69ab14c/337-1
00:02:44.700 --> 00:02:45.683
the place of rare end?

05e14040-523e-4baf-a4d1-011ce69ab14c/351-0
00:02:45.993 --> 00:02:49.183
The last element index or the
next element, the next Mt index.

05e14040-523e-4baf-a4d1-011ce69ab14c/353-0
00:02:49.193 --> 00:02:49.483
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/362-0
00:02:49.493 --> 00:02:51.663
So that's the same concept
across in queue.

05e14040-523e-4baf-a4d1-011ce69ab14c/382-0
00:02:52.503 --> 00:02:55.480
Rare will always point to the
next available cell, if at all

05e14040-523e-4baf-a4d1-011ce69ab14c/382-1
00:02:55.480 --> 00:02:56.993
there is some available, right.

05e14040-523e-4baf-a4d1-011ce69ab14c/407-0
00:02:57.503 --> 00:03:00.851
If there is nothing available,
then it will also point to some,

05e14040-523e-4baf-a4d1-011ce69ab14c/407-1
00:03:00.851 --> 00:03:03.413
you know, save the whole wrapped
around is full.

05e14040-523e-4baf-a4d1-011ce69ab14c/437-0
00:03:03.643 --> 00:03:06.650
It might have gone to the zeroth
position, and if nothing has

05e14040-523e-4baf-a4d1-011ce69ab14c/437-1
00:03:06.650 --> 00:03:09.803
been deleted, then in the zeroth
position something will also be

05e14040-523e-4baf-a4d1-011ce69ab14c/437-2
00:03:09.803 --> 00:03:10.433
there, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/439-0
00:03:12.203 --> 00:03:12.393
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/448-0
00:03:12.403 --> 00:03:13.573
OK, I'll have a look at that.

05e14040-523e-4baf-a4d1-011ce69ab14c/454-0
00:03:13.863 --> 00:03:15.163
Yeah, there's some discussion
thread.

05e14040-523e-4baf-a4d1-011ce69ab14c/463-0
00:03:20.733 --> 00:03:22.203
Yeah, that's already there.

05e14040-523e-4baf-a4d1-011ce69ab14c/474-0
00:03:22.793 --> 00:03:24.533
Yeah, Batra in this deck in
appendix.

05e14040-523e-4baf-a4d1-011ce69ab14c/484-0
00:03:25.783 --> 00:03:26.993
And not spend too much on that.

05e14040-523e-4baf-a4d1-011ce69ab14c/509-0
00:03:27.003 --> 00:03:31.744
That's one application that is
for you, but of course that will

05e14040-523e-4baf-a4d1-011ce69ab14c/509-1
00:03:31.744 --> 00:03:35.743
also be covered briefly in the I
know baby now. Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/519-0
00:03:35.753 --> 00:03:38.493
So you have a webinar coming up
so.

05e14040-523e-4baf-a4d1-011ce69ab14c/528-0
00:03:43.803 --> 00:03:45.253
Know why doesn't it work?

05e14040-523e-4baf-a4d1-011ce69ab14c/536-0
00:03:45.763 --> 00:03:46.523
It does work right.

05e14040-523e-4baf-a4d1-011ce69ab14c/570-0
00:03:48.323 --> 00:03:51.638
You do r + 1 mod N and that
would take you back to the

05e14040-523e-4baf-a4d1-011ce69ab14c/570-1
00:03:51.638 --> 00:03:55.496
beginning of, so you'll do R + 1
mod N and in that position you

05e14040-523e-4baf-a4d1-011ce69ab14c/570-2
00:03:55.496 --> 00:03:57.123
will insert the item right.

05e14040-523e-4baf-a4d1-011ce69ab14c/587-0
00:04:01.173 --> 00:04:04.967
So this is similar to your
stacks top right, so there you

05e14040-523e-4baf-a4d1-011ce69ab14c/587-1
00:04:04.967 --> 00:04:05.163
do.

05e14040-523e-4baf-a4d1-011ce69ab14c/617-0
00:04:05.553 --> 00:04:08.632
You go to the next position and
then you insert it, whereas in

05e14040-523e-4baf-a4d1-011ce69ab14c/617-1
00:04:08.632 --> 00:04:11.563
queue you will insert it and
then perform this r + 1, yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/627-0
00:04:16.843 --> 00:04:18.083
The slight difference between
them.

05e14040-523e-4baf-a4d1-011ce69ab14c/639-0
00:04:21.523 --> 00:04:23.663
We'll wait for another minute
and then we'll get started.

05e14040-523e-4baf-a4d1-011ce69ab14c/652-0
00:04:32.633 --> 00:04:34.363
So it's the same concepts Ruby.

05e14040-523e-4baf-a4d1-011ce69ab14c/696-0
00:04:34.373 --> 00:04:37.482
It's just like R Plus plus or,
you know R is equal to r + 1,

05e14040-523e-4baf-a4d1-011ce69ab14c/696-1
00:04:37.482 --> 00:04:40.386
but just that since it is
rounded you want to go back to

05e14040-523e-4baf-a4d1-011ce69ab14c/696-2
00:04:40.386 --> 00:04:43.444
the initial position if you have
already hit the threshold,

05e14040-523e-4baf-a4d1-011ce69ab14c/696-3
00:04:43.444 --> 00:04:45.023
you're using that mod and yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/738-0
00:04:46.903 --> 00:04:50.170
So last class we just, you know
recapped and started with you

05e14040-523e-4baf-a4d1-011ce69ab14c/738-1
00:04:50.170 --> 00:04:53.541
know stacks and so on and then
we learned about a lot of simple

05e14040-523e-4baf-a4d1-011ce69ab14c/738-2
00:04:53.541 --> 00:04:56.333
you know pseudo codes and also
some demos and so on.

05e14040-523e-4baf-a4d1-011ce69ab14c/753-0
00:04:56.683 --> 00:05:00.203
And there was this application
of how do you evaluate a postfix

05e14040-523e-4baf-a4d1-011ce69ab14c/753-1
00:05:00.203 --> 00:05:01.193
expression, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/790-0
00:05:01.583 --> 00:05:05.303
And then we went to queues and
queue had this problem of what

05e14040-523e-4baf-a4d1-011ce69ab14c/790-1
00:05:05.303 --> 00:05:08.843
if there are, you know some
numbers that you have inserted

05e14040-523e-4baf-a4d1-011ce69ab14c/790-2
00:05:08.843 --> 00:05:10.883
and you have deleted all of
them.

05e14040-523e-4baf-a4d1-011ce69ab14c/814-0
00:05:11.173 --> 00:05:14.547
But if you are rare reaches the
end, it will complain that there

05e14040-523e-4baf-a4d1-011ce69ab14c/814-1
00:05:14.547 --> 00:05:16.103
is no more space in the queue.

05e14040-523e-4baf-a4d1-011ce69ab14c/845-0
00:05:16.493 --> 00:05:20.077
But of course there can be space
in the beginning, so it all

05e14040-523e-4baf-a4d1-011ce69ab14c/845-1
00:05:20.077 --> 00:05:23.719
instead of doing this, let's
have a wrap around configuration

05e14040-523e-4baf-a4d1-011ce69ab14c/845-2
00:05:23.719 --> 00:05:26.303
which is called as a circular
queue, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/945-0
00:05:26.313 --> 00:05:30.663
So in this case also, if you see
through, we currently rare is at

05e14040-523e-4baf-a4d1-011ce69ab14c/945-1
00:05:30.663 --> 00:05:34.682
5 and if I want to insert an
element here say suppose 500, I

05e14040-523e-4baf-a4d1-011ce69ab14c/945-2
00:05:34.682 --> 00:05:38.768
will insert the element right
here that is in queue of rare I

05e14040-523e-4baf-a4d1-011ce69ab14c/945-3
00:05:38.768 --> 00:05:42.853
will insert it and then I would
do rare is equal to rare plus

05e14040-523e-4baf-a4d1-011ce69ab14c/945-4
00:05:42.853 --> 00:05:47.005
one mod N so in this case what
would happen R is equal to rare

05e14040-523e-4baf-a4d1-011ce69ab14c/945-5
00:05:47.005 --> 00:05:51.222
plus one will become five plus
1/5 plus one is 66, modulus 8 is

05e14040-523e-4baf-a4d1-011ce69ab14c/945-6
00:05:51.222 --> 00:05:51.683
6 only.

05e14040-523e-4baf-a4d1-011ce69ab14c/951-0
00:05:51.833 --> 00:05:53.303
So you will point here.

05e14040-523e-4baf-a4d1-011ce69ab14c/984-0
00:05:53.713 --> 00:05:56.589
So the next step when something
else has to be inserted, you

05e14040-523e-4baf-a4d1-011ce69ab14c/984-1
00:05:56.589 --> 00:05:59.558
will directly insert it at that
position, which is in queue of

05e14040-523e-4baf-a4d1-011ce69ab14c/984-2
00:05:59.558 --> 00:06:01.443
where you'll insert that element
there.

05e14040-523e-4baf-a4d1-011ce69ab14c/1019-0
00:06:01.753 --> 00:06:06.030
Then you will perform rare,
equal to rare plus one mod N

05e14040-523e-4baf-a4d1-011ce69ab14c/1019-1
00:06:06.030 --> 00:06:10.532
that will become 6 + 1 mod 8
that is 77 mod 8 is 7 only, so

05e14040-523e-4baf-a4d1-011ce69ab14c/1019-2
00:06:10.532 --> 00:06:13.083
you'll go to this position
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/1028-0
00:06:13.093 --> 00:06:14.283
So you will be pointing there.

05e14040-523e-4baf-a4d1-011ce69ab14c/1053-0
00:06:14.353 --> 00:06:16.753
So the very next time when you
want to insert directly, you

05e14040-523e-4baf-a4d1-011ce69ab14c/1053-1
00:06:16.753 --> 00:06:18.873
will put it there and then you
will again increment.

05e14040-523e-4baf-a4d1-011ce69ab14c/1073-0
00:06:19.013 --> 00:06:24.003
So at that time it will become 7
+ 1 mod 8 which is 8 mod 88.

05e14040-523e-4baf-a4d1-011ce69ab14c/1083-0
00:06:24.013 --> 00:06:25.933
Mod 8 is 0, so you would have
come here.

05e14040-523e-4baf-a4d1-011ce69ab14c/1086-0
00:06:27.663 --> 00:06:27.913
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/1090-0
00:06:27.923 --> 00:06:28.553
Does it make sense?

05e14040-523e-4baf-a4d1-011ce69ab14c/1110-0
00:06:29.693 --> 00:06:31.949
So if you see the code here,
there is a slight difference

05e14040-523e-4baf-a4d1-011ce69ab14c/1110-1
00:06:31.949 --> 00:06:32.143
here.

05e14040-523e-4baf-a4d1-011ce69ab14c/1122-0
00:06:32.153 --> 00:06:36.183
Right in, in Q, you actually
first put the item right.

05e14040-523e-4baf-a4d1-011ce69ab14c/1141-0
00:06:36.193 --> 00:06:39.657
You first put the item because
it will always point to an empty

05e14040-523e-4baf-a4d1-011ce69ab14c/1141-1
00:06:39.657 --> 00:06:40.523
location, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/1148-0
00:06:40.533 --> 00:06:41.823
Unless the full queue is full.

05e14040-523e-4baf-a4d1-011ce69ab14c/1189-0
00:06:41.883 --> 00:06:46.110
Yeah, it will point to the empty
cell where you actually put the

05e14040-523e-4baf-a4d1-011ce69ab14c/1189-1
00:06:46.110 --> 00:06:50.077
item and then you perform or
equal to R + 1 mod N Yeah, I'll

05e14040-523e-4baf-a4d1-011ce69ab14c/1189-2
00:06:50.077 --> 00:06:52.483
recommend you to trace this
program.

05e14040-523e-4baf-a4d1-011ce69ab14c/1191-0
00:06:52.493 --> 00:06:52.983
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/1219-0
00:06:53.313 --> 00:06:56.197
Like take some circular queues
from the beginning, you know,

05e14040-523e-4baf-a4d1-011ce69ab14c/1219-1
00:06:56.197 --> 00:06:59.033
try to insert items and so on
and then it'll be more clear.

05e14040-523e-4baf-a4d1-011ce69ab14c/1222-0
00:07:00.933 --> 00:07:01.333
Right.

05e14040-523e-4baf-a4d1-011ce69ab14c/1236-0
00:07:01.493 --> 00:07:03.509
And then we learned about, you
know, it has a lot of

05e14040-523e-4baf-a4d1-011ce69ab14c/1236-1
00:07:03.509 --> 00:07:04.003
applications.

05e14040-523e-4baf-a4d1-011ce69ab14c/1239-0
00:07:04.013 --> 00:07:04.463
Yes, Sir.

05e14040-523e-4baf-a4d1-011ce69ab14c/1249-0
00:07:04.473 --> 00:07:06.203
So why are we doing this one?

05e14040-523e-4baf-a4d1-011ce69ab14c/1257-0
00:07:06.213 --> 00:07:08.893
Uh, same with this also, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/1271-0
00:07:09.333 --> 00:07:12.413
So here also in front also if
you keep deleting right.

05e14040-523e-4baf-a4d1-011ce69ab14c/1294-0
00:07:12.423 --> 00:07:16.040
So for example hundred I deleted
300, I deleted 250, I deleted

05e14040-523e-4baf-a4d1-011ce69ab14c/1294-1
00:07:16.040 --> 00:07:17.303
and 400 I deleted 200.

05e14040-523e-4baf-a4d1-011ce69ab14c/1296-0
00:07:17.313 --> 00:07:17.783
I deleted.

05e14040-523e-4baf-a4d1-011ce69ab14c/1310-0
00:07:17.793 --> 00:07:21.363
I kept on deleting all of them
and then what about 7 right?

05e14040-523e-4baf-a4d1-011ce69ab14c/1347-0
00:07:21.433 --> 00:07:25.286
So suppose in the 7th item I
deleted it and now say suppose

05e14040-523e-4baf-a4d1-011ce69ab14c/1347-1
00:07:25.286 --> 00:07:29.011
rare had occupied all these
spaces and again since zeroed

05e14040-523e-4baf-a4d1-011ce69ab14c/1347-2
00:07:29.011 --> 00:07:30.423
have been empty right?

05e14040-523e-4baf-a4d1-011ce69ab14c/1366-0
00:07:30.433 --> 00:07:33.652
Since I deleted 103 hundred 250,
these places are empty, so Ray

05e14040-523e-4baf-a4d1-011ce69ab14c/1366-1
00:07:33.652 --> 00:07:35.613
would have started filling them
again.

05e14040-523e-4baf-a4d1-011ce69ab14c/1389-0
00:07:36.483 --> 00:07:40.121
So in that case in front also I
should be doing front plus one

05e14040-523e-4baf-a4d1-011ce69ab14c/1389-1
00:07:40.121 --> 00:07:40.813
mod 8 right?

05e14040-523e-4baf-a4d1-011ce69ab14c/1414-0
00:07:40.823 --> 00:07:43.545
Only then he will again go back
to 0, otherwise he'll just be in

05e14040-523e-4baf-a4d1-011ce69ab14c/1414-1
00:07:43.545 --> 00:07:45.303
seven and then he'll go to 8-9
and so on.

05e14040-523e-4baf-a4d1-011ce69ab14c/1448-0
00:07:47.043 --> 00:07:51.383
I waiting the picture so we so
if it delete all of these then

05e14040-523e-4baf-a4d1-011ce69ab14c/1448-1
00:07:51.383 --> 00:07:55.793
front is moving forward right
from friend zero it goes to 1234

05e14040-523e-4baf-a4d1-011ce69ab14c/1448-2
00:07:55.793 --> 00:07:56.493
and so on.

05e14040-523e-4baf-a4d1-011ce69ab14c/1464-0
00:07:56.643 --> 00:08:00.035
So similarly, when hit hit
seven, it has to again come back

05e14040-523e-4baf-a4d1-011ce69ab14c/1464-1
00:08:00.035 --> 00:08:00.713
to 0, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/1485-0
00:08:01.103 --> 00:08:03.908
So there also I need to be
having not just front equal to

05e14040-523e-4baf-a4d1-011ce69ab14c/1485-1
00:08:03.908 --> 00:08:04.633
front plus one.

05e14040-523e-4baf-a4d1-011ce69ab14c/1492-0
00:08:05.083 --> 00:08:06.183
I need to have this model.

05e14040-523e-4baf-a4d1-011ce69ab14c/1494-0
00:08:09.973 --> 00:08:10.133
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/1521-0
00:08:11.953 --> 00:08:15.093
Same concept with both of them,
rare and friend, because

05e14040-523e-4baf-a4d1-011ce69ab14c/1521-1
00:08:15.093 --> 00:08:18.507
otherwise rare around will be
rotating but friend will go get

05e14040-523e-4baf-a4d1-011ce69ab14c/1521-2
00:08:18.507 --> 00:08:19.443
stuck here right?

05e14040-523e-4baf-a4d1-011ce69ab14c/1529-0
00:08:19.453 --> 00:08:20.303
So that should not happen.

05e14040-523e-4baf-a4d1-011ce69ab14c/1539-0
00:08:20.313 --> 00:08:22.283
Both of them should be rotating
across.

05e14040-523e-4baf-a4d1-011ce69ab14c/1546-0
00:08:22.653 --> 00:08:24.793
So for both of them we need that
mod.

05e14040-523e-4baf-a4d1-011ce69ab14c/1557-0
00:08:27.163 --> 00:08:29.033
And then we learned about some
applications of queue.

05e14040-523e-4baf-a4d1-011ce69ab14c/1577-0
00:08:29.043 --> 00:08:31.895
That is, you know, it's
absolutely needed our you know

05e14040-523e-4baf-a4d1-011ce69ab14c/1577-1
00:08:31.895 --> 00:08:34.383
operating system uses and even
our programming.

05e14040-523e-4baf-a4d1-011ce69ab14c/1588-0
00:08:34.393 --> 00:08:37.043
You know, we use it in a lot of
places, right.

05e14040-523e-4baf-a4d1-011ce69ab14c/1604-0
00:08:37.873 --> 00:08:40.975
And again, this scheduling and
then heaps and so on, it is

05e14040-523e-4baf-a4d1-011ce69ab14c/1604-1
00:08:40.975 --> 00:08:41.553
being used.

05e14040-523e-4baf-a4d1-011ce69ab14c/1612-0
00:08:42.853 --> 00:08:45.163
Then we started with list with
very simple concept.

05e14040-523e-4baf-a4d1-011ce69ab14c/1617-0
00:08:45.173 --> 00:08:46.303
Don't make it complicated.

05e14040-523e-4baf-a4d1-011ce69ab14c/1627-0
00:08:46.793 --> 00:08:49.003
There are many operations that
are possible in list.

05e14040-523e-4baf-a4d1-011ce69ab14c/1646-0
00:08:49.073 --> 00:08:52.000
It's a very exhaustive list, but
we are not learning all of them,

05e14040-523e-4baf-a4d1-011ce69ab14c/1646-1
00:08:52.000 --> 00:08:52.753
but it's trivial.

05e14040-523e-4baf-a4d1-011ce69ab14c/1660-0
00:08:54.233 --> 00:08:57.143
So what exactly is this singly
linked list, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/1681-0
00:08:57.393 --> 00:09:02.238
It is as simple as a couple of
notes which are linked together

05e14040-523e-4baf-a4d1-011ce69ab14c/1681-1
00:09:02.238 --> 00:09:03.853
to form a list right?

05e14040-523e-4baf-a4d1-011ce69ab14c/1706-0
00:09:03.863 --> 00:09:06.324
For example, if each kid are
holding their hands in two

05e14040-523e-4baf-a4d1-011ce69ab14c/1706-1
00:09:06.324 --> 00:09:08.873
directions right, that becomes
like a doubly linked list.

05e14040-523e-4baf-a4d1-011ce69ab14c/1730-0
00:09:09.223 --> 00:09:11.932
If a list of kids are holding
their hands in one, you know

05e14040-523e-4baf-a4d1-011ce69ab14c/1730-1
00:09:11.932 --> 00:09:14.043
direction, then that is a singly
linked list.

05e14040-523e-4baf-a4d1-011ce69ab14c/1755-0
00:09:15.403 --> 00:09:19.464
So each node has two parts, one
is the actual element and one is

05e14040-523e-4baf-a4d1-011ce69ab14c/1755-1
00:09:19.464 --> 00:09:21.213
the pointer to the next one.

05e14040-523e-4baf-a4d1-011ce69ab14c/1782-0
00:09:22.043 --> 00:09:25.232
This is more like a single
linked list, but you have the

05e14040-523e-4baf-a4d1-011ce69ab14c/1782-1
00:09:25.232 --> 00:09:28.253
actual element A and then a
pointer to the next node.

05e14040-523e-4baf-a4d1-011ce69ab14c/1826-0
00:09:28.703 --> 00:09:32.069
You have the actual element B,
the pointer to the next node and

05e14040-523e-4baf-a4d1-011ce69ab14c/1826-1
00:09:32.069 --> 00:09:35.486
so on, whereas here we saw that
there's a problem is if I'm in a

05e14040-523e-4baf-a4d1-011ce69ab14c/1826-2
00:09:35.486 --> 00:09:38.483
particular node, I can only go
in the forward direction.

05e14040-523e-4baf-a4d1-011ce69ab14c/1833-0
00:09:38.833 --> 00:09:40.443
I cannot go reverse right?

05e14040-523e-4baf-a4d1-011ce69ab14c/1854-0
00:09:40.453 --> 00:09:43.520
Say if I'm in CI cannot go back
to B or A because I have lost

05e14040-523e-4baf-a4d1-011ce69ab14c/1854-1
00:09:43.520 --> 00:09:44.163
that address.

05e14040-523e-4baf-a4d1-011ce69ab14c/1892-0
00:09:44.353 --> 00:09:48.233
I don't know where should I go
to go back, right, so that is

05e14040-523e-4baf-a4d1-011ce69ab14c/1892-1
00:09:48.233 --> 00:09:51.986
why we have doubly linked list
which is even more powerful

05e14040-523e-4baf-a4d1-011ce69ab14c/1892-2
00:09:51.986 --> 00:09:55.802
where each compartment or each
node has three compartments,

05e14040-523e-4baf-a4d1-011ce69ab14c/1892-3
00:09:55.802 --> 00:09:56.183
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/1917-0
00:09:56.593 --> 00:10:00.216
One is the actual element, one
is the pointer to the previous

05e14040-523e-4baf-a4d1-011ce69ab14c/1917-1
00:10:00.216 --> 00:10:03.313
node and one is the pointer to
the next node, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/1955-0
00:10:03.323 --> 00:10:07.161
For example, if you are in this
frog, you can go back using this

05e14040-523e-4baf-a4d1-011ce69ab14c/1955-1
00:10:07.161 --> 00:10:10.763
particular you know previous
address, you can go to the next

05e14040-523e-4baf-a4d1-011ce69ab14c/1955-2
00:10:10.763 --> 00:10:14.365
node using the next address you
have the actual element also

05e14040-523e-4baf-a4d1-011ce69ab14c/1955-3
00:10:14.365 --> 00:10:15.073
there right?

05e14040-523e-4baf-a4d1-011ce69ab14c/1982-0
00:10:16.093 --> 00:10:19.154
So in this way you will be able
to go forward or backward, which

05e14040-523e-4baf-a4d1-011ce69ab14c/1982-1
00:10:19.154 --> 00:10:20.283
is more powerful for us.

05e14040-523e-4baf-a4d1-011ce69ab14c/2011-0
00:10:20.833 --> 00:10:24.221
And of course there's a special
header and trailer nodes also to

05e14040-523e-4baf-a4d1-011ce69ab14c/2011-1
00:10:24.221 --> 00:10:27.453
just keep track of who's the
first node address and who's the

05e14040-523e-4baf-a4d1-011ce69ab14c/2011-2
00:10:27.453 --> 00:10:28.703
last node address right?

05e14040-523e-4baf-a4d1-011ce69ab14c/2022-0
00:10:28.893 --> 00:10:30.763
What is pointer memory address
to the next element?

05e14040-523e-4baf-a4d1-011ce69ab14c/2026-0
00:10:30.773 --> 00:10:31.763
Yes, exactly right.

05e14040-523e-4baf-a4d1-011ce69ab14c/2044-0
00:10:32.673 --> 00:10:35.238
So it's my understanding right
singly has one address and

05e14040-523e-4baf-a4d1-011ce69ab14c/2044-1
00:10:35.238 --> 00:10:36.653
doubly has two address, correct?

05e14040-523e-4baf-a4d1-011ce69ab14c/2046-0
00:10:36.663 --> 00:10:37.083
Exactly.

05e14040-523e-4baf-a4d1-011ce69ab14c/2050-0
00:10:37.233 --> 00:10:39.213
That's right, yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/2074-0
00:10:41.673 --> 00:10:44.746
And then we also saw about, you
know, and this gives us this

05e14040-523e-4baf-a4d1-011ce69ab14c/2074-1
00:10:44.746 --> 00:10:47.063
complete power of dynamically
growing, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/2084-0
00:10:47.273 --> 00:10:48.983
So we are not constrained by
memory.

05e14040-523e-4baf-a4d1-011ce69ab14c/2103-0
00:10:49.313 --> 00:10:52.695
So if I want to add a new node
for example, I want to now add a

05e14040-523e-4baf-a4d1-011ce69ab14c/2103-1
00:10:52.695 --> 00:10:53.223
cat right?

05e14040-523e-4baf-a4d1-011ce69ab14c/2118-0
00:10:53.393 --> 00:10:56.424
I'll create that particular node
wherever I have space and

05e14040-523e-4baf-a4d1-011ce69ab14c/2118-1
00:10:56.424 --> 00:10:57.143
memory, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/2127-0
00:10:57.153 --> 00:10:58.113
I'll just create that.

05e14040-523e-4baf-a4d1-011ce69ab14c/2139-0
00:10:58.313 --> 00:11:00.685
I'll put that element part to
be, you know, holding the

05e14040-523e-4baf-a4d1-011ce69ab14c/2139-1
00:11:00.685 --> 00:11:01.193
element cat.

05e14040-523e-4baf-a4d1-011ce69ab14c/2157-0
00:11:01.693 --> 00:11:04.982
I've created that somewhere in
the memory, but currently that

05e14040-523e-4baf-a4d1-011ce69ab14c/2157-1
00:11:04.982 --> 00:11:06.043
is an orphan, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/2169-0
00:11:06.053 --> 00:11:08.743
I'll have to add it into this
linked list right?

05e14040-523e-4baf-a4d1-011ce69ab14c/2198-0
00:11:08.753 --> 00:11:12.246
So suppose after this you know,
say frog or somewhere in between

05e14040-523e-4baf-a4d1-011ce69ab14c/2198-1
00:11:12.246 --> 00:11:14.663
or after the you know line I
need to add it.

05e14040-523e-4baf-a4d1-011ce69ab14c/2208-0
00:11:15.013 --> 00:11:16.773
Then I need to do a couple of
things.

05e14040-523e-4baf-a4d1-011ce69ab14c/2230-0
00:11:16.783 --> 00:11:20.064
That is what we learned
yesterday that I need to update

05e14040-523e-4baf-a4d1-011ce69ab14c/2230-1
00:11:20.064 --> 00:11:22.173
the new nodes previous to point
to.

05e14040-523e-4baf-a4d1-011ce69ab14c/2255-0
00:11:22.183 --> 00:11:25.468
This particular you know tiger
element, this node and the next

05e14040-523e-4baf-a4d1-011ce69ab14c/2255-1
00:11:25.468 --> 00:11:28.753
element will point to this one
and then what else should I do?

05e14040-523e-4baf-a4d1-011ce69ab14c/2287-0
00:11:30.403 --> 00:11:33.732
I would have liked this new note
to this link list, whereas this

05e14040-523e-4baf-a4d1-011ce69ab14c/2287-1
00:11:33.732 --> 00:11:36.703
tigers next position and this
ones previous will still be

05e14040-523e-4baf-a4d1-011ce69ab14c/2287-2
00:11:36.703 --> 00:11:37.573
pointing to them.

05e14040-523e-4baf-a4d1-011ce69ab14c/2300-0
00:11:37.903 --> 00:11:41.933
I should be making them to point
to this new cat element, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/2309-0
00:11:41.943 --> 00:11:43.723
So that's what we learned,
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/2318-0
00:11:43.733 --> 00:11:45.753
You create a new node 5
operations.

05e14040-523e-4baf-a4d1-011ce69ab14c/2331-0
00:11:45.763 --> 00:11:48.663
You do that is you create it and
put the element X.

05e14040-523e-4baf-a4d1-011ce69ab14c/2361-0
00:11:49.173 --> 00:11:53.601
You update this nodes previous
you update this node's next and

05e14040-523e-4baf-a4d1-011ce69ab14c/2361-1
00:11:53.601 --> 00:11:57.887
then in the actual englist you
update the corresponding next

05e14040-523e-4baf-a4d1-011ce69ab14c/2361-2
00:11:57.887 --> 00:11:59.503
and previous positions.

05e14040-523e-4baf-a4d1-011ce69ab14c/2370-0
00:11:59.993 --> 00:12:02.163
Then you would have successfully
inserted this element.

05e14040-523e-4baf-a4d1-011ce69ab14c/2438-0
00:12:02.273 --> 00:12:05.990
Likewise, you can keep you know,
extending as much as possible,

05e14040-523e-4baf-a4d1-011ce69ab14c/2438-1
00:12:05.990 --> 00:12:09.532
and whenever you don't want, you
can just knock them off and

05e14040-523e-4baf-a4d1-011ce69ab14c/2438-2
00:12:09.532 --> 00:12:12.958
knocking off was even simpler
where you just delete it the

05e14040-523e-4baf-a4d1-011ce69ab14c/2438-3
00:12:12.958 --> 00:12:16.675
next 10 previous alone will get
changed, the need of header and

05e14040-523e-4baf-a4d1-011ce69ab14c/2438-4
00:12:16.675 --> 00:12:20.391
trailer is to just know so that
we can just, you know, traverse

05e14040-523e-4baf-a4d1-011ce69ab14c/2438-5
00:12:20.391 --> 00:12:22.133
in both the directions, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/2460-0
00:12:22.143 --> 00:12:24.806
I should know from where this
linked list starts right in

05e14040-523e-4baf-a4d1-011ce69ab14c/2460-1
00:12:24.806 --> 00:12:26.733
memory, so that is why I have
the header.

05e14040-523e-4baf-a4d1-011ce69ab14c/2484-0
00:12:27.143 --> 00:12:30.359
So if I want to traverse, I will
take the header that I'll get

05e14040-523e-4baf-a4d1-011ce69ab14c/2484-1
00:12:30.359 --> 00:12:31.583
the first nodes address.

05e14040-523e-4baf-a4d1-011ce69ab14c/2498-0
00:12:31.823 --> 00:12:34.188
From there, I'll keep jumping
and I can keep traversing in the

05e14040-523e-4baf-a4d1-011ce69ab14c/2498-1
00:12:34.188 --> 00:12:34.863
forward direction.

05e14040-523e-4baf-a4d1-011ce69ab14c/2511-0
00:12:35.713 --> 00:12:37.423
But what if I want to do in the
reverse?

05e14040-523e-4baf-a4d1-011ce69ab14c/2519-0
00:12:37.913 --> 00:12:39.383
Then I'll catch hold of the
trailer.

05e14040-523e-4baf-a4d1-011ce69ab14c/2529-0
00:12:39.533 --> 00:12:41.583
I'll have the address of the
last note.

05e14040-523e-4baf-a4d1-011ce69ab14c/2532-0
00:12:41.993 --> 00:12:42.743
I'll take that.

05e14040-523e-4baf-a4d1-011ce69ab14c/2543-0
00:12:42.873 --> 00:12:44.203
I'll go there to the last node.

05e14040-523e-4baf-a4d1-011ce69ab14c/2563-0
00:12:44.493 --> 00:12:47.180
From there, I'll take that
node's previous go to C then

05e14040-523e-4baf-a4d1-011ce69ab14c/2563-1
00:12:47.180 --> 00:12:47.803
I'll go to B.

05e14040-523e-4baf-a4d1-011ce69ab14c/2575-0
00:12:47.813 --> 00:12:49.803
Then I'll go to, and so on,
right.

05e14040-523e-4baf-a4d1-011ce69ab14c/2586-0
00:12:49.853 --> 00:12:52.403
It just gives us the flexibility
those two are just variables.

05e14040-523e-4baf-a4d1-011ce69ab14c/2603-0
00:12:52.693 --> 00:12:56.042
Yeah, header and trailer are
just variables to keep track of

05e14040-523e-4baf-a4d1-011ce69ab14c/2603-1
00:12:56.042 --> 00:12:57.743
in which direction to traverse.

05e14040-523e-4baf-a4d1-011ce69ab14c/2607-0
00:12:59.863 --> 00:13:00.073
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/2616-0
00:13:00.083 --> 00:13:01.043
Is this clear for all of you?

05e14040-523e-4baf-a4d1-011ce69ab14c/2662-0
00:13:02.363 --> 00:13:05.609
Yes, in single English we will
just have the trailer alone in

05e14040-523e-4baf-a4d1-011ce69ab14c/2662-1
00:13:05.609 --> 00:13:09.011
the IT is not very clearly shown
here, but there will be just a,

05e14040-523e-4baf-a4d1-011ce69ab14c/2662-2
00:13:09.011 --> 00:13:12.361
you know, not a trailer, just a
header node which will have the

05e14040-523e-4baf-a4d1-011ce69ab14c/2662-3
00:13:12.361 --> 00:13:14.193
address of this first node,
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/2700-0
00:13:16.253 --> 00:13:19.641
Is it clear case all of you
simple stuff and we learned that

05e14040-523e-4baf-a4d1-011ce69ab14c/2700-1
00:13:19.641 --> 00:13:22.140
insertion and deletion are
pretty, you know,

05e14040-523e-4baf-a4d1-011ce69ab14c/2700-2
00:13:22.140 --> 00:13:25.693
straightforward if you are doing
it at the head or tail, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/2716-0
00:13:25.703 --> 00:13:29.105
If you're adding it to the first
position, then it is just

05e14040-523e-4baf-a4d1-011ce69ab14c/2716-1
00:13:29.105 --> 00:13:30.373
constant and deletion.

05e14040-523e-4baf-a4d1-011ce69ab14c/2748-0
00:13:30.383 --> 00:13:33.390
Also, if you are deleting the
first node or at the last node

05e14040-523e-4baf-a4d1-011ce69ab14c/2748-1
00:13:33.390 --> 00:13:36.397
then it is, you know just big of
1 because you just have the

05e14040-523e-4baf-a4d1-011ce69ab14c/2748-2
00:13:36.397 --> 00:13:37.333
header and trailer.

05e14040-523e-4baf-a4d1-011ce69ab14c/2762-0
00:13:37.583 --> 00:13:40.368
You can just go to the
headdress, delete them or add

05e14040-523e-4baf-a4d1-011ce69ab14c/2762-1
00:13:40.368 --> 00:13:41.313
them there, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/2795-0
00:13:41.323 --> 00:13:44.633
But the problem is if you want
to access somewhere in the

05e14040-523e-4baf-a4d1-011ce69ab14c/2795-1
00:13:44.633 --> 00:13:47.715
middle or if you want to
traverse it then it is a big

05e14040-523e-4baf-a4d1-011ce69ab14c/2795-2
00:13:47.715 --> 00:13:47.943
off.

05e14040-523e-4baf-a4d1-011ce69ab14c/2800-0
00:13:47.953 --> 00:13:50.663
Again, MANOJNA sinto.

05e14040-523e-4baf-a4d1-011ce69ab14c/2817-0
00:13:50.713 --> 00:13:53.463
We don't know where the expected
object is, so we do have

05e14040-523e-4baf-a4d1-011ce69ab14c/2817-1
00:13:53.463 --> 00:13:54.363
relocation correct?

05e14040-523e-4baf-a4d1-011ce69ab14c/2827-0
00:13:54.413 --> 00:13:56.343
So basically you want to
traverse guys, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/2856-0
00:13:56.473 --> 00:13:59.291
So if you don't have this
trailer node right, you don't

05e14040-523e-4baf-a4d1-011ce69ab14c/2856-1
00:13:59.291 --> 00:14:02.562
have this trailer node you want
to go to D then what is the only

05e14040-523e-4baf-a4d1-011ce69ab14c/2856-2
00:14:02.562 --> 00:14:02.763
way?

05e14040-523e-4baf-a4d1-011ce69ab14c/2869-0
00:14:04.493 --> 00:14:06.903
Manoj, you'll have to start from
the beginning.

05e14040-523e-4baf-a4d1-011ce69ab14c/2878-0
00:14:06.973 --> 00:14:08.283
You'll catch hold of this first.

05e14040-523e-4baf-a4d1-011ce69ab14c/2936-0
00:14:08.293 --> 00:14:12.116
You know header node, you'll go
to a, then B, then C then D

05e14040-523e-4baf-a4d1-011ce69ab14c/2936-1
00:14:12.116 --> 00:14:16.129
which is big O of N complexity,
whereas always if you maintain

05e14040-523e-4baf-a4d1-011ce69ab14c/2936-2
00:14:16.129 --> 00:14:19.951
the last nodes address also in
some special variable called

05e14040-523e-4baf-a4d1-011ce69ab14c/2936-3
00:14:19.951 --> 00:14:23.263
trailer you can use this to
directly go to D right.

05e14040-523e-4baf-a4d1-011ce69ab14c/2943-0
00:14:23.353 --> 00:14:26.093
The complexities we go of 1 now,
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/2968-0
00:14:26.183 --> 00:14:29.112
So it just gives us some
flexibility that in both ways

05e14040-523e-4baf-a4d1-011ce69ab14c/2968-1
00:14:29.112 --> 00:14:30.443
I'll be able to traverse.

05e14040-523e-4baf-a4d1-011ce69ab14c/2972-0
00:14:30.873 --> 00:14:31.913
That's pretty much right.

05e14040-523e-4baf-a4d1-011ce69ab14c/2975-0
00:14:35.673 --> 00:14:35.883
Full.

05e14040-523e-4baf-a4d1-011ce69ab14c/2995-0
00:14:37.763 --> 00:14:40.202
There's also some small two
slides that had skipped

05e14040-523e-4baf-a4d1-011ce69ab14c/2995-1
00:14:40.202 --> 00:14:41.233
yesterday that is, uh.

05e14040-523e-4baf-a4d1-011ce69ab14c/3002-0
00:14:41.243 --> 00:14:43.703
We learned about stacks using an
array, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/3010-0
00:14:44.443 --> 00:14:45.633
Yeah, this is again a question.

05e14040-523e-4baf-a4d1-011ce69ab14c/3016-0
00:14:45.703 --> 00:14:46.733
How do we know these?

05e14040-523e-4baf-a4d1-011ce69ab14c/3021-0
00:14:46.743 --> 00:14:47.683
Uh, near to trailer?

05e14040-523e-4baf-a4d1-011ce69ab14c/3027-0
00:14:47.693 --> 00:14:48.713
Yeah, we don't know.

05e14040-523e-4baf-a4d1-011ce69ab14c/3058-0
00:14:49.023 --> 00:14:51.958
That's just a chance that you
want to take, or if you want to

05e14040-523e-4baf-a4d1-011ce69ab14c/3058-1
00:14:51.958 --> 00:14:54.940
reverse traverse in that way,
definitely this is going to help

05e14040-523e-4baf-a4d1-011ce69ab14c/3058-2
00:14:54.940 --> 00:14:55.413
me, right.

05e14040-523e-4baf-a4d1-011ce69ab14c/3101-0
00:14:56.203 --> 00:14:59.377
If I want to travel the whole
enlist in reverse, I want to

05e14040-523e-4baf-a4d1-011ce69ab14c/3101-1
00:14:59.377 --> 00:15:02.604
know from you know the last
element to 1st then always this

05e14040-523e-4baf-a4d1-011ce69ab14c/3101-2
00:15:02.604 --> 00:15:04.863
is going to help me but Tyler
node right?

05e14040-523e-4baf-a4d1-011ce69ab14c/3122-0
00:15:06.543 --> 00:15:10.302
It just gives me the power that
in both directions I'll be able

05e14040-523e-4baf-a4d1-011ce69ab14c/3122-1
00:15:10.302 --> 00:15:11.653
to hit the notes right.

05e14040-523e-4baf-a4d1-011ce69ab14c/3138-0
00:15:11.663 --> 00:15:14.308
In some cases, people will have
a doubly linked list without the

05e14040-523e-4baf-a4d1-011ce69ab14c/3138-1
00:15:14.308 --> 00:15:14.633
trailer.

05e14040-523e-4baf-a4d1-011ce69ab14c/3163-0
00:15:14.643 --> 00:15:18.063
Also, that is also fine if you
the the most important part is

05e14040-523e-4baf-a4d1-011ce69ab14c/3163-1
00:15:18.063 --> 00:15:21.537
in every node, you should have
those two compartments previous

05e14040-523e-4baf-a4d1-011ce69ab14c/3163-2
00:15:21.537 --> 00:15:22.033
and next.

05e14040-523e-4baf-a4d1-011ce69ab14c/3184-0
00:15:22.363 --> 00:15:25.208
This is more or less, you know,
a designers choice if they want

05e14040-523e-4baf-a4d1-011ce69ab14c/3184-1
00:15:25.208 --> 00:15:26.763
to maintain a trailer node or
not.

05e14040-523e-4baf-a4d1-011ce69ab14c/3186-0
00:15:27.803 --> 00:15:27.943
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/3214-0
00:15:29.443 --> 00:15:32.738
So a general practices if there
is a doubly linked list, it will

05e14040-523e-4baf-a4d1-011ce69ab14c/3214-1
00:15:32.738 --> 00:15:34.613
have both the head and trailer
node.

05e14040-523e-4baf-a4d1-011ce69ab14c/3250-0
00:15:34.983 --> 00:15:38.132
The head node will always have
the address of the first node,

05e14040-523e-4baf-a4d1-011ce69ab14c/3250-1
00:15:38.132 --> 00:15:41.281
and as and when you keep adding
nodes, the last nodes address

05e14040-523e-4baf-a4d1-011ce69ab14c/3250-2
00:15:41.281 --> 00:15:43.413
will always be there in the
trailer node.

05e14040-523e-4baf-a4d1-011ce69ab14c/3270-0
00:15:43.863 --> 00:15:46.884
If you have just inserted one
item, in that case we'll header

05e14040-523e-4baf-a4d1-011ce69ab14c/3270-1
00:15:46.884 --> 00:15:48.053
and trailer be the same.

05e14040-523e-4baf-a4d1-011ce69ab14c/3286-0
00:15:49.453 --> 00:15:53.215
Yeah, you have created a doubly
linked list which has just one

05e14040-523e-4baf-a4d1-011ce69ab14c/3286-1
00:15:53.215 --> 00:15:53.513
node.

05e14040-523e-4baf-a4d1-011ce69ab14c/3291-0
00:15:53.523 --> 00:15:55.113
Currently, yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/3310-0
00:15:55.123 --> 00:15:58.658
So in that case, we'll header
and trailer will both of them

05e14040-523e-4baf-a4d1-011ce69ab14c/3310-1
00:15:58.658 --> 00:15:59.953
point to the same one?

05e14040-523e-4baf-a4d1-011ce69ab14c/3319-0
00:16:02.183 --> 00:16:03.713
Yes, it will be the same.

05e14040-523e-4baf-a4d1-011ce69ab14c/3339-0
00:16:03.773 --> 00:16:06.111
Yeah, because you just have one
node which is the first one,

05e14040-523e-4baf-a4d1-011ce69ab14c/3339-1
00:16:06.111 --> 00:16:06.953
which is the last one.

05e14040-523e-4baf-a4d1-011ce69ab14c/3369-0
00:16:07.223 --> 00:16:10.788
But if you add another node B
then header will point to the

05e14040-523e-4baf-a4d1-011ce69ab14c/3369-1
00:16:10.788 --> 00:16:14.293
first node, which is a trailer
will point to the last node

05e14040-523e-4baf-a4d1-011ce69ab14c/3369-2
00:16:14.293 --> 00:16:15.303
which is B. Cool.

05e14040-523e-4baf-a4d1-011ce69ab14c/3372-0
00:16:17.793 --> 00:16:18.153
Fine.

05e14040-523e-4baf-a4d1-011ce69ab14c/3405-0
00:16:18.163 --> 00:16:21.447
So we also learned about stacks
using array and Q using array

05e14040-523e-4baf-a4d1-011ce69ab14c/3405-1
00:16:21.447 --> 00:16:24.836
and we learned that you know the
whole disadvantage of array is

05e14040-523e-4baf-a4d1-011ce69ab14c/3405-2
00:16:24.836 --> 00:16:25.683
coming to stack.

05e14040-523e-4baf-a4d1-011ce69ab14c/3418-0
00:16:26.083 --> 00:16:28.963
So you can also implement a
stack using a linked list.

05e14040-523e-4baf-a4d1-011ce69ab14c/3425-0
00:16:28.973 --> 00:16:30.923
Also something like this right?

05e14040-523e-4baf-a4d1-011ce69ab14c/3444-0
00:16:30.933 --> 00:16:35.622
For example, what you can do is
you can make the nodes to be

05e14040-523e-4baf-a4d1-011ce69ab14c/3444-1
00:16:35.622 --> 00:16:37.543
your stack element right?

05e14040-523e-4baf-a4d1-011ce69ab14c/3451-0
00:16:37.553 --> 00:16:39.223
For example, this is pointing to
Rome.

05e14040-523e-4baf-a4d1-011ce69ab14c/3477-0
00:16:39.233 --> 00:16:43.632
This is to Seattle and so on,
and you will decide this trailer

05e14040-523e-4baf-a4d1-011ce69ab14c/3477-1
00:16:43.632 --> 00:16:46.703
node or tail node to act as your
top right.

05e14040-523e-4baf-a4d1-011ce69ab14c/3506-0
00:16:46.713 --> 00:16:49.777
So only in One Direction you
will keep adding and only in

05e14040-523e-4baf-a4d1-011ce69ab14c/3506-1
00:16:49.777 --> 00:16:52.947
that direction you will keep
removing meaning now only this

05e14040-523e-4baf-a4d1-011ce69ab14c/3506-2
00:16:52.947 --> 00:16:54.003
tail can be removed.

05e14040-523e-4baf-a4d1-011ce69ab14c/3527-0
00:16:54.293 --> 00:16:57.132
Only this Toronto can be removed
and once you remove it you will

05e14040-523e-4baf-a4d1-011ce69ab14c/3527-1
00:16:57.132 --> 00:16:58.703
be back to this particular
Seattle.

05e14040-523e-4baf-a4d1-011ce69ab14c/3536-0
00:16:59.113 --> 00:17:00.623
If you remove Seattle, you'll
come back to Rome.

05e14040-523e-4baf-a4d1-011ce69ab14c/3555-0
00:17:02.143 --> 00:17:05.052
So basically the head or the
tail of the list could serve as

05e14040-523e-4baf-a4d1-011ce69ab14c/3555-1
00:17:05.052 --> 00:17:06.053
the top of the stack.

05e14040-523e-4baf-a4d1-011ce69ab14c/3558-0
00:17:07.013 --> 00:17:07.623
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/3564-0
00:17:07.753 --> 00:17:09.013
Is everyone understanding this
part?

05e14040-523e-4baf-a4d1-011ce69ab14c/3612-0
00:17:10.823 --> 00:17:13.728
So basically if you want to
implement a stack that concept

05e14040-523e-4baf-a4d1-011ce69ab14c/3612-1
00:17:13.728 --> 00:17:16.633
that is your, you know last in
first out concept using the

05e14040-523e-4baf-a4d1-011ce69ab14c/3612-2
00:17:16.633 --> 00:17:19.833
linked list you will just create
a singly or doubly linked list.

05e14040-523e-4baf-a4d1-011ce69ab14c/3618-0
00:17:20.203 --> 00:17:23.753
But you will ensure that only
only One Direction you can add.

05e14040-523e-4baf-a4d1-011ce69ab14c/3641-0
00:17:23.763 --> 00:17:26.383
Now you cannot add in between
this room and Seattle, or

05e14040-523e-4baf-a4d1-011ce69ab14c/3641-1
00:17:26.383 --> 00:17:29.003
between Seattle and Toronto, or
you cannot delete Rome.

05e14040-523e-4baf-a4d1-011ce69ab14c/3662-0
00:17:29.063 --> 00:17:32.269
All that options are now gone
because now you are implementing

05e14040-523e-4baf-a4d1-011ce69ab14c/3662-1
00:17:32.269 --> 00:17:33.693
a stack using a linked list.

05e14040-523e-4baf-a4d1-011ce69ab14c/3711-0
00:17:34.163 --> 00:17:38.200
So the only option that you can
do is you can keep adding in one

05e14040-523e-4baf-a4d1-011ce69ab14c/3711-1
00:17:38.200 --> 00:17:42.112
end that is at the tail end, or
if you want to delete you just

05e14040-523e-4baf-a4d1-011ce69ab14c/3711-2
00:17:42.112 --> 00:17:46.086
delete that element pointed by
tail, which is nothing what your

05e14040-523e-4baf-a4d1-011ce69ab14c/3711-3
00:17:46.086 --> 00:17:46.893
top of stack.

05e14040-523e-4baf-a4d1-011ce69ab14c/3713-0
00:17:48.283 --> 00:17:48.773
Yes, no.

05e14040-523e-4baf-a4d1-011ce69ab14c/3724-0
00:17:48.783 --> 00:17:50.993
Can you just quickly, you know,
I don't see any replies.

05e14040-523e-4baf-a4d1-011ce69ab14c/3731-0
00:17:53.533 --> 00:17:53.903
You'll get.

05e14040-523e-4baf-a4d1-011ce69ab14c/3749-0
00:17:53.913 --> 00:17:56.930
How do you implement a stack
using a linked list to search a

05e14040-523e-4baf-a4d1-011ce69ab14c/3749-1
00:17:56.930 --> 00:17:58.413
particular element in English?

05e14040-523e-4baf-a4d1-011ce69ab14c/3757-0
00:17:58.423 --> 00:17:59.693
How can we decide whether to go?

05e14040-523e-4baf-a4d1-011ce69ab14c/3767-0
00:17:59.703 --> 00:18:01.273
You have to go it from the head
itself.

05e14040-523e-4baf-a4d1-011ce69ab14c/3769-0
00:18:01.283 --> 00:18:01.513
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/3779-0
00:18:01.523 --> 00:18:03.193
So you're getting too confused.

05e14040-523e-4baf-a4d1-011ce69ab14c/3792-0
00:18:03.483 --> 00:18:06.953
You can start with either from
you know, head or trailer.

05e14040-523e-4baf-a4d1-011ce69ab14c/3809-0
00:18:06.963 --> 00:18:10.172
It is the same complexity which
has big of yen that don't worry

05e14040-523e-4baf-a4d1-011ce69ab14c/3809-1
00:18:10.172 --> 00:18:10.623
about it.

05e14040-523e-4baf-a4d1-011ce69ab14c/3821-0
00:18:12.633 --> 00:18:13.983
So this this is another concept.

05e14040-523e-4baf-a4d1-011ce69ab14c/3847-0
00:18:13.993 --> 00:18:16.954
Either you can take tail or you
can take head, meaning in that

05e14040-523e-4baf-a4d1-011ce69ab14c/3847-1
00:18:16.954 --> 00:18:19.633
case the link list will grow in
the left side direction.

05e14040-523e-4baf-a4d1-011ce69ab14c/3853-0
00:18:19.643 --> 00:18:21.083
You'll keep adding here.

05e14040-523e-4baf-a4d1-011ce69ab14c/3887-0
00:18:21.313 --> 00:18:24.688
You know in this side you will
keep adding, right, Krishna,

05e14040-523e-4baf-a4d1-011ce69ab14c/3887-1
00:18:24.688 --> 00:18:28.344
either you can start adding and
you you are growing it from left

05e14040-523e-4baf-a4d1-011ce69ab14c/3887-2
00:18:28.344 --> 00:18:29.243
to right, right.

05e14040-523e-4baf-a4d1-011ce69ab14c/3895-0
00:18:29.253 --> 00:18:30.973
Otherwise you can add it in this
deck.

05e14040-523e-4baf-a4d1-011ce69ab14c/3911-0
00:18:32.473 --> 00:18:35.943
Similarly for Q you will have a
enough simple linked list.

05e14040-523e-4baf-a4d1-011ce69ab14c/3951-0
00:18:35.953 --> 00:18:39.279
You will have both head and tail
now coming into action when you

05e14040-523e-4baf-a4d1-011ce69ab14c/3951-1
00:18:39.279 --> 00:18:42.195
want to keep adding some
element, you will add it in the

05e14040-523e-4baf-a4d1-011ce69ab14c/3951-2
00:18:42.195 --> 00:18:45.060
tail end and when you want to
delete something you will

05e14040-523e-4baf-a4d1-011ce69ab14c/3951-3
00:18:45.060 --> 00:18:46.083
increment your head.

05e14040-523e-4baf-a4d1-011ce69ab14c/3984-0
00:18:46.713 --> 00:18:50.760
So now in this diagram, can
someone point me to what is head

05e14040-523e-4baf-a4d1-011ce69ab14c/3984-1
00:18:50.760 --> 00:18:54.873
equal into in queue? And you
also we had two variables right?

05e14040-523e-4baf-a4d1-011ce69ab14c/3999-0
00:18:55.473 --> 00:18:59.042
So if you consider this diagram,
what is tails equivalent and

05e14040-523e-4baf-a4d1-011ce69ab14c/3999-1
00:18:59.042 --> 00:19:00.423
what is head equivalent?

05e14040-523e-4baf-a4d1-011ce69ab14c/4004-0
00:19:01.803 --> 00:19:02.503
Ask him what it means.

05e14040-523e-4baf-a4d1-011ce69ab14c/4012-0
00:19:02.513 --> 00:19:03.763
Bang on that is friend.

05e14040-523e-4baf-a4d1-011ce69ab14c/4028-0
00:19:03.903 --> 00:19:07.504
Yeah, head is nothing but your
friend and tail is nothing but

05e14040-523e-4baf-a4d1-011ce69ab14c/4028-1
00:19:07.504 --> 00:19:08.433
your rare right.

05e14040-523e-4baf-a4d1-011ce69ab14c/4048-0
00:19:08.443 --> 00:19:11.174
So you will keep adding in this
direction and you will keep

05e14040-523e-4baf-a4d1-011ce69ab14c/4048-1
00:19:11.174 --> 00:19:12.493
deleting from this direction.

05e14040-523e-4baf-a4d1-011ce69ab14c/4098-0
00:19:12.983 --> 00:19:16.650
And since this is a linked list,
there is no problem of circular

05e14040-523e-4baf-a4d1-011ce69ab14c/4098-1
00:19:16.650 --> 00:19:20.034
or all this because I can keep
adding even you know I don't

05e14040-523e-4baf-a4d1-011ce69ab14c/4098-2
00:19:20.034 --> 00:19:23.249
have next location available, I
can go and create a node

05e14040-523e-4baf-a4d1-011ce69ab14c/4098-3
00:19:23.249 --> 00:19:26.013
anywhere in memory and then I
will link it here.

05e14040-523e-4baf-a4d1-011ce69ab14c/4111-0
00:19:26.823 --> 00:19:32.013
So there is no problem of that
space constraint here, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/4142-0
00:19:33.123 --> 00:19:36.386
This is exactly what we
discussed yesterday, and there's

05e14040-523e-4baf-a4d1-011ce69ab14c/4142-1
00:19:36.386 --> 00:19:39.992
this appendix for all of you who
were asking how to convert in

05e14040-523e-4baf-a4d1-011ce69ab14c/4142-2
00:19:39.992 --> 00:19:40.793
fix and so on.

05e14040-523e-4baf-a4d1-011ce69ab14c/4148-0
00:19:40.803 --> 00:19:41.693
There is this algorithm.

05e14040-523e-4baf-a4d1-011ce69ab14c/4192-0
00:19:41.703 --> 00:19:45.228
There is 2 examples I have given
right, so very clear example

05e14040-523e-4baf-a4d1-011ce69ab14c/4192-1
00:19:45.228 --> 00:19:48.412
right and you can go about
trying this and there's also

05e14040-523e-4baf-a4d1-011ce69ab14c/4192-2
00:19:48.412 --> 00:19:52.051
some exercises and for this also
there is already a URL you can

05e14040-523e-4baf-a4d1-011ce69ab14c/4192-3
00:19:52.051 --> 00:19:52.733
put this in.

05e14040-523e-4baf-a4d1-011ce69ab14c/4195-0
00:19:52.793 --> 00:19:54.883
Get your solutions right.

05e14040-523e-4baf-a4d1-011ce69ab14c/4217-0
00:19:55.133 --> 00:19:58.387
So try to solve these two and
you know try to, you know, get

05e14040-523e-4baf-a4d1-011ce69ab14c/4217-1
00:19:58.387 --> 00:19:59.293
the hang of this.

05e14040-523e-4baf-a4d1-011ce69ab14c/4241-0
00:19:59.303 --> 00:20:02.282
If it is still not clear, please
let me know the next class we

05e14040-523e-4baf-a4d1-011ce69ab14c/4241-1
00:20:02.282 --> 00:20:05.023
will try to cover this concept
also in the first webinar.

05e14040-523e-4baf-a4d1-011ce69ab14c/4243-0
00:20:06.213 --> 00:20:06.413
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/4250-0
00:20:06.423 --> 00:20:07.373
Is it clear, guys, all of you?

05e14040-523e-4baf-a4d1-011ce69ab14c/4254-0
00:20:13.603 --> 00:20:13.763
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/4267-0
00:20:15.253 --> 00:20:17.623
What will be the order of delete
same like your queue right?

05e14040-523e-4baf-a4d1-011ce69ab14c/4290-0
00:20:17.633 --> 00:20:20.052
So you'll have to keep
incrementing your friend in this

05e14040-523e-4baf-a4d1-011ce69ab14c/4290-1
00:20:20.052 --> 00:20:21.693
case, which is nothing but your
head.

05e14040-523e-4baf-a4d1-011ce69ab14c/4300-0
00:20:22.403 --> 00:20:23.743
You'll just increment 1 by 1.

05e14040-523e-4baf-a4d1-011ce69ab14c/4333-0
00:20:25.773 --> 00:20:28.403
Right, you cannot delete
something in the middle or all

05e14040-523e-4baf-a4d1-011ce69ab14c/4333-1
00:20:28.403 --> 00:20:30.891
there because you're
implementing a queue using your

05e14040-523e-4baf-a4d1-011ce69ab14c/4333-2
00:20:30.891 --> 00:20:31.783
linked list, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/4342-0
00:20:31.793 --> 00:20:33.163
It will follow the queue
principle.

05e14040-523e-4baf-a4d1-011ce69ab14c/4347-0
00:20:33.233 --> 00:20:34.703
That is first in, first out.

05e14040-523e-4baf-a4d1-011ce69ab14c/4354-0
00:20:37.053 --> 00:20:37.803
It's not all good.

05e14040-523e-4baf-a4d1-011ce69ab14c/4357-0
00:20:38.813 --> 00:20:39.123
Tell you.

05e14040-523e-4baf-a4d1-011ce69ab14c/4360-0
00:20:39.133 --> 00:20:39.753
Proceed to today's.

05e14040-523e-4baf-a4d1-011ce69ab14c/4362-0
00:20:42.443 --> 00:20:42.623
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/4378-0
00:20:45.823 --> 00:20:49.419
Yuvarajan question why previous
node node there is implementing

05e14040-523e-4baf-a4d1-011ce69ab14c/4378-1
00:20:49.419 --> 00:20:50.093
queue stack.

05e14040-523e-4baf-a4d1-011ce69ab14c/4405-0
00:20:50.183 --> 00:20:53.028
So basically you can implement
stack or queue using two things

05e14040-523e-4baf-a4d1-011ce69ab14c/4405-1
00:20:53.028 --> 00:20:53.253
guys.

05e14040-523e-4baf-a4d1-011ce69ab14c/4407-0
00:20:53.263 --> 00:20:56.143
Either you can use a linked list
or an array.

05e14040-523e-4baf-a4d1-011ce69ab14c/4418-0
00:20:56.493 --> 00:20:59.267
We discussed about array
completely in the last class and

05e14040-523e-4baf-a4d1-011ce69ab14c/4418-1
00:20:59.267 --> 00:21:00.653
it had certain disadvantages.

05e14040-523e-4baf-a4d1-011ce69ab14c/4445-0
00:21:00.763 --> 00:21:03.788
That is, you cannot extend
dynamically or shrink it

05e14040-523e-4baf-a4d1-011ce69ab14c/4445-1
00:21:03.788 --> 00:21:07.219
dynamically, so we use somehow
the linked list in order to

05e14040-523e-4baf-a4d1-011ce69ab14c/4445-2
00:21:07.219 --> 00:21:08.673
achieve the same concept.

05e14040-523e-4baf-a4d1-011ce69ab14c/4456-0
00:21:09.103 --> 00:21:11.053
Yeah, there's nothing more
complex to it.

05e14040-523e-4baf-a4d1-011ce69ab14c/4472-0
00:21:11.173 --> 00:21:13.725
And because you're using it, you
have the inherent property of

05e14040-523e-4baf-a4d1-011ce69ab14c/4472-1
00:21:13.725 --> 00:21:14.413
linked list also.

05e14040-523e-4baf-a4d1-011ce69ab14c/4484-0
00:21:14.843 --> 00:21:17.061
That is, you have, you know,
enter to the next node and so

05e14040-523e-4baf-a4d1-011ce69ab14c/4484-1
00:21:17.061 --> 00:21:17.173
on.

05e14040-523e-4baf-a4d1-011ce69ab14c/4489-0
00:21:20.843 --> 00:21:22.633
Yeah, cool.

05e14040-523e-4baf-a4d1-011ce69ab14c/4503-0
00:21:22.643 --> 00:21:24.564
I would recommend you to you
know solve those appendix

05e14040-523e-4baf-a4d1-011ce69ab14c/4503-1
00:21:24.564 --> 00:21:24.913
questions.

05e14040-523e-4baf-a4d1-011ce69ab14c/4529-0
00:21:24.923 --> 00:21:27.735
Otherwise, we will just be in
the stack concept even you know

05e14040-523e-4baf-a4d1-011ce69ab14c/4529-1
00:21:27.735 --> 00:21:30.093
one application is not there in
the course handout.

05e14040-523e-4baf-a4d1-011ce69ab14c/4538-0
00:21:30.163 --> 00:21:31.613
But I thought, you know, it's
important.

05e14040-523e-4baf-a4d1-011ce69ab14c/4620-0
00:21:31.623 --> 00:21:34.863
You know the applications of
these, that is where I had

05e14040-523e-4baf-a4d1-011ce69ab14c/4620-1
00:21:34.863 --> 00:21:38.276
covered that you know postfix
evaluation, but for infix to

05e14040-523e-4baf-a4d1-011ce69ab14c/4620-2
00:21:38.276 --> 00:21:41.805
postfix I will recommend that
you know you look at the slide

05e14040-523e-4baf-a4d1-011ce69ab14c/4620-3
00:21:41.805 --> 00:21:44.929
and you know practice them and
if you are not able to

05e14040-523e-4baf-a4d1-011ce69ab14c/4620-4
00:21:44.929 --> 00:21:48.631
understand it just you know post
a note or you know let me know

05e14040-523e-4baf-a4d1-011ce69ab14c/4620-5
00:21:48.631 --> 00:21:52.102
in the next class and we will
cover it in the 21st December

05e14040-523e-4baf-a4d1-011ce69ab14c/4620-6
00:21:52.102 --> 00:21:53.143
maybe in our yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/4628-0
00:21:53.473 --> 00:21:55.403
So we go of one way CR.

05e14040-523e-4baf-a4d1-011ce69ab14c/4658-0
00:21:55.413 --> 00:21:59.077
So if you want to add something
in the beginning or you know at

05e14040-523e-4baf-a4d1-011ce69ab14c/4658-1
00:21:59.077 --> 00:22:02.798
the end, you know since you have
header node, it is complexities

05e14040-523e-4baf-a4d1-011ce69ab14c/4658-2
00:22:02.798 --> 00:22:03.313
constant.

05e14040-523e-4baf-a4d1-011ce69ab14c/4675-0
00:22:03.543 --> 00:22:07.485
Otherwise it is we go off then
because you have to traverse and

05e14040-523e-4baf-a4d1-011ce69ab14c/4675-1
00:22:07.485 --> 00:22:08.593
then insert, yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/4688-0
00:22:10.433 --> 00:22:11.923
I'll again recommend your batch.

05e14040-523e-4baf-a4d1-011ce69ab14c/4692-0
00:22:12.353 --> 00:22:13.813
All the recording so far.

05e14040-523e-4baf-a4d1-011ce69ab14c/4705-0
00:22:13.823 --> 00:22:16.694
Please watch them again and
again because they're all very

05e14040-523e-4baf-a4d1-011ce69ab14c/4705-1
00:22:16.694 --> 00:22:17.083
related.

05e14040-523e-4baf-a4d1-011ce69ab14c/4734-0
00:22:17.413 --> 00:22:20.318
Yeah, we learned about what is
bigger of and what is constant

05e14040-523e-4baf-a4d1-011ce69ab14c/4734-1
00:22:20.318 --> 00:22:23.222
time complexity and so on in the
very first and second class,

05e14040-523e-4baf-a4d1-011ce69ab14c/4734-2
00:22:23.222 --> 00:22:23.503
right.

05e14040-523e-4baf-a4d1-011ce69ab14c/4738-0
00:22:23.513 --> 00:22:24.563
They'll all be related.

05e14040-523e-4baf-a4d1-011ce69ab14c/4789-0
00:22:24.613 --> 00:22:27.952
So today, what will be learning
is related to last class right

05e14040-523e-4baf-a4d1-011ce69ab14c/4789-1
00:22:27.952 --> 00:22:31.237
then since it was just yesterday
it is fine but from the next

05e14040-523e-4baf-a4d1-011ce69ab14c/4789-2
00:22:31.237 --> 00:22:34.522
week onwards, at a point where
you will reach I will show you

05e14040-523e-4baf-a4d1-011ce69ab14c/4789-3
00:22:34.522 --> 00:22:37.383
an algorithm which uses all 15
classes concept right?

05e14040-523e-4baf-a4d1-011ce69ab14c/4808-0
00:22:37.733 --> 00:22:40.733
So that is why it is very
important that you keep

05e14040-523e-4baf-a4d1-011ce69ab14c/4808-1
00:22:40.733 --> 00:22:43.553
revisiting what we have learned
so far, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/4812-0
00:22:45.423 --> 00:22:45.673
Cool.

05e14040-523e-4baf-a4d1-011ce69ab14c/4847-0
00:22:45.683 --> 00:22:48.948
That being said, welcome to the
4th contact session for data

05e14040-523e-4baf-a4d1-011ce69ab14c/4847-1
00:22:48.948 --> 00:22:52.319
structures and algorithm design,
and today we will start a new

05e14040-523e-4baf-a4d1-011ce69ab14c/4847-2
00:22:52.319 --> 00:22:53.763
topic which is price right?

05e14040-523e-4baf-a4d1-011ce69ab14c/4862-0
00:22:55.243 --> 00:22:58.034
To recap of last class, that is
exactly what we did so far,

05e14040-523e-4baf-a4d1-011ce69ab14c/4862-1
00:22:58.034 --> 00:22:58.313
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/4895-0
00:22:58.323 --> 00:23:01.724
We learned about stacks, queues,
arrays, link list, the power of

05e14040-523e-4baf-a4d1-011ce69ab14c/4895-1
00:23:01.724 --> 00:23:04.810
linked list, right, doubly
linked list, singly linked list

05e14040-523e-4baf-a4d1-011ce69ab14c/4895-2
00:23:04.810 --> 00:23:05.333
and so on.

05e14040-523e-4baf-a4d1-011ce69ab14c/4911-0
00:23:05.663 --> 00:23:08.887
All those we have learned, but
so far all those data structures

05e14040-523e-4baf-a4d1-011ce69ab14c/4911-1
00:23:08.887 --> 00:23:09.693
that we learned.

05e14040-523e-4baf-a4d1-011ce69ab14c/4918-0
00:23:09.903 --> 00:23:12.063
What is 1 common property among
them?

05e14040-523e-4baf-a4d1-011ce69ab14c/4937-0
00:23:14.603 --> 00:23:17.201
Can you real quick let me know
what is the common property

05e14040-523e-4baf-a4d1-011ce69ab14c/4937-1
00:23:17.201 --> 00:23:17.993
among all of them?

05e14040-523e-4baf-a4d1-011ce69ab14c/4952-0
00:23:18.563 --> 00:23:24.051
Yeah, between array stack Q link
list right it is a linear data

05e14040-523e-4baf-a4d1-011ce69ab14c/4952-1
00:23:24.051 --> 00:23:25.423
structure right?

05e14040-523e-4baf-a4d1-011ce69ab14c/4970-0
00:23:25.503 --> 00:23:29.008
Whether in memory or not, that
is fine, but they're all linear

05e14040-523e-4baf-a4d1-011ce69ab14c/4970-1
00:23:29.008 --> 00:23:29.953
in nature, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/4986-0
00:23:31.223 --> 00:23:34.653
But it's in every use case that
might not be true.

05e14040-523e-4baf-a4d1-011ce69ab14c/5007-0
00:23:34.703 --> 00:23:37.754
There might be cases where I
need to store data in a

05e14040-523e-4baf-a4d1-011ce69ab14c/5007-1
00:23:37.754 --> 00:23:39.193
nonlinear fashion, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/5019-0
00:23:39.283 --> 00:23:41.173
That is why we have other
concepts like trees.

05e14040-523e-4baf-a4d1-011ce69ab14c/5034-0
00:23:41.583 --> 00:23:44.240
We will learn about, you know,
tree terminology, the different

05e14040-523e-4baf-a4d1-011ce69ab14c/5034-1
00:23:44.240 --> 00:23:44.493
types.

05e14040-523e-4baf-a4d1-011ce69ab14c/5055-0
00:23:44.583 --> 00:23:48.457
How do you represent a tree and
traverses, and so on, and we

05e14040-523e-4baf-a4d1-011ce69ab14c/5055-1
00:23:48.457 --> 00:23:50.933
will close the class for today,
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/5098-0
00:23:51.083 --> 00:23:53.943
So we have studied all this,
that is array linked list,

05e14040-523e-4baf-a4d1-011ce69ab14c/5098-1
00:23:53.943 --> 00:23:57.059
stacks, queues and so on and
they were all ideally more like

05e14040-523e-4baf-a4d1-011ce69ab14c/5098-2
00:23:57.059 --> 00:24:00.021
a linear or if you want to
visualize more like a straight

05e14040-523e-4baf-a4d1-011ce69ab14c/5098-3
00:24:00.021 --> 00:24:00.633
line, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/5105-0
00:24:01.363 --> 00:24:04.323
But how do you obtain
relationships, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/5129-0
00:24:04.333 --> 00:24:07.638
For example, in your
organization, are you all in a

05e14040-523e-4baf-a4d1-011ce69ab14c/5129-1
00:24:07.638 --> 00:24:11.133
flat organization where everyone
is, you know, linear?

05e14040-523e-4baf-a4d1-011ce69ab14c/5141-0
00:24:11.623 --> 00:24:13.033
Can I just place all of you in a
list?

05e14040-523e-4baf-a4d1-011ce69ab14c/5145-0
00:24:14.743 --> 00:24:15.453
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/5154-0
00:24:15.603 --> 00:24:17.373
If you are, then you are in a
lucky org.

05e14040-523e-4baf-a4d1-011ce69ab14c/5163-0
00:24:17.423 --> 00:24:20.513
Yeah, but most probably there is
a CEO.

05e14040-523e-4baf-a4d1-011ce69ab14c/5185-0
00:24:20.523 --> 00:24:24.181
There's a board member, there
are vice presidents, directors,

05e14040-523e-4baf-a4d1-011ce69ab14c/5185-1
00:24:24.181 --> 00:24:27.013
managers and then you know there
are employees.

05e14040-523e-4baf-a4d1-011ce69ab14c/5191-0
00:24:27.023 --> 00:24:28.293
Then you have interns.

05e14040-523e-4baf-a4d1-011ce69ab14c/5195-0
00:24:28.313 --> 00:24:29.313
And things like that.

05e14040-523e-4baf-a4d1-011ce69ab14c/5201-0
00:24:29.323 --> 00:24:29.773
So.

05e14040-523e-4baf-a4d1-011ce69ab14c/5212-0
00:24:30.203 --> 00:24:32.913
So when was telling that this is
a hierarchy, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/5222-0
00:24:33.223 --> 00:24:35.603
So how do you represent
hierarchical data?

05e14040-523e-4baf-a4d1-011ce69ab14c/5235-0
00:24:36.523 --> 00:24:39.043
That is where trees are coming
into play.

05e14040-523e-4baf-a4d1-011ce69ab14c/5248-0
00:24:40.573 --> 00:24:43.970
But before that, how should one
choose which data structure to

05e14040-523e-4baf-a4d1-011ce69ab14c/5248-1
00:24:43.970 --> 00:24:44.563
use, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/5256-0
00:24:45.053 --> 00:24:46.303
So there are plenty of ways.

05e14040-523e-4baf-a4d1-011ce69ab14c/5263-0
00:24:46.313 --> 00:24:48.483
That is what needs to be stored.

05e14040-523e-4baf-a4d1-011ce69ab14c/5275-0
00:24:48.493 --> 00:24:50.503
You'll have to first of all look
at the data, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/5294-0
00:24:50.513 --> 00:24:54.241
Is it linear in nature or is it
having some relationship like

05e14040-523e-4baf-a4d1-011ce69ab14c/5294-1
00:24:54.241 --> 00:24:55.683
hierarchy in them right?

05e14040-523e-4baf-a4d1-011ce69ab14c/5319-0
00:24:55.753 --> 00:24:58.835
Or is there something like, you
know, a network type of relation

05e14040-523e-4baf-a4d1-011ce69ab14c/5319-1
00:24:58.835 --> 00:25:01.443
where many people can be related
to many other people?

05e14040-523e-4baf-a4d1-011ce69ab14c/5325-0
00:25:01.693 --> 00:25:02.783
Is there something like that?

05e14040-523e-4baf-a4d1-011ce69ab14c/5330-0
00:25:03.253 --> 00:25:03.873
Things like that.

05e14040-523e-4baf-a4d1-011ce69ab14c/5352-0
00:25:03.883 --> 00:25:07.003
Firstly, you need to have a look
at what is going to be stored

05e14040-523e-4baf-a4d1-011ce69ab14c/5352-1
00:25:07.003 --> 00:25:08.983
and then the cost of operations,
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/5360-0
00:25:09.163 --> 00:25:11.553
So what Operation am I going to
do?

05e14040-523e-4baf-a4d1-011ce69ab14c/5374-0
00:25:11.563 --> 00:25:13.993
A lot of times right is it
insert.

05e14040-523e-4baf-a4d1-011ce69ab14c/5418-0
00:25:14.043 --> 00:25:17.732
Usually that is happening or is
it more of a search that is

05e14040-523e-4baf-a4d1-011ce69ab14c/5418-1
00:25:17.732 --> 00:25:21.422
happening or which type of
operation I'm doing most and you

05e14040-523e-4baf-a4d1-011ce69ab14c/5418-2
00:25:21.422 --> 00:25:25.418
will ensure that you will choose
such a data structure which has

05e14040-523e-4baf-a4d1-011ce69ab14c/5418-3
00:25:25.418 --> 00:25:28.123
that operation as a good
complexity, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/5430-0
00:25:29.263 --> 00:25:31.386
And then the memory use and of
course the ease of

05e14040-523e-4baf-a4d1-011ce69ab14c/5430-1
00:25:31.386 --> 00:25:32.023
implementation.

05e14040-523e-4baf-a4d1-011ce69ab14c/5445-0
00:25:32.103 --> 00:25:34.815
So these are some guiding
principles on which data

05e14040-523e-4baf-a4d1-011ce69ab14c/5445-1
00:25:34.815 --> 00:25:36.623
structure you will choose.
Right?

05e14040-523e-4baf-a4d1-011ce69ab14c/5453-0
00:25:38.313 --> 00:25:41.183
So, not nonlinear data
structures, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/5466-0
00:25:41.193 --> 00:25:44.083
So linear access time of linked
list is still expensive, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/5491-0
00:25:44.273 --> 00:25:48.132
So does there exist any simple
data structure for which the

05e14040-523e-4baf-a4d1-011ce69ab14c/5491-1
00:25:48.132 --> 00:25:50.833
running time is, you know, log
in so far?

05e14040-523e-4baf-a4d1-011ce69ab14c/5515-0
00:25:50.843 --> 00:25:54.228
Have we learned any data
structure for which all the

05e14040-523e-4baf-a4d1-011ce69ab14c/5515-1
00:25:54.228 --> 00:25:57.803
operations insert, delete,
search all of them is login?

05e14040-523e-4baf-a4d1-011ce69ab14c/5519-0
00:25:57.913 --> 00:25:59.013
Have we learned anything like
that?

05e14040-523e-4baf-a4d1-011ce69ab14c/5538-0
00:26:01.453 --> 00:26:04.229
So we will continue this search,
OK, this is more like a treasure

05e14040-523e-4baf-a4d1-011ce69ab14c/5538-1
00:26:04.229 --> 00:26:04.523
hunter.

05e14040-523e-4baf-a4d1-011ce69ab14c/5554-0
00:26:04.783 --> 00:26:08.958
We want a data structure which
is going to give us log N

05e14040-523e-4baf-a4d1-011ce69ab14c/5554-1
00:26:08.958 --> 00:26:09.763
complexity.

05e14040-523e-4baf-a4d1-011ce69ab14c/5565-0
00:26:10.133 --> 00:26:11.543
So by the way, log N is good or
bad.

05e14040-523e-4baf-a4d1-011ce69ab14c/5578-0
00:26:13.063 --> 00:26:19.233
The very first class constant
log N log NN square N cube.

05e14040-523e-4baf-a4d1-011ce69ab14c/5582-0
00:26:19.423 --> 00:26:20.453
Yeah, it is good.

05e14040-523e-4baf-a4d1-011ce69ab14c/5589-0
00:26:20.823 --> 00:26:22.333
So now we are looking at.

05e14040-523e-4baf-a4d1-011ce69ab14c/5630-0
00:26:22.403 --> 00:26:26.034
I wanted it a structure for
which all these operations,

05e14040-523e-4baf-a4d1-011ce69ab14c/5630-1
00:26:26.034 --> 00:26:30.184
inserting, deleting, searching
all of them are log N thought we

05e14040-523e-4baf-a4d1-011ce69ab14c/5630-2
00:26:30.184 --> 00:26:34.203
have not learned anything about
that right stack Q link list.

05e14040-523e-4baf-a4d1-011ce69ab14c/5648-0
00:26:34.213 --> 00:26:37.003
All of them are giving me big of
yen in some or the other

05e14040-523e-4baf-a4d1-011ce69ab14c/5648-1
00:26:37.003 --> 00:26:37.483
operation.

05e14040-523e-4baf-a4d1-011ce69ab14c/5662-0
00:26:37.733 --> 00:26:41.093
I want some data structure which
will give me log in, but let's

05e14040-523e-4baf-a4d1-011ce69ab14c/5662-1
00:26:41.093 --> 00:26:41.303
see.

05e14040-523e-4baf-a4d1-011ce69ab14c/5671-0
00:26:41.353 --> 00:26:42.823
Let's see who is going to give
us.

05e14040-523e-4baf-a4d1-011ce69ab14c/5694-0
00:26:42.913 --> 00:26:45.617
Yeah, let that search continue
and before the end of the

05e14040-523e-4baf-a4d1-011ce69ab14c/5694-1
00:26:45.617 --> 00:26:47.513
semester, we'll get an answer
for that.

05e14040-523e-4baf-a4d1-011ce69ab14c/5712-0
00:26:49.423 --> 00:26:53.227
So trees will learn the basic
concepts, traversals and all

05e14040-523e-4baf-a4d1-011ce69ab14c/5712-1
00:26:53.227 --> 00:26:53.613
those.

05e14040-523e-4baf-a4d1-011ce69ab14c/5723-0
00:26:53.683 --> 00:26:56.663
But first thing first, trees are
going to store elements

05e14040-523e-4baf-a4d1-011ce69ab14c/5723-1
00:26:56.663 --> 00:26:57.813
hierarchically, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/5733-0
00:26:58.463 --> 00:27:00.693
And the top element is called as
the root.

05e14040-523e-4baf-a4d1-011ce69ab14c/5741-0
00:27:01.263 --> 00:27:02.683
There are several examples,
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/5754-0
00:27:02.693 --> 00:27:05.755
The family structure, family
tree, directory structure,

05e14040-523e-4baf-a4d1-011ce69ab14c/5754-1
00:27:05.755 --> 00:27:07.723
organizational structure and so
on.

05e14040-523e-4baf-a4d1-011ce69ab14c/5764-0
00:27:09.553 --> 00:27:10.963
So this is an actual view of a
tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/5791-0
00:27:10.973 --> 00:27:14.168
Do you agree you have the root
at the bottom and then you have,

05e14040-523e-4baf-a4d1-011ce69ab14c/5791-1
00:27:14.168 --> 00:27:17.164
you know, branches coming out
and then you have the leaves,

05e14040-523e-4baf-a4d1-011ce69ab14c/5791-2
00:27:17.164 --> 00:27:17.463
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/5812-0
00:27:17.473 --> 00:27:20.635
This is a normal view of a tree,
but what is a computer scientist

05e14040-523e-4baf-a4d1-011ce69ab14c/5812-1
00:27:20.635 --> 00:27:21.353
view of a tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/5816-0
00:27:22.403 --> 00:27:22.593
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/5849-0
00:27:22.603 --> 00:27:27.144
If you just reverse this right
so always you have the root at

05e14040-523e-4baf-a4d1-011ce69ab14c/5849-1
00:27:27.144 --> 00:27:31.610
the top and then from the root
you have branches coming down

05e14040-523e-4baf-a4d1-011ce69ab14c/5849-2
00:27:31.610 --> 00:27:34.173
and then you have the leads,
yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/5860-0
00:27:35.573 --> 00:27:38.783
So a tree is a hierarchical data
structure or abstract data type.

05e14040-523e-4baf-a4d1-011ce69ab14c/5867-0
00:27:38.853 --> 00:27:40.363
Why is it abstract data type?

05e14040-523e-4baf-a4d1-011ce69ab14c/5888-0
00:27:40.693 --> 00:27:44.202
Because again, we are going to
use either array or linked list

05e14040-523e-4baf-a4d1-011ce69ab14c/5888-1
00:27:44.202 --> 00:27:45.983
in order to implement it, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/5899-0
00:27:45.993 --> 00:27:48.053
It is more of a high level
concept.

05e14040-523e-4baf-a4d1-011ce69ab14c/5923-0
00:27:48.153 --> 00:27:52.116
You can implement it using
underlying data structures, so a

05e14040-523e-4baf-a4d1-011ce69ab14c/5923-1
00:27:52.116 --> 00:27:56.013
tree or upside down is an
abstract model of a hierarchical

05e14040-523e-4baf-a4d1-011ce69ab14c/5923-2
00:27:56.013 --> 00:27:56.673
structure.

05e14040-523e-4baf-a4d1-011ce69ab14c/5934-0
00:27:57.273 --> 00:28:00.543
A tree consists of nodes with a
parent child relationship.

05e14040-523e-4baf-a4d1-011ce69ab14c/5941-0
00:28:00.653 --> 00:28:01.453
Yeah, very important.

05e14040-523e-4baf-a4d1-011ce69ab14c/5977-0
00:28:02.443 --> 00:28:06.255
It is having a parent child
relationship and that is how you

05e14040-523e-4baf-a4d1-011ce69ab14c/5977-1
00:28:06.255 --> 00:28:09.567
are now bringing in that
hierarchy here each element

05e14040-523e-4baf-a4d1-011ce69ab14c/5977-2
00:28:09.567 --> 00:28:13.441
except the Tom element has a
parrot and zero or more children

05e14040-523e-4baf-a4d1-011ce69ab14c/5977-3
00:28:13.441 --> 00:28:14.003
elements.

05e14040-523e-4baf-a4d1-011ce69ab14c/6008-0
00:28:15.273 --> 00:28:18.926
So for example, if you consider
here laptop is having a parent

05e14040-523e-4baf-a4d1-011ce69ab14c/6008-1
00:28:18.926 --> 00:28:22.346
which is manufacturing and
manufacturing is again having a

05e14040-523e-4baf-a4d1-011ce69ab14c/6008-2
00:28:22.346 --> 00:28:23.563
parent computer ours.

05e14040-523e-4baf-a4d1-011ce69ab14c/6020-0
00:28:24.343 --> 00:28:27.321
Similarly for Asia, it is
international sales computer and

05e14040-523e-4baf-a4d1-011ce69ab14c/6020-1
00:28:27.321 --> 00:28:27.623
so on.

05e14040-523e-4baf-a4d1-011ce69ab14c/6052-0
00:28:28.483 --> 00:28:32.744
So apart from this topmost one,
everyone else has a parent,

05e14040-523e-4baf-a4d1-011ce69ab14c/6052-1
00:28:32.744 --> 00:28:37.359
whereas this one doesn't have a
parent and all of them have zero

05e14040-523e-4baf-a4d1-011ce69ab14c/6052-2
00:28:37.359 --> 00:28:39.063
or more children, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/6075-0
00:28:39.073 --> 00:28:42.583
For example, this Europe, Asia,
Canada, etcetera, do they do not

05e14040-523e-4baf-a4d1-011ce69ab14c/6075-1
00:28:42.583 --> 00:28:43.933
have any children, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/6080-0
00:28:44.023 --> 00:28:46.803
Whereas manufacturing has two
children, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/6087-0
00:28:46.813 --> 00:28:48.793
International has three children
and so on.

05e14040-523e-4baf-a4d1-011ce69ab14c/6097-0
00:28:51.293 --> 00:28:52.323
So what is the tree again?

05e14040-523e-4baf-a4d1-011ce69ab14c/6110-0
00:28:52.653 --> 00:28:56.443
So a tree is a finite non empty
set of elements, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/6116-0
00:28:56.453 --> 00:28:57.743
It is finite in nature.

05e14040-523e-4baf-a4d1-011ce69ab14c/6136-0
00:28:57.873 --> 00:29:01.688
It is non empty and it is going
to represent a hierarchical

05e14040-523e-4baf-a4d1-011ce69ab14c/6136-1
00:29:01.688 --> 00:29:02.323
structure.

05e14040-523e-4baf-a4d1-011ce69ab14c/6147-0
00:29:02.573 --> 00:29:04.313
It consists of parent child
relationship.

05e14040-523e-4baf-a4d1-011ce69ab14c/6151-0
00:29:05.973 --> 00:29:06.863
So again, here.

05e14040-523e-4baf-a4d1-011ce69ab14c/6165-0
00:29:06.923 --> 00:29:09.133
Yeah, if you are able to, you
know, have a look at this.

05e14040-523e-4baf-a4d1-011ce69ab14c/6169-0
00:29:09.993 --> 00:29:10.883
This is the root.

05e14040-523e-4baf-a4d1-011ce69ab14c/6175-0
00:29:10.933 --> 00:29:12.083
It doesn't have any parent.

05e14040-523e-4baf-a4d1-011ce69ab14c/6188-0
00:29:12.093 --> 00:29:15.203
Everyone else has a parent, and
some people have one child.

05e14040-523e-4baf-a4d1-011ce69ab14c/6195-0
00:29:15.213 --> 00:29:16.343
Some people have no child.

05e14040-523e-4baf-a4d1-011ce69ab14c/6206-0
00:29:16.353 --> 00:29:19.163
Some people have two child and
so on right.

05e14040-523e-4baf-a4d1-011ce69ab14c/6218-0
00:29:20.473 --> 00:29:22.823
There are plenty of applications
of tree, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/6232-0
00:29:22.833 --> 00:29:25.363
Your organizational data can be
represented as a tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/6237-0
00:29:25.613 --> 00:29:27.143
Your file systems right?

05e14040-523e-4baf-a4d1-011ce69ab14c/6249-0
00:29:27.153 --> 00:29:30.984
Your file system itself, Linux
and so on, use a tree structure,

05e14040-523e-4baf-a4d1-011ce69ab14c/6249-1
00:29:30.984 --> 00:29:31.343
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/6258-0
00:29:31.493 --> 00:29:33.263
And many programming languages,
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/6273-0
00:29:33.273 --> 00:29:36.243
Your compiler or your ID is also
use them.

05e14040-523e-4baf-a4d1-011ce69ab14c/6311-0
00:29:36.433 --> 00:29:40.447
We look at a couple of examples,
right, so let's stack you, et

05e14040-523e-4baf-a4d1-011ce69ab14c/6311-1
00:29:40.447 --> 00:29:43.887
cetera, linear in nature,
whereas if you want to, you

05e14040-523e-4baf-a4d1-011ce69ab14c/6311-2
00:29:43.887 --> 00:29:47.581
know, convey hierarchical
representation, you need trees,

05e14040-523e-4baf-a4d1-011ce69ab14c/6311-3
00:29:47.581 --> 00:29:47.963
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/6323-0
00:29:48.313 --> 00:29:50.243
I don't know about you, but at
least I use this.

05e14040-523e-4baf-a4d1-011ce69ab14c/6334-0
00:29:50.253 --> 00:29:52.803
For example, say you have root,
then you have home.

05e14040-523e-4baf-a4d1-011ce69ab14c/6345-0
00:29:52.813 --> 00:29:54.913
Then you can have, say, bits
inside bits.

05e14040-523e-4baf-a4d1-011ce69ab14c/6379-0
00:29:54.923 --> 00:29:57.793
You might have, say first
semester in first semester you

05e14040-523e-4baf-a4d1-011ce69ab14c/6379-1
00:29:57.793 --> 00:30:01.065
might have four folders for you
know for courses inside that you

05e14040-523e-4baf-a4d1-011ce69ab14c/6379-2
00:30:01.065 --> 00:30:03.883
might save all the you know
presentations and all that.

05e14040-523e-4baf-a4d1-011ce69ab14c/6381-0
00:30:04.233 --> 00:30:04.873
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/6388-0
00:30:04.913 --> 00:30:05.783
Is there anyone who does that?

05e14040-523e-4baf-a4d1-011ce69ab14c/6399-0
00:30:06.723 --> 00:30:08.873
Yeah, you have a folder called
bits.

05e14040-523e-4baf-a4d1-011ce69ab14c/6429-0
00:30:08.883 --> 00:30:13.384
Inside that you have 4, you know
first semester and then you know

05e14040-523e-4baf-a4d1-011ce69ab14c/6429-1
00:30:13.384 --> 00:30:17.544
all your courses inside the
courses you have your slides and

05e14040-523e-4baf-a4d1-011ce69ab14c/6429-2
00:30:17.544 --> 00:30:17.953
so on.

05e14040-523e-4baf-a4d1-011ce69ab14c/6432-0
00:30:17.963 --> 00:30:18.153
Right.

05e14040-523e-4baf-a4d1-011ce69ab14c/6442-0
00:30:18.163 --> 00:30:20.453
So inherently you're actually
using a tree, correct?

05e14040-523e-4baf-a4d1-011ce69ab14c/6453-0
00:30:20.623 --> 00:30:22.483
So you have the topmost which is
the root.

05e14040-523e-4baf-a4d1-011ce69ab14c/6460-0
00:30:22.783 --> 00:30:23.873
Then you have some folder.

05e14040-523e-4baf-a4d1-011ce69ab14c/6470-0
00:30:23.883 --> 00:30:25.893
Then you have some 4 subfolders
and so on.

05e14040-523e-4baf-a4d1-011ce69ab14c/6512-0
00:30:26.283 --> 00:30:30.280
So there your slide becomes you
know, a child of your DSD, DSD

05e14040-523e-4baf-a4d1-011ce69ab14c/6512-1
00:30:30.280 --> 00:30:34.277
itself is a child of your first
semester and 1st semester is a

05e14040-523e-4baf-a4d1-011ce69ab14c/6512-2
00:30:34.277 --> 00:30:37.893
child of your bits folder or
something like that, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/6525-0
00:30:38.053 --> 00:30:39.953
So in Linux this is very common.

05e14040-523e-4baf-a4d1-011ce69ab14c/6534-0
00:30:39.963 --> 00:30:43.423
So this thing all slash and home
and so on, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/6550-0
00:30:43.433 --> 00:30:47.563
So this itself is a tree
structure moves in a game.

05e14040-523e-4baf-a4d1-011ce69ab14c/6553-0
00:30:47.623 --> 00:30:48.093
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/6581-0
00:30:48.183 --> 00:30:51.154
So there are games like Tic Tac
toe and so on, which you can

05e14040-523e-4baf-a4d1-011ce69ab14c/6581-1
00:30:51.154 --> 00:30:53.881
represent using a tree
hierarchies and organization and

05e14040-523e-4baf-a4d1-011ce69ab14c/6581-2
00:30:53.881 --> 00:30:54.173
so on.

05e14040-523e-4baf-a4d1-011ce69ab14c/6615-0
00:30:54.663 --> 00:30:57.742
Even an index right in many
textbooks, if you have seen, you

05e14040-523e-4baf-a4d1-011ce69ab14c/6615-1
00:30:57.742 --> 00:31:00.769
might have seen an index like
this right features of object

05e14040-523e-4baf-a4d1-011ce69ab14c/6615-2
00:31:00.769 --> 00:31:02.333
orientation is a textbook name.

05e14040-523e-4baf-a4d1-011ce69ab14c/6633-0
00:31:02.743 --> 00:31:04.773
You have chapter one
introduction, Chapter 2,

05e14040-523e-4baf-a4d1-011ce69ab14c/6633-1
00:31:04.773 --> 00:31:07.023
encapsulation, Chapter 3,
polymorphism, Chapter 4,

05e14040-523e-4baf-a4d1-011ce69ab14c/6633-2
00:31:07.023 --> 00:31:07.993
inheritance and so on.

05e14040-523e-4baf-a4d1-011ce69ab14c/6647-0
00:31:08.363 --> 00:31:11.413
So these chapter names have
become the first level children,

05e14040-523e-4baf-a4d1-011ce69ab14c/6647-1
00:31:11.413 --> 00:31:11.713
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/6653-0
00:31:11.723 --> 00:31:12.613
This is the textbook name.

05e14040-523e-4baf-a4d1-011ce69ab14c/6678-0
00:31:12.843 --> 00:31:16.310
These are all the chapter names
inside that you have subsections

05e14040-523e-4baf-a4d1-011ce69ab14c/6678-1
00:31:16.310 --> 00:31:19.563
like vocabulary and topics which
become its children, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/6691-0
00:31:19.573 --> 00:31:22.173
So an index can be translated
into a tree like this.

05e14040-523e-4baf-a4d1-011ce69ab14c/6694-0
00:31:23.233 --> 00:31:23.603
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/6717-0
00:31:23.613 --> 00:31:27.258
Is it clear case all of you it's
actually speaking this left hand

05e14040-523e-4baf-a4d1-011ce69ab14c/6717-1
00:31:27.258 --> 00:31:29.853
side is also hierarchical
representation only.

05e14040-523e-4baf-a4d1-011ce69ab14c/6720-0
00:31:30.033 --> 00:31:30.303
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/6737-0
00:31:30.313 --> 00:31:33.812
So this a is inside introduction
and introduction is inside this

05e14040-523e-4baf-a4d1-011ce69ab14c/6737-1
00:31:33.812 --> 00:31:34.673
textbook, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/6749-0
00:31:34.683 --> 00:31:36.843
So there is inherently some
hierarchy here.

05e14040-523e-4baf-a4d1-011ce69ab14c/6762-0
00:31:37.113 --> 00:31:39.806
So we are now here making more
explicit and drawing it like a

05e14040-523e-4baf-a4d1-011ce69ab14c/6762-1
00:31:39.806 --> 00:31:40.023
tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/6772-0
00:31:41.783 --> 00:31:42.133
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/6788-0
00:31:42.143 --> 00:31:45.985
Your typical organizational
example right there are some

05e14040-523e-4baf-a4d1-011ce69ab14c/6788-1
00:31:45.985 --> 00:31:48.613
managers they report to VP of
Finance.

05e14040-523e-4baf-a4d1-011ce69ab14c/6795-0
00:31:48.673 --> 00:31:50.353
He reports to VP of
manufacturing.

05e14040-523e-4baf-a4d1-011ce69ab14c/6818-0
00:31:50.763 --> 00:31:53.337
They all report to the
President, but the President

05e14040-523e-4baf-a4d1-011ce69ab14c/6818-1
00:31:53.337 --> 00:31:56.553
has, you know, an assistant and
so on, right there is hierarchy.

05e14040-523e-4baf-a4d1-011ce69ab14c/6821-0
00:31:56.783 --> 00:31:57.353
There are trees.

05e14040-523e-4baf-a4d1-011ce69ab14c/6831-0
00:31:59.293 --> 00:32:01.683
Even an arithmetic expression,
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/6843-0
00:32:01.753 --> 00:32:03.203
So we'll not go too deep into
it.

05e14040-523e-4baf-a4d1-011ce69ab14c/6868-0
00:32:03.213 --> 00:32:06.196
I just want to throw some light
that you know, what are the

05e14040-523e-4baf-a4d1-011ce69ab14c/6868-1
00:32:06.196 --> 00:32:09.030
applications, but if you have
learned about courses like

05e14040-523e-4baf-a4d1-011ce69ab14c/6868-2
00:32:09.030 --> 00:32:10.223
compiler designs, right.

05e14040-523e-4baf-a4d1-011ce69ab14c/6876-0
00:32:10.673 --> 00:32:13.753
Has anyone done all those
courses right?

05e14040-523e-4baf-a4d1-011ce69ab14c/6884-0
00:32:13.763 --> 00:32:15.593
How to create your own compiler
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/6919-0
00:32:16.043 --> 00:32:18.926
So it's a very traditional, you
know, typical number assign

05e14040-523e-4baf-a4d1-011ce69ab14c/6919-1
00:32:18.926 --> 00:32:22.000
scores and you will learn that
you know your compilers actually

05e14040-523e-4baf-a4d1-011ce69ab14c/6919-2
00:32:22.000 --> 00:32:23.393
draw trees like these, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/6933-0
00:32:23.783 --> 00:32:27.163
And it will verify if your
statement is correct or not.

05e14040-523e-4baf-a4d1-011ce69ab14c/6944-0
00:32:27.723 --> 00:32:30.073
Otherwise, it'll have some
mistakes in the tree, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/6969-0
00:32:30.073 --> 00:32:33.802
It will want to know ambiguities
in this statement, so it'll

05e14040-523e-4baf-a4d1-011ce69ab14c/6969-1
00:32:33.802 --> 00:32:36.980
actually translate this
expression into a tree like

05e14040-523e-4baf-a4d1-011ce69ab14c/6969-2
00:32:36.980 --> 00:32:37.713
this, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/6980-0
00:32:37.723 --> 00:32:40.473
So they're also trees are being
used, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/7001-0
00:32:40.483 --> 00:32:43.486
And many compilers represent a
program itself as a tree that

05e14040-523e-4baf-a4d1-011ce69ab14c/7001-1
00:32:43.486 --> 00:32:44.913
also couple of them do right.

05e14040-523e-4baf-a4d1-011ce69ab14c/7015-0
00:32:45.203 --> 00:32:48.693
So if then condition then you
know statement and so on.

05e14040-523e-4baf-a4d1-011ce69ab14c/7031-0
00:32:49.003 --> 00:32:54.053
It can also translate that into
A3 type of a structure, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/7038-0
00:32:54.533 --> 00:32:55.523
So far so good, all of you.

05e14040-523e-4baf-a4d1-011ce69ab14c/7051-0
00:32:57.773 --> 00:33:00.363
Just the motivation of what is a
tree data structure.

05e14040-523e-4baf-a4d1-011ce69ab14c/7058-0
00:33:00.413 --> 00:33:02.023
It is a hierarchical data
structure.

05e14040-523e-4baf-a4d1-011ce69ab14c/7069-0
00:33:02.313 --> 00:33:05.393
It is used to represent
hierarchical data, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/7082-0
00:33:06.543 --> 00:33:09.566
So far so good and all these
type of different applications,

05e14040-523e-4baf-a4d1-011ce69ab14c/7082-1
00:33:09.566 --> 00:33:09.863
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/7108-0
00:33:10.993 --> 00:33:15.729
Wherever there is some inherent
hierarchy we should be using the

05e14040-523e-4baf-a4d1-011ce69ab14c/7108-1
00:33:15.729 --> 00:33:20.173
tree data structure, and now
what we will do is, yeah, yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/7111-0
00:33:20.183 --> 00:33:20.973
Which content?

05e14040-523e-4baf-a4d1-011ce69ab14c/7116-0
00:33:21.123 --> 00:33:21.783
Yeah, that is fine.

05e14040-523e-4baf-a4d1-011ce69ab14c/7146-0
00:33:21.793 --> 00:33:24.307
Yeah, if you are understanding
what are the applications that

05e14040-523e-4baf-a4d1-011ce69ab14c/7146-1
00:33:24.307 --> 00:33:26.497
is good enough, I would
recommend you to go deep into

05e14040-523e-4baf-a4d1-011ce69ab14c/7146-2
00:33:26.497 --> 00:33:27.713
all this if you're interested.

05e14040-523e-4baf-a4d1-011ce69ab14c/7148-0
00:33:28.043 --> 00:33:28.393
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/7196-0
00:33:28.403 --> 00:33:32.650
How are expression trees created
so on you can actually go about

05e14040-523e-4baf-a4d1-011ce69ab14c/7196-1
00:33:32.650 --> 00:33:36.766
learning it but not you know,
too deep into it because that is

05e14040-523e-4baf-a4d1-011ce69ab14c/7196-2
00:33:36.766 --> 00:33:41.079
more of a CS, you know, not more
like a data structure thing or I

05e14040-523e-4baf-a4d1-011ce69ab14c/7196-3
00:33:41.079 --> 00:33:42.973
mean your data science thing.

05e14040-523e-4baf-a4d1-011ce69ab14c/7212-0
00:33:44.103 --> 00:33:47.363
So now what we will do is there
are a lot of terminologies for

05e14040-523e-4baf-a4d1-011ce69ab14c/7212-1
00:33:47.363 --> 00:33:47.673
trees.

05e14040-523e-4baf-a4d1-011ce69ab14c/7253-0
00:33:48.063 --> 00:33:51.735
Yeah, across the semester in
your question papers in the

05e14040-523e-4baf-a4d1-011ce69ab14c/7253-1
00:33:51.735 --> 00:33:55.858
normal you know, just like your
we're talking, we will be using

05e14040-523e-4baf-a4d1-011ce69ab14c/7253-2
00:33:55.858 --> 00:33:59.916
a lot of terminologies and we
need to be very, very clear with

05e14040-523e-4baf-a4d1-011ce69ab14c/7253-3
00:33:59.916 --> 00:34:00.753
these, right.

05e14040-523e-4baf-a4d1-011ce69ab14c/7261-0
00:34:00.913 --> 00:34:02.403
So we'll spend some time on it.

05e14040-523e-4baf-a4d1-011ce69ab14c/7275-0
00:34:02.753 --> 00:34:05.783
I'll go one by one and I'll also
keep asking you questions.

05e14040-523e-4baf-a4d1-011ce69ab14c/7280-0
00:34:06.763 --> 00:34:07.613
Yeah, let's do this.

05e14040-523e-4baf-a4d1-011ce69ab14c/7286-0
00:34:07.723 --> 00:34:08.433
Yeah, all of you.

05e14040-523e-4baf-a4d1-011ce69ab14c/7288-0
00:34:08.443 --> 00:34:08.823
Are you here?

05e14040-523e-4baf-a4d1-011ce69ab14c/7297-0
00:34:11.283 --> 00:34:12.813
Yeah, because this is very, very
vital.

05e14040-523e-4baf-a4d1-011ce69ab14c/7320-0
00:34:12.823 --> 00:34:16.167
So I'll not be repeating this in
the further classes, we will

05e14040-523e-4baf-a4d1-011ce69ab14c/7320-1
00:34:16.167 --> 00:34:18.593
just learn this here and make it
very clear.

05e14040-523e-4baf-a4d1-011ce69ab14c/7324-0
00:34:19.103 --> 00:34:19.383
Right.

05e14040-523e-4baf-a4d1-011ce69ab14c/7328-0
00:34:19.393 --> 00:34:20.093
I'll go one by one.

05e14040-523e-4baf-a4d1-011ce69ab14c/7335-0
00:34:20.103 --> 00:34:20.943
I'll go a little slow.

05e14040-523e-4baf-a4d1-011ce69ab14c/7338-0
00:34:20.993 --> 00:34:21.163
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/7340-0
00:34:22.293 --> 00:34:22.653
Approved.

05e14040-523e-4baf-a4d1-011ce69ab14c/7348-0
00:34:23.363 --> 00:34:23.923
What is the root?

05e14040-523e-4baf-a4d1-011ce69ab14c/7355-0
00:34:25.143 --> 00:34:27.533
An old without a parent is a
root.

05e14040-523e-4baf-a4d1-011ce69ab14c/7369-0
00:34:28.663 --> 00:34:32.913
Yeah, in this particular tree, A
is the root, right.

05e14040-523e-4baf-a4d1-011ce69ab14c/7374-0
00:34:33.323 --> 00:34:34.713
Again, a word of question.

05e14040-523e-4baf-a4d1-011ce69ab14c/7392-0
00:34:34.723 --> 00:34:37.225
So these bracketed terms,
whatever I have, is a couple of

05e14040-523e-4baf-a4d1-011ce69ab14c/7392-1
00:34:37.225 --> 00:34:37.613
examples.

05e14040-523e-4baf-a4d1-011ce69ab14c/7404-0
00:34:37.623 --> 00:34:40.053
They are not exhaustive in
nature, so don't go that.

05e14040-523e-4baf-a4d1-011ce69ab14c/7409-0
00:34:40.163 --> 00:34:42.173
Only these are the answers,
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/7416-0
00:34:42.363 --> 00:34:43.423
So I've taken some examples.

05e14040-523e-4baf-a4d1-011ce69ab14c/7426-0
00:34:45.323 --> 00:34:46.433
Now I have a question for you.

05e14040-523e-4baf-a4d1-011ce69ab14c/7433-0
00:34:46.443 --> 00:34:48.933
In a tree, how many root can be
there?

05e14040-523e-4baf-a4d1-011ce69ab14c/7444-0
00:34:51.433 --> 00:34:53.313
Yeah, we already saw the
definition of tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/7449-0
00:34:53.583 --> 00:34:54.383
Yeah, very good.

05e14040-523e-4baf-a4d1-011ce69ab14c/7459-0
00:34:54.393 --> 00:34:57.613
Only one can be there, the top
most element.

05e14040-523e-4baf-a4d1-011ce69ab14c/7480-0
00:34:57.703 --> 00:35:01.455
Who doesn't have a parent is
called as a root, so there can

05e14040-523e-4baf-a4d1-011ce69ab14c/7480-1
00:35:01.455 --> 00:35:03.143
only be one root in a tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/7484-0
00:35:03.893 --> 00:35:05.623
Simple siblings.

05e14040-523e-4baf-a4d1-011ce69ab14c/7515-0
00:35:06.233 --> 00:35:10.915
Note that share the same parent
are called siblings, so BCD are

05e14040-523e-4baf-a4d1-011ce69ab14c/7515-1
00:35:10.915 --> 00:35:12.963
all sharing the same parent.

05e14040-523e-4baf-a4d1-011ce69ab14c/7518-0
00:35:13.013 --> 00:35:15.233
ASOBCD are siblings.

05e14040-523e-4baf-a4d1-011ce69ab14c/7531-0
00:35:16.973 --> 00:35:19.003
Can you name some other siblings
in this tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/7533-0
00:35:22.053 --> 00:35:22.213
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/7547-0
00:35:23.773 --> 00:35:27.903
GNH their siblings, ENFP, they
are also siblings.

05e14040-523e-4baf-a4d1-011ce69ab14c/7550-0
00:35:28.373 --> 00:35:29.083
IJK.

05e14040-523e-4baf-a4d1-011ce69ab14c/7556-0
00:35:29.093 --> 00:35:30.823
They're all siblings, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/7577-0
00:35:30.893 --> 00:35:37.000
Perfect internal node node with
at least one child is called an

05e14040-523e-4baf-a4d1-011ce69ab14c/7577-1
00:35:37.000 --> 00:35:39.003
internal node, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/7602-0
00:35:40.563 --> 00:35:43.717
He has children, so it is an
internal node, so the root is

05e14040-523e-4baf-a4d1-011ce69ab14c/7602-1
00:35:43.717 --> 00:35:44.893
also an internal node.

05e14040-523e-4baf-a4d1-011ce69ab14c/7613-0
00:35:45.043 --> 00:35:48.103
In this case, right, we we also
has children.

05e14040-523e-4baf-a4d1-011ce69ab14c/7621-0
00:35:48.303 --> 00:35:49.333
C also has children.

05e14040-523e-4baf-a4d1-011ce69ab14c/7625-0
00:35:49.663 --> 00:35:51.173
F also has children, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/7642-0
00:35:51.603 --> 00:35:55.776
So anyone who has at least one
child, also, they become a

05e14040-523e-4baf-a4d1-011ce69ab14c/7642-1
00:35:55.776 --> 00:35:56.783
internal node.

05e14040-523e-4baf-a4d1-011ce69ab14c/7648-0
00:35:57.703 --> 00:35:59.773
Alright, what about external
node?

05e14040-523e-4baf-a4d1-011ce69ab14c/7658-0
00:36:00.463 --> 00:36:03.023
Node is also having another name
called Leaf.

05e14040-523e-4baf-a4d1-011ce69ab14c/7670-0
00:36:04.163 --> 00:36:08.803
It is something which does not
have any children, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/7691-0
00:36:09.093 --> 00:36:13.002
For example, in this case E, it
doesn't have any children IJK,

05e14040-523e-4baf-a4d1-011ce69ab14c/7691-1
00:36:13.002 --> 00:36:14.863
they do not have any children.

05e14040-523e-4baf-a4d1-011ce69ab14c/7698-0
00:36:15.293 --> 00:36:17.403
What about B GH?

05e14040-523e-4baf-a4d1-011ce69ab14c/7721-0
00:36:17.413 --> 00:36:20.726
They do not have any children,
so they are called as external

05e14040-523e-4baf-a4d1-011ce69ab14c/7721-1
00:36:20.726 --> 00:36:23.343
nodes, or they're also called
less leaves nodes.

05e14040-523e-4baf-a4d1-011ce69ab14c/7723-0
00:36:24.453 --> 00:36:24.603
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/7740-0
00:36:25.753 --> 00:36:30.103
So internal node is another node
of for root, no no, not at all.

05e14040-523e-4baf-a4d1-011ce69ab14c/7753-0
00:36:30.413 --> 00:36:34.183
Root is the top most element,
which doesn't have a parent.

05e14040-523e-4baf-a4d1-011ce69ab14c/7757-0
00:36:34.613 --> 00:36:35.963
That's all right.

05e14040-523e-4baf-a4d1-011ce69ab14c/7774-0
00:36:36.093 --> 00:36:40.732
So a root can be an internal
node, but all internal nodes are

05e14040-523e-4baf-a4d1-011ce69ab14c/7774-1
00:36:40.732 --> 00:36:42.003
not roots, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/7789-0
00:36:42.013 --> 00:36:44.502
So in this example, B is also an
internal node because it has

05e14040-523e-4baf-a4d1-011ce69ab14c/7789-1
00:36:44.502 --> 00:36:44.863
children.

05e14040-523e-4baf-a4d1-011ce69ab14c/7796-0
00:36:45.383 --> 00:36:46.563
C is also an internal node.

05e14040-523e-4baf-a4d1-011ce69ab14c/7811-0
00:36:46.573 --> 00:36:51.653
It has children, but they are
not roots, only as root, yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/7837-0
00:36:53.643 --> 00:36:57.292
Pull ancestors ancestor of a
node is nothing but the parent,

05e14040-523e-4baf-a4d1-011ce69ab14c/7837-1
00:36:57.292 --> 00:36:59.863
grandparent, great grandparent,
et cetera.

05e14040-523e-4baf-a4d1-011ce69ab14c/7871-0
00:37:00.553 --> 00:37:06.439
So far, EB is the parent is the
grandparent, so I can call B,

05e14040-523e-4baf-a4d1-011ce69ab14c/7871-1
00:37:06.439 --> 00:37:11.850
Nas and sisters of E so now you
will tell me who are the

05e14040-523e-4baf-a4d1-011ce69ab14c/7871-2
00:37:11.850 --> 00:37:13.273
ancestors of K.

05e14040-523e-4baf-a4d1-011ce69ab14c/7879-0
00:37:15.203 --> 00:37:16.533
Who are the ancestors of key?

05e14040-523e-4baf-a4d1-011ce69ab14c/7881-0
00:37:19.173 --> 00:37:19.313
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/7888-0
00:37:23.673 --> 00:37:24.883
FBA.

05e14040-523e-4baf-a4d1-011ce69ab14c/7892-0
00:37:25.223 --> 00:37:26.013
That's absolutely right.

05e14040-523e-4baf-a4d1-011ce69ab14c/7898-0
00:37:26.873 --> 00:37:27.983
What about descendant?

05e14040-523e-4baf-a4d1-011ce69ab14c/7900-0
00:37:28.333 --> 00:37:28.473
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/7921-0
00:37:30.073 --> 00:37:33.840
So as I told, this is not a
complete exhaustive examples EN

05e14040-523e-4baf-a4d1-011ce69ab14c/7921-1
00:37:33.840 --> 00:37:34.593
Fr siblings.

05e14040-523e-4baf-a4d1-011ce69ab14c/7928-0
00:37:34.603 --> 00:37:36.643
Someone had asked a question EN
Fr.

05e14040-523e-4baf-a4d1-011ce69ab14c/7939-0
00:37:36.653 --> 00:37:38.563
Of course siblings because they
share the same parent.

05e14040-523e-4baf-a4d1-011ce69ab14c/7941-0
00:37:39.423 --> 00:37:39.623
Cool.

05e14040-523e-4baf-a4d1-011ce69ab14c/7969-0
00:37:40.373 --> 00:37:45.198
OK, what is the descendant
descendant is exact opposite,

05e14040-523e-4baf-a4d1-011ce69ab14c/7969-1
00:37:45.198 --> 00:37:50.107
child, grandchild, great
grandchild, et cetera for B EFI,

05e14040-523e-4baf-a4d1-011ce69ab14c/7969-2
00:37:50.107 --> 00:37:52.053
JKR descendants, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/7986-0
00:37:52.063 --> 00:37:55.234
For BE is also descendant
because it is a child, F is a

05e14040-523e-4baf-a4d1-011ce69ab14c/7986-1
00:37:55.234 --> 00:37:55.573
child.

05e14040-523e-4baf-a4d1-011ce69ab14c/7992-0
00:37:56.063 --> 00:37:58.413
IJK are all grandchildren,
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/8002-0
00:37:58.463 --> 00:38:01.543
So all of these are the
descendants of B.

05e14040-523e-4baf-a4d1-011ce69ab14c/8014-0
00:38:01.943 --> 00:38:04.703
So now you will tell me who are
the descendants of C.

05e14040-523e-4baf-a4d1-011ce69ab14c/8021-0
00:38:07.653 --> 00:38:10.403
Yeah, G&amp;H perfect.

05e14040-523e-4baf-a4d1-011ce69ab14c/8028-0
00:38:12.293 --> 00:38:13.333
What is a degree?

05e14040-523e-4baf-a4d1-011ce69ab14c/8032-0
00:38:13.813 --> 00:38:14.363
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/8038-0
00:38:14.433 --> 00:38:15.483
And I have another thing for
you.

05e14040-523e-4baf-a4d1-011ce69ab14c/8045-0
00:38:15.493 --> 00:38:16.853
What is the descendant of D?

05e14040-523e-4baf-a4d1-011ce69ab14c/8055-0
00:38:18.743 --> 00:38:20.363
What is the descendant of D?

05e14040-523e-4baf-a4d1-011ce69ab14c/8057-0
00:38:23.853 --> 00:38:24.033
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/8066-0
00:38:30.213 --> 00:38:31.903
The lamb, seeing only GH, yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/8075-0
00:38:33.753 --> 00:38:34.803
Yeah, all our answer.

05e14040-523e-4baf-a4d1-011ce69ab14c/8082-0
00:38:34.813 --> 00:38:37.173
All are descendants of a, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/8087-0
00:38:37.183 --> 00:38:37.803
Well, that is the root.

05e14040-523e-4baf-a4d1-011ce69ab14c/8096-0
00:38:39.633 --> 00:38:41.723
Yeah, nothing is there for me,
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/8119-0
00:38:42.073 --> 00:38:45.477
So can I now give a new
definition that a node which

05e14040-523e-4baf-a4d1-011ce69ab14c/8119-1
00:38:45.477 --> 00:38:48.173
doesn't have a descendant is a
leaf node?

05e14040-523e-4baf-a4d1-011ce69ab14c/8137-0
00:38:50.693 --> 00:38:55.225
Yeah, CD are also ancestors of E
so C and no, they are not

05e14040-523e-4baf-a4d1-011ce69ab14c/8137-1
00:38:55.225 --> 00:38:55.993
ancestors.

05e14040-523e-4baf-a4d1-011ce69ab14c/8139-0
00:38:56.003 --> 00:38:56.483
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/8152-0
00:38:56.553 --> 00:38:58.543
So Krishna, just follow the
definitions.

05e14040-523e-4baf-a4d1-011ce69ab14c/8159-0
00:38:58.553 --> 00:39:00.223
It should be the same line,
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/8169-0
00:39:00.233 --> 00:39:02.343
It should be the parent,
grandparent and so on.

05e14040-523e-4baf-a4d1-011ce69ab14c/8184-0
00:39:02.593 --> 00:39:06.872
So CNDR not even related to E
right, though that should not be

05e14040-523e-4baf-a4d1-011ce69ab14c/8184-1
00:39:06.872 --> 00:39:07.483
the case.

05e14040-523e-4baf-a4d1-011ce69ab14c/8198-0
00:39:09.593 --> 00:39:11.203
So now what is the line that I
told?

05e14040-523e-4baf-a4d1-011ce69ab14c/8208-0
00:39:11.613 --> 00:39:14.273
I told nodes who don't have a
descendant.

05e14040-523e-4baf-a4d1-011ce69ab14c/8216-0
00:39:15.163 --> 00:39:16.373
They are leaf nodes.

05e14040-523e-4baf-a4d1-011ce69ab14c/8230-0
00:39:16.663 --> 00:39:22.253
Am I right in that Anita, for
example G HHD?

05e14040-523e-4baf-a4d1-011ce69ab14c/8267-0
00:39:22.323 --> 00:39:26.134
They don't have descendants, so
they're also a leaf node, so

05e14040-523e-4baf-a4d1-011ce69ab14c/8267-1
00:39:26.134 --> 00:39:29.632
that is why I'm again again
telling there are plenty of

05e14040-523e-4baf-a4d1-011ce69ab14c/8267-2
00:39:29.632 --> 00:39:32.193
definitions for these in many
resources.

05e14040-523e-4baf-a4d1-011ce69ab14c/8279-0
00:39:32.203 --> 00:39:35.282
If you go online or see books,
you might see plenty of

05e14040-523e-4baf-a4d1-011ce69ab14c/8279-1
00:39:35.282 --> 00:39:35.953
definitions.

05e14040-523e-4baf-a4d1-011ce69ab14c/8284-0
00:39:35.963 --> 00:39:37.593
Don't get confused, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/8317-0
00:39:37.783 --> 00:39:41.077
So for leaf node you can say a
node without children, or you

05e14040-523e-4baf-a4d1-011ce69ab14c/8317-1
00:39:41.077 --> 00:39:44.155
can say a node without any
descendant or there are other

05e14040-523e-4baf-a4d1-011ce69ab14c/8317-2
00:39:44.155 --> 00:39:45.073
definitions also.

05e14040-523e-4baf-a4d1-011ce69ab14c/8321-0
00:39:45.123 --> 00:39:45.883
I'll tell you those.

05e14040-523e-4baf-a4d1-011ce69ab14c/8334-0
00:39:45.893 --> 00:39:48.113
Yeah, we'll go next one degree.

05e14040-523e-4baf-a4d1-011ce69ab14c/8345-0
00:39:48.903 --> 00:39:52.123
You cry of a node is the number
of its children, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/8359-0
00:39:54.073 --> 00:39:56.623
Number of children for a it is
3.

05e14040-523e-4baf-a4d1-011ce69ab14c/8362-0
00:39:56.713 --> 00:39:57.783
Three children are coming out.

05e14040-523e-4baf-a4d1-011ce69ab14c/8367-0
00:39:58.133 --> 00:39:59.263
What about F3?

05e14040-523e-4baf-a4d1-011ce69ab14c/8373-0
00:39:59.273 --> 00:40:00.203
Children are coming out.

05e14040-523e-4baf-a4d1-011ce69ab14c/8377-0
00:40:00.633 --> 00:40:01.443
What about C?

05e14040-523e-4baf-a4d1-011ce69ab14c/8380-0
00:40:01.453 --> 00:40:02.003
Only two?

05e14040-523e-4baf-a4d1-011ce69ab14c/8385-0
00:40:02.393 --> 00:40:03.233
What about B?

05e14040-523e-4baf-a4d1-011ce69ab14c/8408-0
00:40:07.193 --> 00:40:10.075
Yeah, for ENFJ car not
descendants, Amit for B, they

05e14040-523e-4baf-a4d1-011ce69ab14c/8408-1
00:40:10.075 --> 00:40:13.173
are the descendants for E there
is no descendant at all.

05e14040-523e-4baf-a4d1-011ce69ab14c/8420-0
00:40:14.533 --> 00:40:17.543
Yeah, for me there are two is
the degree cool?

05e14040-523e-4baf-a4d1-011ce69ab14c/8428-0
00:40:18.653 --> 00:40:20.033
What does the degree of J?

05e14040-523e-4baf-a4d1-011ce69ab14c/8432-0
00:40:22.693 --> 00:40:22.943
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/8438-0
00:40:22.953 --> 00:40:24.103
What is the degree of J?

05e14040-523e-4baf-a4d1-011ce69ab14c/8442-0
00:40:26.453 --> 00:40:27.003
Zero.

05e14040-523e-4baf-a4d1-011ce69ab14c/8460-0
00:40:27.073 --> 00:40:30.951
So can I again now give a new
definition, a node whose degree

05e14040-523e-4baf-a4d1-011ce69ab14c/8460-1
00:40:30.951 --> 00:40:31.263
is 0?

05e14040-523e-4baf-a4d1-011ce69ab14c/8468-0
00:40:31.323 --> 00:40:32.183
Is it a leaf node?

05e14040-523e-4baf-a4d1-011ce69ab14c/8473-0
00:40:33.203 --> 00:40:34.683
Yes, right.

05e14040-523e-4baf-a4d1-011ce69ab14c/8490-0
00:40:34.753 --> 00:40:37.891
A node whose degree 0 means it
doesn't have any children, so

05e14040-523e-4baf-a4d1-011ce69ab14c/8490-1
00:40:37.891 --> 00:40:39.073
he's again a leaf node.

05e14040-523e-4baf-a4d1-011ce69ab14c/8492-0
00:40:40.153 --> 00:40:40.333
Cool.

05e14040-523e-4baf-a4d1-011ce69ab14c/8502-0
00:40:41.213 --> 00:40:42.823
What is the depth of X?

05e14040-523e-4baf-a4d1-011ce69ab14c/8508-0
00:40:42.873 --> 00:40:44.403
Yeah, very, very important.

05e14040-523e-4baf-a4d1-011ce69ab14c/8510-0
00:40:44.453 --> 00:40:44.903
These two.

05e14040-523e-4baf-a4d1-011ce69ab14c/8519-0
00:40:45.093 --> 00:40:47.663
Yeah, 90% of students get it
wrong.

05e14040-523e-4baf-a4d1-011ce69ab14c/8529-0
00:40:49.093 --> 00:40:52.043
Plenty of resources have it
wrongly documented.

05e14040-523e-4baf-a4d1-011ce69ab14c/8534-0
00:40:52.413 --> 00:40:52.723
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/8541-0
00:40:52.733 --> 00:40:55.143
A couple of additions of books
are wrong.

05e14040-523e-4baf-a4d1-011ce69ab14c/8548-0
00:40:55.283 --> 00:40:56.563
Yeah, so don't get it wrong.

05e14040-523e-4baf-a4d1-011ce69ab14c/8564-0
00:40:56.653 --> 00:41:00.213
Let me be very clear on this
depth of X.

05e14040-523e-4baf-a4d1-011ce69ab14c/8570-0
00:41:00.263 --> 00:41:02.373
Meaning this X can be any node.

05e14040-523e-4baf-a4d1-011ce69ab14c/8587-0
00:41:02.563 --> 00:41:04.783
Yeah, I can point this X to be
any of the node.

05e14040-523e-4baf-a4d1-011ce69ab14c/8600-0
00:41:05.963 --> 00:41:10.883
It is the number of edges in the
path from root to that X.

05e14040-523e-4baf-a4d1-011ce69ab14c/8637-0
00:41:11.863 --> 00:41:16.375
So for example, if I take this F
right, I should come all the way

05e14040-523e-4baf-a4d1-011ce69ab14c/8637-1
00:41:16.375 --> 00:41:20.272
from the root till that
particular node and see how many

05e14040-523e-4baf-a4d1-011ce69ab14c/8637-2
00:41:20.272 --> 00:41:23.143
lines are there in between them
or edges.

05e14040-523e-4baf-a4d1-011ce69ab14c/8672-0
00:41:23.723 --> 00:41:28.200
So to go to F from root, what is
the only path I love to come

05e14040-523e-4baf-a4d1-011ce69ab14c/8672-1
00:41:28.200 --> 00:41:32.532
from the root a I'll have to
come to B and from B I'll have

05e14040-523e-4baf-a4d1-011ce69ab14c/8672-2
00:41:32.532 --> 00:41:33.903
to come to F right?

05e14040-523e-4baf-a4d1-011ce69ab14c/8680-0
00:41:33.913 --> 00:41:36.653
So that is 1 right?

05e14040-523e-4baf-a4d1-011ce69ab14c/8691-0
00:41:36.853 --> 00:41:40.033
And that too is called as the
depth of F.

05e14040-523e-4baf-a4d1-011ce69ab14c/8693-0
00:41:43.803 --> 00:41:43.983
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/8698-0
00:41:50.003 --> 00:41:50.473
Yeah, mate.

05e14040-523e-4baf-a4d1-011ce69ab14c/8700-0
00:41:50.483 --> 00:41:50.703
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/8706-0
00:41:50.713 --> 00:41:51.393
So let's clarify.

05e14040-523e-4baf-a4d1-011ce69ab14c/8723-0
00:41:51.403 --> 00:41:56.172
There are a couple of doubts,
Amit for BE&amp;FIJK

05e14040-523e-4baf-a4d1-011ce69ab14c/8723-1
00:41:56.172 --> 00:41:57.293
descendants.

05e14040-523e-4baf-a4d1-011ce69ab14c/8737-0
00:41:57.503 --> 00:42:00.973
Yeah, the slide says for B, what
are all the descendants?

05e14040-523e-4baf-a4d1-011ce69ab14c/8749-0
00:42:01.323 --> 00:42:04.073
EFI JK, that is what is written
here.

05e14040-523e-4baf-a4d1-011ce69ab14c/8751-0
00:42:05.373 --> 00:42:05.563
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/8755-0
00:42:05.573 --> 00:42:07.613
Is that clear, Amit?

05e14040-523e-4baf-a4d1-011ce69ab14c/8758-0
00:42:10.563 --> 00:42:11.003
Yes. No.

05e14040-523e-4baf-a4d1-011ce69ab14c/8771-0
00:42:14.163 --> 00:42:16.053
And a node cannot have two
parents.

05e14040-523e-4baf-a4d1-011ce69ab14c/8795-0
00:42:16.103 --> 00:42:21.230
A node can have only one parent
pull, so it's depth clear for

05e14040-523e-4baf-a4d1-011ce69ab14c/8795-1
00:42:21.230 --> 00:42:24.123
all of you what is the depth of
K.

05e14040-523e-4baf-a4d1-011ce69ab14c/8804-0
00:42:26.113 --> 00:42:27.633
Yeah, let me know the thought
process.

05e14040-523e-4baf-a4d1-011ce69ab14c/8813-0
00:42:27.643 --> 00:42:28.713
How are you going to find this
out?

05e14040-523e-4baf-a4d1-011ce69ab14c/8816-0
00:42:30.123 --> 00:42:30.283
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/8822-0
00:42:31.053 --> 00:42:32.343
What is the depth of this?

05e14040-523e-4baf-a4d1-011ce69ab14c/8828-0
00:42:32.653 --> 00:42:33.663
I don't want the answer.

05e14040-523e-4baf-a4d1-011ce69ab14c/8838-0
00:42:33.733 --> 00:42:34.813
Let me know the thought process.

05e14040-523e-4baf-a4d1-011ce69ab14c/8850-0
00:42:35.903 --> 00:42:39.033
The depth is nothing but from
root till that position.

05e14040-523e-4baf-a4d1-011ce69ab14c/8880-0
00:42:39.043 --> 00:42:44.064
I should come so from A to B,
from B to F from F2K that is

05e14040-523e-4baf-a4d1-011ce69ab14c/8880-1
00:42:44.064 --> 00:42:47.553
nothing but 1233 lines are
there, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/8891-0
00:42:47.563 --> 00:42:51.173
So three is the depth of K cool.

05e14040-523e-4baf-a4d1-011ce69ab14c/8923-0
00:42:51.403 --> 00:42:55.073
So for any node, when we ask a
depth, we should traverse from

05e14040-523e-4baf-a4d1-011ce69ab14c/8923-1
00:42:55.073 --> 00:42:58.624
root to till that place and see
how many edges are there in

05e14040-523e-4baf-a4d1-011ce69ab14c/8923-2
00:42:58.624 --> 00:42:59.393
between them.

05e14040-523e-4baf-a4d1-011ce69ab14c/8926-0
00:43:00.193 --> 00:43:01.003
Well, perfect.

05e14040-523e-4baf-a4d1-011ce69ab14c/8930-0
00:43:01.463 --> 00:43:02.373
Now what about height?

05e14040-523e-4baf-a4d1-011ce69ab14c/8943-0
00:43:04.123 --> 00:43:06.223
Height of X again X can be any
node.

05e14040-523e-4baf-a4d1-011ce69ab14c/8960-0
00:43:07.373 --> 00:43:12.833
It is the number of edges in the
longest path from X to a leaf.

05e14040-523e-4baf-a4d1-011ce69ab14c/8988-0
00:43:13.583 --> 00:43:17.718
So in this case you should look
down South the moment I take a

05e14040-523e-4baf-a4d1-011ce69ab14c/8988-1
00:43:17.718 --> 00:43:21.655
note I should take or I should
enumerate all the paths to a

05e14040-523e-4baf-a4d1-011ce69ab14c/8988-2
00:43:21.655 --> 00:43:21.983
leaf.

05e14040-523e-4baf-a4d1-011ce69ab14c/8993-0
00:43:22.163 --> 00:43:22.893
Let's do this.

05e14040-523e-4baf-a4d1-011ce69ab14c/9006-0
00:43:22.903 --> 00:43:26.413
It might be a little complex for
newbies, so let's consider B.

05e14040-523e-4baf-a4d1-011ce69ab14c/9016-0
00:43:28.603 --> 00:43:30.623
I want to know what is the
height of.

05e14040-523e-4baf-a4d1-011ce69ab14c/9034-0
00:43:32.423 --> 00:43:38.153
So firstly, from B, what are all
the different ways to go to a

05e14040-523e-4baf-a4d1-011ce69ab14c/9034-1
00:43:38.153 --> 00:43:39.153
leaf? Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/9038-0
00:43:42.753 --> 00:43:43.543
Yeah, no.

05e14040-523e-4baf-a4d1-011ce69ab14c/9052-0
00:43:43.553 --> 00:43:45.853
Firstly, tell me how many leaves
are there from B?

05e14040-523e-4baf-a4d1-011ce69ab14c/9057-0
00:43:46.663 --> 00:43:47.393
Is there?

05e14040-523e-4baf-a4d1-011ce69ab14c/9060-0
00:43:47.463 --> 00:43:48.353
Is there Jay?

05e14040-523e-4baf-a4d1-011ce69ab14c/9066-0
00:43:48.363 --> 00:43:49.693
Is there K is there right?

05e14040-523e-4baf-a4d1-011ce69ab14c/9092-0
00:43:49.943 --> 00:43:54.094
So I can go to all of them,
enumerate them, go from B to E

05e14040-523e-4baf-a4d1-011ce69ab14c/9092-1
00:43:54.094 --> 00:43:55.853
that is one possible way.

05e14040-523e-4baf-a4d1-011ce69ab14c/9113-0
00:43:56.303 --> 00:44:01.593
Or I can go from B to F and if I
go to if I can go to I.

05e14040-523e-4baf-a4d1-011ce69ab14c/9149-0
00:44:02.693 --> 00:44:07.504
Similarly, I can go from B to F
and from FI can go to J or I can

05e14040-523e-4baf-a4d1-011ce69ab14c/9149-1
00:44:07.504 --> 00:44:11.723
go from B to F from FI can go to
K So what are we doing?

05e14040-523e-4baf-a4d1-011ce69ab14c/9181-0
00:44:12.153 --> 00:44:16.997
We considered that node from
that node we looked below it and

05e14040-523e-4baf-a4d1-011ce69ab14c/9181-1
00:44:16.997 --> 00:44:21.763
enumerated all the paths which
can take me to a list through

05e14040-523e-4baf-a4d1-011ce69ab14c/9181-2
00:44:21.763 --> 00:44:22.153
this.

05e14040-523e-4baf-a4d1-011ce69ab14c/9204-0
00:44:22.753 --> 00:44:27.238
After doing this, for each of
that path, see how many edges

05e14040-523e-4baf-a4d1-011ce69ab14c/9204-1
00:44:27.238 --> 00:44:30.003
are there in them for BYOE how
much?

05e14040-523e-4baf-a4d1-011ce69ab14c/9216-0
00:44:30.013 --> 00:44:34.123
There's only one right, whereas
from B to F2I.

05e14040-523e-4baf-a4d1-011ce69ab14c/9223-0
00:44:34.133 --> 00:44:34.673
How many are there?

05e14040-523e-4baf-a4d1-011ce69ab14c/9236-0
00:44:35.673 --> 00:44:39.633
B2F is 1F2 is one more so it is
2.

05e14040-523e-4baf-a4d1-011ce69ab14c/9244-0
00:44:40.423 --> 00:44:42.103
What about B2F2J?

05e14040-523e-4baf-a4d1-011ce69ab14c/9266-0
00:44:42.113 --> 00:44:48.673
That is also 2V2F2K that is also
two, now a player Max function.

05e14040-523e-4baf-a4d1-011ce69ab14c/9284-0
00:44:48.683 --> 00:44:54.467
Alright, Max of 1/2 comma, 2
comma two is 2, so two is the

05e14040-523e-4baf-a4d1-011ce69ab14c/9284-1
00:44:54.467 --> 00:44:55.643
height of B.

05e14040-523e-4baf-a4d1-011ce69ab14c/9288-0
00:44:57.393 --> 00:44:57.513
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/9293-0
00:44:59.093 --> 00:44:59.913
Is this clear guys?

05e14040-523e-4baf-a4d1-011ce69ab14c/9309-0
00:44:59.923 --> 00:45:03.255
This is the most you know,
effective and correct way to do

05e14040-523e-4baf-a4d1-011ce69ab14c/9309-1
00:45:03.255 --> 00:45:03.763
it right.

05e14040-523e-4baf-a4d1-011ce69ab14c/9319-0
00:45:05.743 --> 00:45:07.093
What if X itself is a leaf?

05e14040-523e-4baf-a4d1-011ce69ab14c/9327-0
00:45:07.103 --> 00:45:08.273
What will be the height of it?

05e14040-523e-4baf-a4d1-011ce69ab14c/9332-0
00:45:08.343 --> 00:45:08.883
Can you guess it?

05e14040-523e-4baf-a4d1-011ce69ab14c/9337-0
00:45:10.163 --> 00:45:11.053
You will look down.

05e14040-523e-4baf-a4d1-011ce69ab14c/9354-0
00:45:11.123 --> 00:45:14.173
You will not be able to go to
any other relief, so it is 0.

05e14040-523e-4baf-a4d1-011ce69ab14c/9363-0
00:45:15.863 --> 00:45:17.543
So can I then give a new
definition?

05e14040-523e-4baf-a4d1-011ce69ab14c/9377-0
00:45:18.873 --> 00:45:22.283
Cleaning the definition which is
height of a node.

05e14040-523e-4baf-a4d1-011ce69ab14c/9387-0
00:45:22.293 --> 00:45:25.073
If it is 0, can I call it as a
leaf? Yes.

05e14040-523e-4baf-a4d1-011ce69ab14c/9390-0
00:45:26.723 --> 00:45:26.943
Right.

05e14040-523e-4baf-a4d1-011ce69ab14c/9395-0
00:45:28.643 --> 00:45:28.793
Cool.

05e14040-523e-4baf-a4d1-011ce69ab14c/9422-0
00:45:29.673 --> 00:45:32.920
Similarly, you can do it for a
also right for a you will

05e14040-523e-4baf-a4d1-011ce69ab14c/9422-1
00:45:32.920 --> 00:45:36.452
enumerate all the leaves and you
will get the answer as three

05e14040-523e-4baf-a4d1-011ce69ab14c/9422-2
00:45:36.452 --> 00:45:36.793
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/9432-0
00:45:37.133 --> 00:45:38.243
What about a sub tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/9450-0
00:45:38.613 --> 00:45:41.690
Right Sub tree is nothing but a
tree consisting of a node and

05e14040-523e-4baf-a4d1-011ce69ab14c/9450-1
00:45:41.690 --> 00:45:42.483
its descendants.

05e14040-523e-4baf-a4d1-011ce69ab14c/9464-0
00:45:42.573 --> 00:45:46.473
So if I carve out some portions
of it, something like this,

05e14040-523e-4baf-a4d1-011ce69ab14c/9464-1
00:45:46.473 --> 00:45:46.863
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/9487-0
00:45:47.193 --> 00:45:50.931
So whatever is in this triangle,
I can call that to be a sub tree

05e14040-523e-4baf-a4d1-011ce69ab14c/9487-1
00:45:50.931 --> 00:45:52.063
of my original tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/9497-0
00:45:52.893 --> 00:45:54.083
Hate to see GH.

05e14040-523e-4baf-a4d1-011ce69ab14c/9502-0
00:45:54.093 --> 00:45:55.783
They're a part of marginal tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/9525-0
00:45:55.893 --> 00:45:58.788
If we just carve out that
portion, I can call it as this

05e14040-523e-4baf-a4d1-011ce69ab14c/9525-1
00:45:58.788 --> 00:45:59.803
is a sub tree of my.

05e14040-523e-4baf-a4d1-011ce69ab14c/9533-0
00:46:00.593 --> 00:46:03.383
Originally I can carve out any
portion, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/9555-0
00:46:03.393 --> 00:46:06.335
I can carve out this F along
with his children, be along with

05e14040-523e-4baf-a4d1-011ce69ab14c/9555-1
00:46:06.335 --> 00:46:07.473
its children, and so on.

05e14040-523e-4baf-a4d1-011ce69ab14c/9566-0
00:46:08.293 --> 00:46:12.983
Level set of all nodes at the
same depth, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/9592-0
00:46:13.043 --> 00:46:17.611
So always the root will start at
level 0, its children will be in

05e14040-523e-4baf-a4d1-011ce69ab14c/9592-1
00:46:17.611 --> 00:46:18.303
level one.

05e14040-523e-4baf-a4d1-011ce69ab14c/9603-0
00:46:18.853 --> 00:46:20.743
Then it's children will be in
level 2.

05e14040-523e-4baf-a4d1-011ce69ab14c/9612-0
00:46:21.173 --> 00:46:24.473
It children will be in Level 3
and so on, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/9627-0
00:46:26.673 --> 00:46:28.473
So is level and dip then the
same.

05e14040-523e-4baf-a4d1-011ce69ab14c/9632-0
00:46:30.453 --> 00:46:30.853
Is it so?

05e14040-523e-4baf-a4d1-011ce69ab14c/9635-0
00:46:33.313 --> 00:46:33.663
Yes.

05e14040-523e-4baf-a4d1-011ce69ab14c/9638-0
00:46:33.673 --> 00:46:33.883
No.

05e14040-523e-4baf-a4d1-011ce69ab14c/9654-0
00:46:33.893 --> 00:46:40.733
Maybe F is in level 2 and what
is the depth of F? Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/9666-0
00:46:42.773 --> 00:46:44.643
Level is nothing but always the
root.

05e14040-523e-4baf-a4d1-011ce69ab14c/9672-0
00:46:44.653 --> 00:46:45.623
Is at level zero.

05e14040-523e-4baf-a4d1-011ce69ab14c/9682-0
00:46:45.943 --> 00:46:47.923
Yeah, it's children are in level
one.

05e14040-523e-4baf-a4d1-011ce69ab14c/9692-0
00:46:48.273 --> 00:46:50.523
It's grandchildren are in level
2 and so on.

05e14040-523e-4baf-a4d1-011ce69ab14c/9710-0
00:46:50.613 --> 00:46:53.826
You have to just number it
always starting from root should

05e14040-523e-4baf-a4d1-011ce69ab14c/9710-1
00:46:53.826 --> 00:46:54.093
be 0.

05e14040-523e-4baf-a4d1-011ce69ab14c/9728-0
00:46:54.843 --> 00:46:58.880
So if you put that then if you
calculate are you getting the

05e14040-523e-4baf-a4d1-011ce69ab14c/9728-1
00:46:58.880 --> 00:47:00.733
level and depth as the same?

05e14040-523e-4baf-a4d1-011ce69ab14c/9752-0
00:47:02.633 --> 00:47:06.153
You guys will tell me what is
the depth of C that actually

05e14040-523e-4baf-a4d1-011ce69ab14c/9752-1
00:47:06.153 --> 00:47:07.883
from me you are coming right.

05e14040-523e-4baf-a4d1-011ce69ab14c/9769-0
00:47:07.893 --> 00:47:13.353
So depth of C is 1 level of it
is also one right for K.

05e14040-523e-4baf-a4d1-011ce69ab14c/9782-0
00:47:13.473 --> 00:47:19.033
The depth is what 123 it's level
is also three, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/9798-0
00:47:19.103 --> 00:47:22.383
So can I comment that you know
depth 10 level are the same?

05e14040-523e-4baf-a4d1-011ce69ab14c/9800-0
00:47:25.343 --> 00:47:25.503
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/9817-0
00:47:27.243 --> 00:47:32.573
OK, Forest Forest is nothing but
a set of disjoint trees, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/9826-0
00:47:32.583 --> 00:47:34.233
For example, I have this whole
tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/9842-0
00:47:34.543 --> 00:47:37.952
Now I have another tree here
right for example, I have

05e14040-523e-4baf-a4d1-011ce69ab14c/9842-1
00:47:37.952 --> 00:47:38.943
another tree XY.

05e14040-523e-4baf-a4d1-011ce69ab14c/9858-0
00:47:39.913 --> 00:47:44.616
Z Now both the trees in this
slide together is called as a

05e14040-523e-4baf-a4d1-011ce69ab14c/9858-1
00:47:44.616 --> 00:47:45.173
forest.

05e14040-523e-4baf-a4d1-011ce69ab14c/9860-0
00:47:46.973 --> 00:47:47.223
Right.

05e14040-523e-4baf-a4d1-011ce69ab14c/9867-0
00:47:51.073 --> 00:47:51.913
So far so good, yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/9871-0
00:47:56.373 --> 00:47:56.683
Yes.

05e14040-523e-4baf-a4d1-011ce69ab14c/9873-0
00:47:56.693 --> 00:47:57.063
No, maybe.

05e14040-523e-4baf-a4d1-011ce69ab14c/9895-0
00:47:59.533 --> 00:48:02.783
So if they have multiple trees
which are disconnected, then I

05e14040-523e-4baf-a4d1-011ce69ab14c/9895-1
00:48:02.783 --> 00:48:04.303
can call them to be a forest.

05e14040-523e-4baf-a4d1-011ce69ab14c/9903-0
00:48:04.353 --> 00:48:05.203
A real life forest.

05e14040-523e-4baf-a4d1-011ce69ab14c/9906-0
00:48:05.213 --> 00:48:05.923
Krishna, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/9910-0
00:48:06.073 --> 00:48:07.043
You have multiple trees.

05e14040-523e-4baf-a4d1-011ce69ab14c/9918-0
00:48:07.053 --> 00:48:09.013
That doesn't mean all trees are
related, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/9924-0
00:48:09.833 --> 00:48:10.693
So what is the forest?

05e14040-523e-4baf-a4d1-011ce69ab14c/9933-0
00:48:11.513 --> 00:48:12.993
A forest is a collection of
trees.

05e14040-523e-4baf-a4d1-011ce69ab14c/9946-0
00:48:13.943 --> 00:48:15.813
There's also same thing in my
slide.

05e14040-523e-4baf-a4d1-011ce69ab14c/9951-0
00:48:15.823 --> 00:48:17.253
I have this one tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/9974-0
00:48:17.323 --> 00:48:21.158
I have another tree here, so put
together they are called as a

05e14040-523e-4baf-a4d1-011ce69ab14c/9974-1
00:48:21.158 --> 00:48:23.653
forest, meaning they are
disjoint trees.

05e14040-523e-4baf-a4d1-011ce69ab14c/9979-0
00:48:23.663 --> 00:48:25.153
They're not connected, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/9990-0
00:48:25.163 --> 00:48:27.363
I'm not connecting this A to
their or somewhere right?

05e14040-523e-4baf-a4d1-011ce69ab14c/9998-0
00:48:28.833 --> 00:48:31.913
Cool and gain some more
examples.

05e14040-523e-4baf-a4d1-011ce69ab14c/10006-0
00:48:31.923 --> 00:48:32.693
It is the same thing.

05e14040-523e-4baf-a4d1-011ce69ab14c/10020-0
00:48:33.103 --> 00:48:36.233
Length of a path is nothing but
the number of edges, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/10029-0
00:48:36.343 --> 00:48:37.493
I'll give you some small
example.

05e14040-523e-4baf-a4d1-011ce69ab14c/10040-0
00:48:37.503 --> 00:48:41.333
You will tell me what is the
length XY?

05e14040-523e-4baf-a4d1-011ce69ab14c/10048-0
00:48:42.073 --> 00:48:44.303
That what is the length of this?

05e14040-523e-4baf-a4d1-011ce69ab14c/10054-0
00:48:47.663 --> 00:48:49.433
Yeah, learn this tool.

05e14040-523e-4baf-a4d1-011ce69ab14c/10058-0
00:48:49.603 --> 00:48:50.273
Very good.

05e14040-523e-4baf-a4d1-011ce69ab14c/10072-0
00:48:50.473 --> 00:48:53.743
I have another 1B QRS.

05e14040-523e-4baf-a4d1-011ce69ab14c/10078-0
00:48:54.273 --> 00:48:54.973
What is element?

05e14040-523e-4baf-a4d1-011ce69ab14c/10091-0
00:48:57.713 --> 00:49:00.943
Yeah, three, right, that is
nothing but the dashes.

05e14040-523e-4baf-a4d1-011ce69ab14c/10097-0
00:49:01.093 --> 00:49:01.723
This is 1.

05e14040-523e-4baf-a4d1-011ce69ab14c/10100-0
00:49:01.733 --> 00:49:02.283
This is 2.

05e14040-523e-4baf-a4d1-011ce69ab14c/10117-0
00:49:02.293 --> 00:49:06.903
This is 3 that is nothing but
the depth and height already.

05e14040-523e-4baf-a4d1-011ce69ab14c/10137-0
00:49:06.913 --> 00:49:10.924
We have seen right again depth
is nothing, but you'll have to

05e14040-523e-4baf-a4d1-011ce69ab14c/10137-1
00:49:10.924 --> 00:49:13.123
go from root till that yen
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/10148-0
00:49:13.313 --> 00:49:15.013
So for a what will be the depth
then?

05e14040-523e-4baf-a4d1-011ce69ab14c/10155-0
00:49:16.573 --> 00:49:17.713
Yeah, death will be 0, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/10162-0
00:49:17.723 --> 00:49:18.763
Because that itself is the root.

05e14040-523e-4baf-a4d1-011ce69ab14c/10172-0
00:49:19.893 --> 00:49:23.243
But what about B or BC&amp;D?

05e14040-523e-4baf-a4d1-011ce69ab14c/10187-0
00:49:23.253 --> 00:49:26.323
The depth will be one because
from root I'm coming there.

05e14040-523e-4baf-a4d1-011ce69ab14c/10221-0
00:49:26.333 --> 00:49:30.398
That is just one, whereas for
E&amp;F the depth will be 2

05e14040-523e-4baf-a4d1-011ce69ab14c/10221-1
00:49:30.398 --> 00:49:34.533
right from A to C&amp;C to EC2FO
depth is 2, but depth you

05e14040-523e-4baf-a4d1-011ce69ab14c/10221-2
00:49:34.533 --> 00:49:35.303
understood?

05e14040-523e-4baf-a4d1-011ce69ab14c/10227-0
00:49:35.713 --> 00:49:36.593
But what about height?

05e14040-523e-4baf-a4d1-011ce69ab14c/10241-0
00:49:37.733 --> 00:49:41.443
Height on the other end is
reverse from that node.

05e14040-523e-4baf-a4d1-011ce69ab14c/10259-0
00:49:41.453 --> 00:49:45.806
I should see below and I should
enumerate all the paths to leave

05e14040-523e-4baf-a4d1-011ce69ab14c/10259-1
00:49:45.806 --> 00:49:47.613
and take the maximum right?

05e14040-523e-4baf-a4d1-011ce69ab14c/10265-0
00:49:48.333 --> 00:49:49.533
No, length is not depth.

05e14040-523e-4baf-a4d1-011ce69ab14c/10270-0
00:49:49.543 --> 00:49:50.903
Length is a general concept.

05e14040-523e-4baf-a4d1-011ce69ab14c/10282-0
00:49:50.913 --> 00:49:53.263
Yeah, length is nothing but how
many edges are there?

05e14040-523e-4baf-a4d1-011ce69ab14c/10285-0
00:49:53.273 --> 00:49:54.463
That's all right.

05e14040-523e-4baf-a4d1-011ce69ab14c/10293-0
00:49:56.633 --> 00:49:58.333
What about the height of P?

05e14040-523e-4baf-a4d1-011ce69ab14c/10299-0
00:49:59.353 --> 00:50:00.453
The height of C is what?

05e14040-523e-4baf-a4d1-011ce69ab14c/10343-0
00:50:03.243 --> 00:50:06.744
Yeah, for height of EN FR0 we
know that because they are leave

05e14040-523e-4baf-a4d1-011ce69ab14c/10343-1
00:50:06.744 --> 00:50:10.190
height of D is also zero because
it's a leaf, B is also zero,

05e14040-523e-4baf-a4d1-011ce69ab14c/10343-2
00:50:10.190 --> 00:50:13.580
whereas for C it has, you know
children and both of them are

05e14040-523e-4baf-a4d1-011ce69ab14c/10343-3
00:50:13.580 --> 00:50:14.913
yielding the same thing.

05e14040-523e-4baf-a4d1-011ce69ab14c/10349-0
00:50:14.923 --> 00:50:16.623
So these height is 1.

05e14040-523e-4baf-a4d1-011ce69ab14c/10358-0
00:50:17.623 --> 00:50:20.113
What about a height for a?

05e14040-523e-4baf-a4d1-011ce69ab14c/10372-0
00:50:20.123 --> 00:50:25.853
You will enumerate SA to BA to
DA, to CEA to CF.

05e14040-523e-4baf-a4d1-011ce69ab14c/10388-0
00:50:25.963 --> 00:50:28.903
This is yielding you 2, so
height of ACE 2.

05e14040-523e-4baf-a4d1-011ce69ab14c/10390-0
00:50:30.043 --> 00:50:30.533
Perfect.

05e14040-523e-4baf-a4d1-011ce69ab14c/10395-0
00:50:30.893 --> 00:50:32.013
So we learned these three.

05e14040-523e-4baf-a4d1-011ce69ab14c/10406-0
00:50:32.083 --> 00:50:34.273
What about the depth of the tree
itself?

05e14040-523e-4baf-a4d1-011ce69ab14c/10437-0
00:50:34.333 --> 00:50:38.095
If someone asks you not just a
node, if the whole tree is

05e14040-523e-4baf-a4d1-011ce69ab14c/10437-1
00:50:38.095 --> 00:50:41.273
asked, then it is the depth of
the deepest node.

05e14040-523e-4baf-a4d1-011ce69ab14c/10457-0
00:50:42.013 --> 00:50:45.093
So you should calculate the
depth of all the nodes and the

05e14040-523e-4baf-a4d1-011ce69ab14c/10457-1
00:50:45.093 --> 00:50:46.763
largest one, which you will get.

05e14040-523e-4baf-a4d1-011ce69ab14c/10461-0
00:50:46.773 --> 00:50:49.153
That will be the answer, yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/10467-0
00:50:50.763 --> 00:50:51.563
Again, yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/10472-0
00:50:51.573 --> 00:50:53.293
Amit and others got confused.
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/10475-0
00:50:53.303 --> 00:50:54.093
Please focus.

05e14040-523e-4baf-a4d1-011ce69ab14c/10496-0
00:50:54.103 --> 00:50:57.109
Yeah, we are repeating this
again and again height of a

05e14040-523e-4baf-a4d1-011ce69ab14c/10496-1
00:50:57.109 --> 00:50:58.933
notice, you'll have to look
down.

05e14040-523e-4baf-a4d1-011ce69ab14c/10510-0
00:50:59.493 --> 00:51:03.363
Yeah, you have to look down and
enumerate all the paths.

05e14040-523e-4baf-a4d1-011ce69ab14c/10537-0
00:51:03.453 --> 00:51:06.364
For example, if I want to know
what is the height of C from

05e14040-523e-4baf-a4d1-011ce69ab14c/10537-1
00:51:06.364 --> 00:51:08.643
sea, what are all the options to
go to a leaf.

05e14040-523e-4baf-a4d1-011ce69ab14c/10560-0
00:51:09.493 --> 00:51:13.966
I can go from C to EI can go
from C to F and in this how what

05e14040-523e-4baf-a4d1-011ce69ab14c/10560-1
00:51:13.966 --> 00:51:15.553
is the length of this?

05e14040-523e-4baf-a4d1-011ce69ab14c/10567-0
00:51:17.673 --> 00:51:18.403
And it will tell me that.

05e14040-523e-4baf-a4d1-011ce69ab14c/10572-0
00:51:21.793 --> 00:51:22.123
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/10574-0
00:51:22.133 --> 00:51:23.223
Real quick, Amit.

05e14040-523e-4baf-a4d1-011ce69ab14c/10580-0
00:51:24.243 --> 00:51:25.213
Three to EC2.

05e14040-523e-4baf-a4d1-011ce69ab14c/10590-0
00:51:25.223 --> 00:51:26.813
If it is just one, yeah, it is
not.

05e14040-523e-4baf-a4d1-011ce69ab14c/10597-0
00:51:26.823 --> 00:51:29.053
Two right is just one line,
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/10604-0
00:51:29.263 --> 00:51:31.343
So that is the height of see.

05e14040-523e-4baf-a4d1-011ce69ab14c/10608-0
00:51:32.923 --> 00:51:33.253
Right.

05e14040-523e-4baf-a4d1-011ce69ab14c/10613-0
00:51:33.323 --> 00:51:35.093
What about a for?

05e14040-523e-4baf-a4d1-011ce69ab14c/10622-0
00:51:35.103 --> 00:51:38.133
Also, you should enumerate all
of them, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/10640-0
00:51:38.203 --> 00:51:42.694
Enumerate meaning list out all
the possibility to go from A to

05e14040-523e-4baf-a4d1-011ce69ab14c/10640-1
00:51:42.694 --> 00:51:43.193
a leaf.

05e14040-523e-4baf-a4d1-011ce69ab14c/10650-0
00:51:43.423 --> 00:51:45.423
I can go from A to B that is
also valid.

05e14040-523e-4baf-a4d1-011ce69ab14c/10686-0
00:51:45.473 --> 00:51:50.646
I can go from A to D or I can go
from A to C to E or I can go

05e14040-523e-4baf-a4d1-011ce69ab14c/10686-1
00:51:50.646 --> 00:51:54.233
from A to C to F for this the
length is 1.

05e14040-523e-4baf-a4d1-011ce69ab14c/10690-0
00:51:54.243 --> 00:51:54.953
This is 1.

05e14040-523e-4baf-a4d1-011ce69ab14c/10713-0
00:51:55.003 --> 00:52:00.064
This is 2 this is 2 and what is
the Max, Max is 2 so hight of

05e14040-523e-4baf-a4d1-011ce69ab14c/10713-1
00:52:00.064 --> 00:52:00.553
ACE 2.

05e14040-523e-4baf-a4d1-011ce69ab14c/10719-0
00:52:02.163 --> 00:52:03.623
Is this clear for all of you?
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/10731-0
00:52:07.583 --> 00:52:09.593
Yeah, height and depth are not
the same, Vijay.

05e14040-523e-4baf-a4d1-011ce69ab14c/10739-0
00:52:09.603 --> 00:52:11.383
Yeah. So please don't interpret.

05e14040-523e-4baf-a4d1-011ce69ab14c/10747-0
00:52:11.563 --> 00:52:13.183
You know, they are not the same.

05e14040-523e-4baf-a4d1-011ce69ab14c/10769-0
00:52:14.793 --> 00:52:18.983
So for this example, right, if
you see for D right, the depth

05e14040-523e-4baf-a4d1-011ce69ab14c/10769-1
00:52:18.983 --> 00:52:21.483
is 1 whereas the height is 0,
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/10774-0
00:52:21.493 --> 00:52:22.163
How are they the same?

05e14040-523e-4baf-a4d1-011ce69ab14c/10789-0
00:52:24.643 --> 00:52:28.383
For a the depth is 0 whereas the
height is 2, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/10800-0
00:52:28.393 --> 00:52:29.703
How is tight end depth the same?

05e14040-523e-4baf-a4d1-011ce69ab14c/10803-0
00:52:33.193 --> 00:52:33.373
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/10813-0
00:52:34.253 --> 00:52:35.853
So what is the depth of a tree
here?

05e14040-523e-4baf-a4d1-011ce69ab14c/10835-0
00:52:36.993 --> 00:52:40.825
The depth of a tree is the depth
of the deepest node and height

05e14040-523e-4baf-a4d1-011ce69ab14c/10835-1
00:52:40.825 --> 00:52:41.483
of a trees.

05e14040-523e-4baf-a4d1-011ce69ab14c/10852-0
00:52:41.493 --> 00:52:44.373
Height of the root, so you
should calculate for the height

05e14040-523e-4baf-a4d1-011ce69ab14c/10852-1
00:52:44.373 --> 00:52:46.423
of the root and that's pretty
much right.

05e14040-523e-4baf-a4d1-011ce69ab14c/10858-0
00:52:48.613 --> 00:52:48.983
Pull.

05e14040-523e-4baf-a4d1-011ce69ab14c/10862-0
00:52:48.993 --> 00:52:49.603
So far, so good.

05e14040-523e-4baf-a4d1-011ce69ab14c/10865-0
00:52:49.613 --> 00:52:50.083
Hall of you.

05e14040-523e-4baf-a4d1-011ce69ab14c/10869-0
00:52:50.473 --> 00:52:51.513
As the definitions clear.

05e14040-523e-4baf-a4d1-011ce69ab14c/10873-0
00:52:55.583 --> 00:52:55.823
Right.

05e14040-523e-4baf-a4d1-011ce69ab14c/10875-0
00:52:56.743 --> 00:52:57.073
Pull.

05e14040-523e-4baf-a4d1-011ce69ab14c/10887-0
00:52:57.113 --> 00:52:59.273
So there are a lot of
interpretations that you can do.

05e14040-523e-4baf-a4d1-011ce69ab14c/10898-0
00:52:59.283 --> 00:53:00.773
I will leave it up to you to do
this.

05e14040-523e-4baf-a4d1-011ce69ab14c/10900-0
00:53:00.783 --> 00:53:01.333
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/10906-0
00:53:01.423 --> 00:53:03.223
So hight is downward correct,
yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/10920-0
00:53:06.133 --> 00:53:08.616
Is there a situation where
length and depth will be

05e14040-523e-4baf-a4d1-011ce69ab14c/10920-1
00:53:08.616 --> 00:53:09.093
different?

05e14040-523e-4baf-a4d1-011ce69ab14c/10928-0
00:53:09.103 --> 00:53:10.163
So what do you mean by length?

05e14040-523e-4baf-a4d1-011ce69ab14c/10939-0
00:53:10.173 --> 00:53:12.563
Your length is not a
terminology.

05e14040-523e-4baf-a4d1-011ce69ab14c/10950-0
00:53:12.573 --> 00:53:15.403
Entree length is nothing but the
number of edges.

05e14040-523e-4baf-a4d1-011ce69ab14c/10954-0
00:53:15.413 --> 00:53:16.763
That's all right.

05e14040-523e-4baf-a4d1-011ce69ab14c/10969-0
00:53:17.133 --> 00:53:21.503
So the actual terminology is
either height or depth or level.

05e14040-523e-4baf-a4d1-011ce69ab14c/10984-0
00:53:22.003 --> 00:53:24.896
There is nothing called as
length of a tree and something

05e14040-523e-4baf-a4d1-011ce69ab14c/10984-1
00:53:24.896 --> 00:53:25.693
like that, yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/10999-0
00:53:27.403 --> 00:53:30.523
Cool, now that you all told yes,
let's put it into practice.

05e14040-523e-4baf-a4d1-011ce69ab14c/11005-0
00:53:31.633 --> 00:53:33.883
Yeah, all of you here.

05e14040-523e-4baf-a4d1-011ce69ab14c/11007-0
00:53:33.893 --> 00:53:34.223
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/11019-0
00:53:34.353 --> 00:53:36.263
You can keep your
interpretations for the quiz.

05e14040-523e-4baf-a4d1-011ce69ab14c/11075-0
00:53:36.313 --> 00:53:39.579
Yeah, right there can be a lot
of interpretations that can be

05e14040-523e-4baf-a4d1-011ce69ab14c/11075-1
00:53:39.579 --> 00:53:43.002
done is the height of this node
same as, you know, depth of this

05e14040-523e-4baf-a4d1-011ce69ab14c/11075-2
00:53:43.002 --> 00:53:46.163
and you know degree and all
that, but let's not go into all

05e14040-523e-4baf-a4d1-011ce69ab14c/11075-3
00:53:46.163 --> 00:53:49.533
those derivations because that
is where the whole fun is right.

05e14040-523e-4baf-a4d1-011ce69ab14c/11099-0
00:53:49.543 --> 00:53:53.628
If I put all of them out here,
then there is no joy in you

05e14040-523e-4baf-a4d1-011ce69ab14c/11099-1
00:53:53.628 --> 00:53:57.573
drawing some trees and you know
concluding things right.

05e14040-523e-4baf-a4d1-011ce69ab14c/11106-0
00:53:57.713 --> 00:53:59.113
But all of you ready for this
activity?

05e14040-523e-4baf-a4d1-011ce69ab14c/11115-0
00:53:59.123 --> 00:54:02.193
Yeah, I'll keep asking questions
one by one.

05e14040-523e-4baf-a4d1-011ce69ab14c/11117-0
00:54:02.243 --> 00:54:02.383
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/11142-0
00:54:03.623 --> 00:54:06.226
And you will be answering things
the moment I get the correct

05e14040-523e-4baf-a4d1-011ce69ab14c/11142-1
00:54:06.226 --> 00:54:08.073
answers, I will go on to the
next question.

05e14040-523e-4baf-a4d1-011ce69ab14c/11144-0
00:54:08.403 --> 00:54:08.873
Right.

05e14040-523e-4baf-a4d1-011ce69ab14c/11153-0
00:54:08.923 --> 00:54:10.853
If you have, it is more like
that.

05e14040-523e-4baf-a4d1-011ce69ab14c/11160-0
00:54:10.863 --> 00:54:12.593
You know fastest fingers first.

05e14040-523e-4baf-a4d1-011ce69ab14c/11175-0
00:54:12.803 --> 00:54:15.087
If you already got the answers
then I will move on to the next

05e14040-523e-4baf-a4d1-011ce69ab14c/11175-1
00:54:15.087 --> 00:54:15.413
question.

05e14040-523e-4baf-a4d1-011ce69ab14c/11183-0
00:54:15.423 --> 00:54:17.053
Don't keep putting the previous
answers.

05e14040-523e-4baf-a4d1-011ce69ab14c/11185-0
00:54:17.623 --> 00:54:17.813
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/11192-0
00:54:17.823 --> 00:54:18.253
Are you game?

05e14040-523e-4baf-a4d1-011ce69ab14c/11194-0
00:54:18.263 --> 00:54:18.603
All of you?

05e14040-523e-4baf-a4d1-011ce69ab14c/11203-0
00:54:20.023 --> 00:54:22.023
Yeah, I still see some answers,
VISHAL and others.

05e14040-523e-4baf-a4d1-011ce69ab14c/11208-0
00:54:24.113 --> 00:54:25.273
Yeah, all all here.

05e14040-523e-4baf-a4d1-011ce69ab14c/11211-0
00:54:28.383 --> 00:54:28.673
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/11215-0
00:54:28.683 --> 00:54:29.093
There you go.

05e14040-523e-4baf-a4d1-011ce69ab14c/11225-0
00:54:29.103 --> 00:54:31.873
The very first question what
does the root here?

05e14040-523e-4baf-a4d1-011ce69ab14c/11227-0
00:54:34.763 --> 00:54:34.893
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/11232-0
00:54:36.603 --> 00:54:37.643
Yeah, very good.

05e14040-523e-4baf-a4d1-011ce69ab14c/11235-0
00:54:37.653 --> 00:54:38.143
That's right.

05e14040-523e-4baf-a4d1-011ce69ab14c/11241-0
00:54:38.153 --> 00:54:39.093
Yeah, you can stop now.

05e14040-523e-4baf-a4d1-011ce69ab14c/11253-0
00:54:39.103 --> 00:54:41.580
Yeah, the moment someone has
given the right answer, that's

05e14040-523e-4baf-a4d1-011ce69ab14c/11253-1
00:54:41.580 --> 00:54:41.703
it.

05e14040-523e-4baf-a4d1-011ce69ab14c/11255-0
00:54:41.713 --> 00:54:42.093
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/11260-0
00:54:42.163 --> 00:54:44.573
So either route here.

05e14040-523e-4baf-a4d1-011ce69ab14c/11278-0
00:54:47.143 --> 00:54:50.650
What are some internal nodes
name all the internal nodes in

05e14040-523e-4baf-a4d1-011ce69ab14c/11278-1
00:54:50.650 --> 00:54:51.293
one answer?

05e14040-523e-4baf-a4d1-011ce69ab14c/11295-0
00:54:51.363 --> 00:54:54.253
Yeah, you will not put one by
one in your single answer.

05e14040-523e-4baf-a4d1-011ce69ab14c/11304-0
00:54:54.263 --> 00:54:57.123
You will put all the internal
nodes in this particular tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/11310-0
00:55:00.903 --> 00:55:01.553
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/11318-0
00:55:01.783 --> 00:55:03.283
Even though I have not seen an
answer.

05e14040-523e-4baf-a4d1-011ce69ab14c/11320-0
00:55:05.113 --> 00:55:05.273
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/11325-0
00:55:09.983 --> 00:55:10.943
Not even now, yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/11334-0
00:55:13.083 --> 00:55:14.373
So what is an internal node?

05e14040-523e-4baf-a4d1-011ce69ab14c/11344-0
00:55:14.423 --> 00:55:19.423
An internal node is someone who
has a child, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/11357-0
00:55:23.813 --> 00:55:25.243
I see Soumya putting BCD.

05e14040-523e-4baf-a4d1-011ce69ab14c/11366-0
00:55:25.303 --> 00:55:26.723
That is not the correct answer.

05e14040-523e-4baf-a4d1-011ce69ab14c/11370-0
00:55:26.913 --> 00:55:28.733
BCDEF not the correct answer.

05e14040-523e-4baf-a4d1-011ce69ab14c/11383-0
00:55:29.683 --> 00:55:34.993
Yeah, Cambodia has told ABC
DE&amp;H.

05e14040-523e-4baf-a4d1-011ce69ab14c/11388-0
00:55:35.883 --> 00:55:36.093
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/11390-0
00:55:36.103 --> 00:55:37.753
Which is correct? Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/11399-0
00:55:37.803 --> 00:55:39.583
So let's take a minute and
retrospect.

05e14040-523e-4baf-a4d1-011ce69ab14c/11409-0
00:55:39.593 --> 00:55:41.723
It is a an internal node or not.

05e14040-523e-4baf-a4d1-011ce69ab14c/11423-0
00:55:43.223 --> 00:55:45.499
Well, then they need a lot of
people are making that same

05e14040-523e-4baf-a4d1-011ce69ab14c/11423-1
00:55:45.499 --> 00:55:45.813
mistake.

05e14040-523e-4baf-a4d1-011ce69ab14c/11434-0
00:55:45.823 --> 00:55:50.373
Yeah, simple stuff is A and
internal node or not, yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/11446-0
00:55:52.243 --> 00:55:55.013
Yeah, is also an internal node,
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/11460-0
00:55:55.163 --> 00:55:58.113
Because A also has children, but
it is a special guy.

05e14040-523e-4baf-a4d1-011ce69ab14c/11470-0
00:55:58.153 --> 00:55:59.613
He's a root, but that is fine.

05e14040-523e-4baf-a4d1-011ce69ab14c/11481-0
00:55:59.623 --> 00:56:02.793
But going by their definition, A
also has children.

05e14040-523e-4baf-a4d1-011ce69ab14c/11498-0
00:56:03.183 --> 00:56:07.933
So A is also an internal node,
so A/B also has children.

05e14040-523e-4baf-a4d1-011ce69ab14c/11504-0
00:56:07.983 --> 00:56:09.033
C also has children.

05e14040-523e-4baf-a4d1-011ce69ab14c/11509-0
00:56:09.243 --> 00:56:10.173
D also has children.

05e14040-523e-4baf-a4d1-011ce69ab14c/11515-0
00:56:10.563 --> 00:56:11.593
E also has children.

05e14040-523e-4baf-a4d1-011ce69ab14c/11529-0
00:56:11.823 --> 00:56:17.013
Has also has children, so
ABCDE&amp;H.

05e14040-523e-4baf-a4d1-011ce69ab14c/11534-0
00:56:18.033 --> 00:56:18.423
Right.

05e14040-523e-4baf-a4d1-011ce69ab14c/11542-0
00:56:18.433 --> 00:56:20.463
These are all your internal
notes.

05e14040-523e-4baf-a4d1-011ce69ab14c/11549-0
00:56:21.313 --> 00:56:22.433
Is it clear, guys, all of you?

05e14040-523e-4baf-a4d1-011ce69ab14c/11557-0
00:56:23.773 --> 00:56:24.963
Well, if you who made a mistake?

05e14040-523e-4baf-a4d1-011ce69ab14c/11560-0
00:56:24.973 --> 00:56:25.183
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/11565-0
00:56:25.193 --> 00:56:25.783
Is this clear now?

05e14040-523e-4baf-a4d1-011ce69ab14c/11567-0
00:56:27.503 --> 00:56:27.703
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/11569-0
00:56:29.443 --> 00:56:29.753
Yes.

05e14040-523e-4baf-a4d1-011ce69ab14c/11571-0
00:56:29.763 --> 00:56:30.103
No, maybe.

05e14040-523e-4baf-a4d1-011ce69ab14c/11573-0
00:56:34.713 --> 00:56:34.863
Cool.

05e14040-523e-4baf-a4d1-011ce69ab14c/11576-0
00:56:36.753 --> 00:56:37.303
Leaves.

05e14040-523e-4baf-a4d1-011ce69ab14c/11584-0
00:56:37.793 --> 00:56:40.943
Yeah, we'll put leaves real
quick.

05e14040-523e-4baf-a4d1-011ce69ab14c/11598-0
00:56:40.953 --> 00:56:45.013
Yeah, leaves are nodes which do
not have a children, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/11608-0
00:56:45.823 --> 00:56:49.773
What all the leaves here go
systematically, yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/11616-0
00:56:57.583 --> 00:56:58.613
Yeah, real quick.

05e14040-523e-4baf-a4d1-011ce69ab14c/11622-0
00:56:59.043 --> 00:57:00.813
I still don't see the right
answer yet.

05e14040-523e-4baf-a4d1-011ce69ab14c/11627-0
00:57:05.293 --> 00:57:05.703
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/11635-0
00:57:05.753 --> 00:57:08.923
K LFG, M IJ.

05e14040-523e-4baf-a4d1-011ce69ab14c/11639-0
00:57:09.113 --> 00:57:10.183
Right, that's correct.

05e14040-523e-4baf-a4d1-011ce69ab14c/11641-0
00:57:10.813 --> 00:57:11.223
Perfect.

05e14040-523e-4baf-a4d1-011ce69ab14c/11660-0
00:57:11.233 --> 00:57:15.380
So all these guys, K, LFG, M,
all of them who do not have

05e14040-523e-4baf-a4d1-011ce69ab14c/11660-1
00:57:15.380 --> 00:57:16.023
children.

05e14040-523e-4baf-a4d1-011ce69ab14c/11667-0
00:57:17.443 --> 00:57:19.113
What are the ancestors of Yum?

05e14040-523e-4baf-a4d1-011ce69ab14c/11670-0
00:57:21.273 --> 00:57:21.643
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/11676-0
00:57:21.653 --> 00:57:23.473
What are the ancestors of M?

05e14040-523e-4baf-a4d1-011ce69ab14c/11686-0
00:57:28.093 --> 00:57:29.473
Yeah, I still don't see the
answer.

05e14040-523e-4baf-a4d1-011ce69ab14c/11688-0
00:57:37.433 --> 00:57:37.583
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/11695-0
00:57:41.853 --> 00:57:44.323
Ancestors of M, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/11702-0
00:57:50.763 --> 00:57:51.193
Nope.

05e14040-523e-4baf-a4d1-011ce69ab14c/11708-0
00:57:51.203 --> 00:57:52.653
I still don't see the answers.

05e14040-523e-4baf-a4d1-011ce69ab14c/11735-0
00:57:53.063 --> 00:57:58.309
Still, I only see the previous
answers HD a that's the answer

05e14040-523e-4baf-a4d1-011ce69ab14c/11735-1
00:57:58.309 --> 00:58:02.623
right for M you'll go all the
way, which is H DNA.

05e14040-523e-4baf-a4d1-011ce69ab14c/11737-0
00:58:05.053 --> 00:58:05.233
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/11749-0
00:58:08.023 --> 00:58:09.973
There's no I don't see any
answers even now.

05e14040-523e-4baf-a4d1-011ce69ab14c/11753-0
00:58:10.033 --> 00:58:10.673
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/11768-0
00:58:10.983 --> 00:58:13.334
So all of you who are already
done, can you just stop the

05e14040-523e-4baf-a4d1-011ce69ab14c/11768-1
00:58:13.334 --> 00:58:14.023
previous answers?

05e14040-523e-4baf-a4d1-011ce69ab14c/11779-0
00:58:14.033 --> 00:58:16.433
Yeah, I still see only previous
answers flowing in.

05e14040-523e-4baf-a4d1-011ce69ab14c/11787-0
00:58:16.983 --> 00:58:19.613
Yeah, ancestors of M is already
done.

05e14040-523e-4baf-a4d1-011ce69ab14c/11791-0
00:58:19.623 --> 00:58:20.593
It is HDA.

05e14040-523e-4baf-a4d1-011ce69ab14c/11797-0
00:58:21.563 --> 00:58:23.103
What about descendants of E?

05e14040-523e-4baf-a4d1-011ce69ab14c/11803-0
00:58:25.403 --> 00:58:27.193
What about descendants of E?

05e14040-523e-4baf-a4d1-011ce69ab14c/11811-0
00:58:34.333 --> 00:58:36.133
Yeah, real quick descendants of.

05e14040-523e-4baf-a4d1-011ce69ab14c/11815-0
00:58:45.933 --> 00:58:46.813
Yeah, real quick.

05e14040-523e-4baf-a4d1-011ce69ab14c/11826-0
00:58:51.523 --> 00:58:53.773
Descendance of ER KANSAL.

05e14040-523e-4baf-a4d1-011ce69ab14c/11833-0
00:58:55.053 --> 00:58:57.363
Alright, what does it degree of
a?

05e14040-523e-4baf-a4d1-011ce69ab14c/11844-0
00:59:04.073 --> 00:59:05.963
Yeah, teams is going to explode
today.

05e14040-523e-4baf-a4d1-011ce69ab14c/11849-0
00:59:05.973 --> 00:59:06.343
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/11861-0
00:59:06.353 --> 00:59:10.639
Again, maybe you can like others
answers if it is the same thing,

05e14040-523e-4baf-a4d1-011ce69ab14c/11861-1
00:59:10.639 --> 00:59:10.963
yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/11868-0
00:59:14.963 --> 00:59:16.453
What is the degree of a?

05e14040-523e-4baf-a4d1-011ce69ab14c/11884-0
00:59:35.013 --> 00:59:37.843
Well, I still see only you know
HDA.

05e14040-523e-4baf-a4d1-011ce69ab14c/11894-0
00:59:45.603 --> 00:59:46.723
Yes, yes, there is a lag.

05e14040-523e-4baf-a4d1-011ce69ab14c/11901-0
00:59:46.733 --> 00:59:49.623
Yeah, there's a huge lag here.

05e14040-523e-4baf-a4d1-011ce69ab14c/11910-0
00:59:53.283 --> 00:59:54.393
OK, let it settle down.

05e14040-523e-4baf-a4d1-011ce69ab14c/11916-0
00:59:54.403 --> 00:59:55.553
Let it settle down, yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/11922-0
01:00:15.243 --> 01:00:15.493
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/11929-0
01:00:15.503 --> 01:00:16.933
OK, is right after Kyle.

05e14040-523e-4baf-a4d1-011ce69ab14c/11937-0
01:00:16.943 --> 01:00:18.993
What is the next question degree
of a?

05e14040-523e-4baf-a4d1-011ce69ab14c/11956-0
01:00:49.053 --> 01:00:50.483
Yeah, let's give it another
minute.

05e14040-523e-4baf-a4d1-011ce69ab14c/11977-0
01:00:50.493 --> 01:00:53.714
I think it should, you know,
subside the whole lag and then

05e14040-523e-4baf-a4d1-011ce69ab14c/11977-1
01:00:53.714 --> 01:00:55.593
you know that's fine, that's
fine.

05e14040-523e-4baf-a4d1-011ce69ab14c/11991-0
01:00:55.603 --> 01:00:59.360
You can stop, you know, typing
and then the lag will be fine,

05e14040-523e-4baf-a4d1-011ce69ab14c/11991-1
01:00:59.360 --> 01:00:59.663
yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/11995-0
01:01:03.113 --> 01:01:03.373
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/11999-0
01:01:03.383 --> 01:01:03.783
Yeah, I'm at.

05e14040-523e-4baf-a4d1-011ce69ab14c/12003-0
01:01:03.913 --> 01:01:04.413
Got it. Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/12006-0
01:01:06.933 --> 01:01:07.443
Zero.

05e14040-523e-4baf-a4d1-011ce69ab14c/12012-0
01:01:07.493 --> 01:01:08.903
Yeah, zero is absolutely wrong.

05e14040-523e-4baf-a4d1-011ce69ab14c/12020-0
01:01:08.993 --> 01:01:10.043
Many people have even zero.

05e14040-523e-4baf-a4d1-011ce69ab14c/12028-0
01:01:11.353 --> 01:01:13.403
He has a degree of three, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/12038-0
01:01:13.413 --> 01:01:16.433
It has three children, BC&amp;D,
so it is 3.

05e14040-523e-4baf-a4d1-011ce69ab14c/12048-0
01:01:18.673 --> 01:01:19.443
Yeah, so far, so good.

05e14040-523e-4baf-a4d1-011ce69ab14c/12052-0
01:01:19.453 --> 01:01:19.803
All of you.

05e14040-523e-4baf-a4d1-011ce69ab14c/12054-0
01:01:19.813 --> 01:01:20.323
Are you done?

05e14040-523e-4baf-a4d1-011ce69ab14c/12056-0
01:01:20.373 --> 01:01:20.563
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/12062-0
01:01:20.573 --> 01:01:21.673
Can you just stop typing now?

05e14040-523e-4baf-a4d1-011ce69ab14c/12064-0
01:01:25.673 --> 01:01:25.833
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/12073-0
01:01:32.083 --> 01:01:32.973
Yeah, so far, so good.

05e14040-523e-4baf-a4d1-011ce69ab14c/12079-0
01:01:32.983 --> 01:01:34.623
All of you are you done with
answering?

05e14040-523e-4baf-a4d1-011ce69ab14c/12083-0
01:01:37.553 --> 01:01:37.843
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/12089-0
01:01:37.853 --> 01:01:39.103
Can you stop typing now? Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/12096-0
01:01:47.613 --> 01:01:49.063
Yeah, let the chat subside.

05e14040-523e-4baf-a4d1-011ce69ab14c/12107-0
01:01:52.453 --> 01:01:54.633
No, that will create even more
chaos, Vinay. Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/12117-0
01:01:58.373 --> 01:01:59.323
But yeah, so far so good.

05e14040-523e-4baf-a4d1-011ce69ab14c/12120-0
01:01:59.333 --> 01:01:59.663
All of you.

05e14040-523e-4baf-a4d1-011ce69ab14c/12124-0
01:01:59.673 --> 01:02:00.303
Is it done? Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/12140-0
01:02:03.383 --> 01:02:06.343
Degree of A is nothing but three
because we have three children.

05e14040-523e-4baf-a4d1-011ce69ab14c/12153-0
01:02:06.353 --> 01:02:09.463
There is BC&amp;D so that is 3
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/12155-0
01:02:10.673 --> 01:02:11.023
Cool.

05e14040-523e-4baf-a4d1-011ce69ab14c/12170-0
01:02:11.033 --> 01:02:14.808
So let's let's actually, you
know, stop here from the next

05e14040-523e-4baf-a4d1-011ce69ab14c/12170-1
01:02:14.808 --> 01:02:15.063
one.

05e14040-523e-4baf-a4d1-011ce69ab14c/12178-0
01:02:15.073 --> 01:02:16.273
I will give you the answers,
yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/12187-0
01:02:21.703 --> 01:02:23.283
Yeah, Arthi technology is clear,
yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/12195-0
01:02:28.733 --> 01:02:29.783
Right now, it's fine, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/12201-0
01:02:29.863 --> 01:02:31.103
Yeah, there's no more lag.

05e14040-523e-4baf-a4d1-011ce69ab14c/12203-0
01:02:31.143 --> 01:02:31.503
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/12209-0
01:02:31.553 --> 01:02:32.713
Can you all stop typing?

05e14040-523e-4baf-a4d1-011ce69ab14c/12226-0
01:02:32.723 --> 01:02:35.225
Yeah, the answer is we already
got the correct answers for all

05e14040-523e-4baf-a4d1-011ce69ab14c/12226-1
01:02:35.225 --> 01:02:35.463
of it.

05e14040-523e-4baf-a4d1-011ce69ab14c/12230-0
01:02:42.473 --> 01:02:42.723
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/12236-0
01:02:42.733 --> 01:02:43.723
Yeah, it'll stop now.

05e14040-523e-4baf-a4d1-011ce69ab14c/12238-0
01:02:43.733 --> 01:02:43.943
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/12249-0
01:02:43.953 --> 01:02:45.573
So I have not showing the next
question right.

05e14040-523e-4baf-a4d1-011ce69ab14c/12259-0
01:02:45.583 --> 01:02:46.923
So anyway, they will stop now.

05e14040-523e-4baf-a4d1-011ce69ab14c/12276-0
01:02:47.233 --> 01:02:50.559
The degree of A is nothing but
the number of children, so it is

05e14040-523e-4baf-a4d1-011ce69ab14c/12276-1
01:02:50.559 --> 01:02:50.663
a.

05e14040-523e-4baf-a4d1-011ce69ab14c/12286-0
01:02:50.953 --> 01:02:53.823
It is C, it is D, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/12299-0
01:02:54.253 --> 01:02:57.301
As children are nothing but
BCSD, so it is nothing but

05e14040-523e-4baf-a4d1-011ce69ab14c/12299-1
01:02:57.301 --> 01:02:57.633
three.

05e14040-523e-4baf-a4d1-011ce69ab14c/12301-0
01:02:59.573 --> 01:02:59.763
Cool.

05e14040-523e-4baf-a4d1-011ce69ab14c/12314-0
01:03:02.573 --> 01:03:03.863
So far so good, guys, all of
you.

05e14040-523e-4baf-a4d1-011ce69ab14c/12321-0
01:03:03.873 --> 01:03:04.823
Can you just give thumbs up?

05e14040-523e-4baf-a4d1-011ce69ab14c/12330-0
01:03:04.833 --> 01:03:05.923
Yeah, instead of again typing.

05e14040-523e-4baf-a4d1-011ce69ab14c/12336-0
01:03:05.933 --> 01:03:06.613
Yes. Yes, yes.

05e14040-523e-4baf-a4d1-011ce69ab14c/12338-0
01:03:06.623 --> 01:03:06.763
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/12355-0
01:03:08.143 --> 01:03:10.869
So we actually had another
platform and I really, really

05e14040-523e-4baf-a4d1-011ce69ab14c/12355-1
01:03:10.869 --> 01:03:11.873
missed that platform.

05e14040-523e-4baf-a4d1-011ce69ab14c/12357-0
01:03:11.883 --> 01:03:12.463
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/12368-0
01:03:12.603 --> 01:03:15.973
So it can handle seamlessly more
than 1000 people.

05e14040-523e-4baf-a4d1-011ce69ab14c/12377-0
01:03:16.083 --> 01:03:17.573
Yeah, the chats and all this.

05e14040-523e-4baf-a4d1-011ce69ab14c/12389-0
01:03:17.923 --> 01:03:20.473
And we actually had to, you
know, forgo this platform.

05e14040-523e-4baf-a4d1-011ce69ab14c/12401-0
01:03:20.483 --> 01:03:24.113
And we came to teams and, you
know, the reality of teams now.

05e14040-523e-4baf-a4d1-011ce69ab14c/12403-0
01:03:24.503 --> 01:03:24.683
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/12418-0
01:03:26.103 --> 01:03:29.473
Cool SO3 is the correct answer
for a right.

05e14040-523e-4baf-a4d1-011ce69ab14c/12438-0
01:03:29.483 --> 01:03:33.508
So basically BCDR the children
so that is your number of

05e14040-523e-4baf-a4d1-011ce69ab14c/12438-1
01:03:33.508 --> 01:03:36.473
children, which is the degree of
a right.

05e14040-523e-4baf-a4d1-011ce69ab14c/12458-0
01:03:36.583 --> 01:03:39.197
So similarly, the degree of
hedge could be just one, right,

05e14040-523e-4baf-a4d1-011ce69ab14c/12458-1
01:03:39.197 --> 01:03:40.503
because it has just one child.

05e14040-523e-4baf-a4d1-011ce69ab14c/12478-0
01:03:42.393 --> 01:03:45.508
So on the next option, I'll only
give the answers, so the height

05e14040-523e-4baf-a4d1-011ce69ab14c/12478-1
01:03:45.508 --> 01:03:46.083
of the tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/12496-0
01:03:46.833 --> 01:03:49.925
So for height of a tree, what we
should do, we should take the

05e14040-523e-4baf-a4d1-011ce69ab14c/12496-1
01:03:49.925 --> 01:03:50.513
height of a.

05e14040-523e-4baf-a4d1-011ce69ab14c/12513-0
01:03:50.793 --> 01:03:54.193
We should enumerate all the
paths to leave and we should

05e14040-523e-4baf-a4d1-011ce69ab14c/12513-1
01:03:54.193 --> 01:03:55.863
calculate the maximum right?

05e14040-523e-4baf-a4d1-011ce69ab14c/12522-0
01:03:56.273 --> 01:03:59.703
And what about I is in which
level, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/12533-0
01:03:59.913 --> 01:04:01.843
So root is always in level 0.

05e14040-523e-4baf-a4d1-011ce69ab14c/12538-0
01:04:02.053 --> 01:04:03.543
It's children are in level one.

05e14040-523e-4baf-a4d1-011ce69ab14c/12552-0
01:04:03.753 --> 01:04:07.403
It's children are in level 2, so
I is in level 2.

05e14040-523e-4baf-a4d1-011ce69ab14c/12599-0
01:04:08.673 --> 01:04:14.184
What about depth of HHI can
always do like this H2D and D2A

05e14040-523e-4baf-a4d1-011ce69ab14c/12599-1
01:04:14.184 --> 01:04:19.879
so it is 2 or I can bring in
another analogy where I can tell

05e14040-523e-4baf-a4d1-011ce69ab14c/12599-2
01:04:19.879 --> 01:04:24.103
that I NHR siblings and I has a
level of two.

05e14040-523e-4baf-a4d1-011ce69ab14c/12612-0
01:04:24.193 --> 01:04:27.623
So H also has a level of two and
level and depth are same.

05e14040-523e-4baf-a4d1-011ce69ab14c/12621-0
01:04:27.713 --> 01:04:28.863
So H is a depth two.

05e14040-523e-4baf-a4d1-011ce69ab14c/12635-0
01:04:29.393 --> 01:04:32.763
I can give that definition or
that you know way of answering.

05e14040-523e-4baf-a4d1-011ce69ab14c/12650-0
01:04:32.773 --> 01:04:37.973
Also height of D so for DI
should you know look below.

05e14040-523e-4baf-a4d1-011ce69ab14c/12660-0
01:04:38.123 --> 01:04:40.023
So for DI, have you know 1/2?

05e14040-523e-4baf-a4d1-011ce69ab14c/12663-0
01:04:40.923 --> 01:04:41.593
I have one.

05e14040-523e-4baf-a4d1-011ce69ab14c/12674-0
01:04:41.643 --> 01:04:43.493
I have one so maximum is 2.

05e14040-523e-4baf-a4d1-011ce69ab14c/12677-0
01:04:44.333 --> 01:04:45.573
So eight of these two.

05e14040-523e-4baf-a4d1-011ce69ab14c/12682-0
01:04:47.733 --> 01:04:48.003
Cool.

05e14040-523e-4baf-a4d1-011ce69ab14c/12688-0
01:04:48.013 --> 01:04:49.113
So far so good, guys, all of
you.

05e14040-523e-4baf-a4d1-011ce69ab14c/12692-0
01:04:51.333 --> 01:04:51.643
Yes.

05e14040-523e-4baf-a4d1-011ce69ab14c/12695-0
01:04:51.653 --> 01:04:51.843
No.

05e14040-523e-4baf-a4d1-011ce69ab14c/12701-0
01:04:51.853 --> 01:04:54.103
Maybe is this clear so far?

05e14040-523e-4baf-a4d1-011ce69ab14c/12710-0
01:04:57.193 --> 01:04:58.603
Yeah, we'll take a small break
now.

05e14040-523e-4baf-a4d1-011ce69ab14c/12718-0
01:04:58.613 --> 01:04:59.923
Yeah, not more than 5 minutes.

05e14040-523e-4baf-a4d1-011ce69ab14c/12733-0
01:04:59.933 --> 01:05:02.784
We'll come back after the break,
but terminology is is it clear

05e14040-523e-4baf-a4d1-011ce69ab14c/12733-1
01:05:02.784 --> 01:05:03.363
for everyone?

05e14040-523e-4baf-a4d1-011ce69ab14c/12749-0
01:05:04.463 --> 01:05:07.579
Yeah, I'll keep asking in the
next few classes also here and

05e14040-523e-4baf-a4d1-011ce69ab14c/12749-1
01:05:07.579 --> 01:05:08.243
there, right.

05e14040-523e-4baf-a4d1-011ce69ab14c/12759-0
01:05:10.223 --> 01:05:11.813
Last two questions, depth and
height.

05e14040-523e-4baf-a4d1-011ce69ab14c/12764-0
01:05:11.823 --> 01:05:13.483
We already learned this several
times, yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/12778-0
01:05:15.873 --> 01:05:17.493
You know you can try to answer
it in the break.

05e14040-523e-4baf-a4d1-011ce69ab14c/12811-0
01:05:19.683 --> 01:05:25.387
Depth of edges depth is always
from root to that node, so A to

05e14040-523e-4baf-a4d1-011ce69ab14c/12811-1
01:05:25.387 --> 01:05:30.003
D and D2H that is 2, whereas
height of D is below.

05e14040-523e-4baf-a4d1-011ce69ab14c/12829-0
01:05:30.063 --> 01:05:34.423
So D2 is 1D2J is 1D2H2 Ms two.

05e14040-523e-4baf-a4d1-011ce69ab14c/12835-0
01:05:34.493 --> 01:05:35.723
So this is also two.

05e14040-523e-4baf-a4d1-011ce69ab14c/12837-0
01:05:36.073 --> 01:05:36.613
This is also to.

05e14040-523e-4baf-a4d1-011ce69ab14c/12845-0
01:05:40.463 --> 01:05:41.963
Depth and level are same,
correct?

05e14040-523e-4baf-a4d1-011ce69ab14c/12849-0
01:05:47.263 --> 01:05:47.423
Cool.

05e14040-523e-4baf-a4d1-011ce69ab14c/12858-0
01:05:47.433 --> 01:05:49.233
Let's take a short break.

05e14040-523e-4baf-a4d1-011ce69ab14c/12863-0
01:05:49.323 --> 01:05:50.433
940 will come back.

05e14040-523e-4baf-a4d1-011ce69ab14c/12878-0
01:05:50.443 --> 01:05:54.262
Yeah, I'll still be around if
you have some queries or

05e14040-523e-4baf-a4d1-011ce69ab14c/12878-1
01:05:54.262 --> 01:05:55.303
something else.

05e14040-523e-4baf-a4d1-011ce69ab14c/12886-0
01:05:58.523 --> 01:05:59.273
I use in level 2.

05e14040-523e-4baf-a4d1-011ce69ab14c/12891-0
01:05:59.283 --> 01:05:59.913
Yes, that's correct.

05e14040-523e-4baf-a4d1-011ce69ab14c/12899-0
01:06:01.653 --> 01:06:02.853
A is at level 0.

05e14040-523e-4baf-a4d1-011ce69ab14c/12907-0
01:06:02.913 --> 01:06:04.503
All is children are in level
one.

05e14040-523e-4baf-a4d1-011ce69ab14c/12914-0
01:06:05.013 --> 01:06:06.253
It's still run, are in level 2.

05e14040-523e-4baf-a4d1-011ce69ab14c/12924-0
01:06:12.113 --> 01:06:13.643
Yeah, this is the terminology
slide.

05e14040-523e-4baf-a4d1-011ce69ab14c/12943-0
01:06:15.163 --> 01:06:18.338
Ah, that's fine rishab as long
as you understood you can

05e14040-523e-4baf-a4d1-011ce69ab14c/12943-1
01:06:18.338 --> 01:06:20.343
always, you know, like the
answers.

05e14040-523e-4baf-a4d1-011ce69ab14c/12949-0
01:06:22.573 --> 01:06:23.343
Try to solve it, yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/12959-0
01:06:26.903 --> 01:06:28.073
There is nothing called limp.

05e14040-523e-4baf-a4d1-011ce69ab14c/12977-0
01:06:28.083 --> 01:06:31.710
That is what I'm again and again
repeating length is nothing but

05e14040-523e-4baf-a4d1-011ce69ab14c/12977-1
01:06:31.710 --> 01:06:32.993
a general English word.

05e14040-523e-4baf-a4d1-011ce69ab14c/12981-0
01:06:33.003 --> 01:06:33.213
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/12988-0
01:06:33.223 --> 01:06:35.833
Which means how many edges are
there?

05e14040-523e-4baf-a4d1-011ce69ab14c/13001-0
01:06:35.843 --> 01:06:38.883
That's all in a terminology
aspect.

05e14040-523e-4baf-a4d1-011ce69ab14c/13013-0
01:06:39.323 --> 01:06:41.843
For a tree, there is no length,
there is only depth.

05e14040-523e-4baf-a4d1-011ce69ab14c/13030-0
01:06:41.953 --> 01:06:45.287
There is height, there is
degree, there is level, there is

05e14040-523e-4baf-a4d1-011ce69ab14c/13030-1
01:06:45.287 --> 01:06:46.473
nothing called lymph.

05e14040-523e-4baf-a4d1-011ce69ab14c/13043-0
01:06:50.673 --> 01:06:51.883
Yeah, we can say a lot of
things.

05e14040-523e-4baf-a4d1-011ce69ab14c/13048-0
01:06:51.893 --> 01:06:52.963
I don't want to commend them.

05e14040-523e-4baf-a4d1-011ce69ab14c/13052-0
01:06:52.973 --> 01:06:53.233
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/13094-0
01:06:53.243 --> 01:06:55.962
So it's up to you to now, you
know, take this definitions

05e14040-523e-4baf-a4d1-011ce69ab14c/13094-1
01:06:55.962 --> 01:06:58.962
forward and you know, correlate
them, try to see what the same,

05e14040-523e-4baf-a4d1-011ce69ab14c/13094-2
01:06:58.962 --> 01:07:01.493
what is not same and you know
things like that. Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/13129-0
01:07:05.473 --> 01:07:08.920
Because there are a lot of
interesting things around 3 in

05e14040-523e-4baf-a4d1-011ce69ab14c/13129-1
01:07:08.920 --> 01:07:12.367
your quizzes, I don't want to
spoil the, you know, fun by

05e14040-523e-4baf-a4d1-011ce69ab14c/13129-2
01:07:12.367 --> 01:07:13.733
giving out answers now.

05e14040-523e-4baf-a4d1-011ce69ab14c/13155-0
01:07:24.703 --> 01:07:27.559
And there was some question on
can we say internal node of a

05e14040-523e-4baf-a4d1-011ce69ab14c/13155-1
01:07:27.559 --> 01:07:27.933
same as.

05e14040-523e-4baf-a4d1-011ce69ab14c/13173-0
01:07:28.063 --> 01:07:31.356
So you're completely messing it
up so internal node means it is

05e14040-523e-4baf-a4d1-011ce69ab14c/13173-1
01:07:31.356 --> 01:07:32.693
a node which has children.

05e14040-523e-4baf-a4d1-011ce69ab14c/13177-0
01:07:32.753 --> 01:07:33.083
That's it.

05e14040-523e-4baf-a4d1-011ce69ab14c/13183-0
01:07:33.703 --> 01:07:35.213
Degree means how many children?

05e14040-523e-4baf-a4d1-011ce69ab14c/13196-0
01:07:35.503 --> 01:07:37.533
So how can you say both are same
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/13203-0
01:07:38.563 --> 01:07:40.613
Internal node is basically a
true or false.

05e14040-523e-4baf-a4d1-011ce69ab14c/13219-0
01:07:40.623 --> 01:07:43.383
Sensor is a an internal node or
not.

05e14040-523e-4baf-a4d1-011ce69ab14c/13232-0
01:07:43.463 --> 01:07:46.453
You will say true or false,
whereas degree is always a

05e14040-523e-4baf-a4d1-011ce69ab14c/13232-1
01:07:46.453 --> 01:07:46.833
number.

05e14040-523e-4baf-a4d1-011ce69ab14c/13249-0
01:07:47.413 --> 01:07:50.778
Yeah, it is either zero or one
or two, or how many children are

05e14040-523e-4baf-a4d1-011ce69ab14c/13249-1
01:07:50.778 --> 01:07:51.093
there.

05e14040-523e-4baf-a4d1-011ce69ab14c/13256-0
01:07:51.323 --> 01:07:52.953
So those two cannot be the same,
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/13263-0
01:07:57.103 --> 01:07:58.353
You actually move back, Krishna.

05e14040-523e-4baf-a4d1-011ce69ab14c/13268-0
01:07:58.463 --> 01:07:59.263
You wanted this slide?

05e14040-523e-4baf-a4d1-011ce69ab14c/13278-0
01:08:10.003 --> 01:08:10.913
Yeah, we are on a break.

05e14040-523e-4baf-a4d1-011ce69ab14c/13282-0
01:08:10.923 --> 01:08:12.023
We'll resume in another.

05e14040-523e-4baf-a4d1-011ce69ab14c/13286-0
01:08:14.103 --> 01:08:14.723
2-3 minutes.

05e14040-523e-4baf-a4d1-011ce69ab14c/13302-0
01:08:29.373 --> 01:08:30.923
By the way, what is the height
of this tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/13319-0
01:08:33.013 --> 01:08:35.683
Cohen told four a couple of them
are also giving thumbs up.

05e14040-523e-4baf-a4d1-011ce69ab14c/13324-0
01:08:35.693 --> 01:08:36.593
Is it really 4 here?

05e14040-523e-4baf-a4d1-011ce69ab14c/13333-0
01:08:44.503 --> 01:08:45.493
No, it is 3.

05e14040-523e-4baf-a4d1-011ce69ab14c/13336-0
01:08:45.503 --> 01:08:46.053
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/13341-0
01:08:46.543 --> 01:08:47.853
Our mind is so deceiving.

05e14040-523e-4baf-a4d1-011ce69ab14c/13351-0
01:08:47.863 --> 01:08:49.963
You know, you you feel this is
one.

05e14040-523e-4baf-a4d1-011ce69ab14c/13362-0
01:08:50.283 --> 01:08:51.913
You are counting this as two.

05e14040-523e-4baf-a4d1-011ce69ab14c/13373-0
01:08:52.003 --> 01:08:54.050
You are counting this as three
and you're counting this as

05e14040-523e-4baf-a4d1-011ce69ab14c/13373-1
01:08:54.050 --> 01:08:54.223
four.

05e14040-523e-4baf-a4d1-011ce69ab14c/13379-0
01:08:56.433 --> 01:08:57.453
Yeah, but that's not right.

05e14040-523e-4baf-a4d1-011ce69ab14c/13389-0
01:08:59.483 --> 01:09:01.353
Actually this is the same line
here.

05e14040-523e-4baf-a4d1-011ce69ab14c/13394-0
01:09:01.783 --> 01:09:02.383
This is 1.

05e14040-523e-4baf-a4d1-011ce69ab14c/13398-0
01:09:02.393 --> 01:09:02.893
This is 2.

05e14040-523e-4baf-a4d1-011ce69ab14c/13401-0
01:09:02.903 --> 01:09:03.423
This is 3.

05e14040-523e-4baf-a4d1-011ce69ab14c/13418-0
01:09:04.173 --> 01:09:06.783
This will also help you 3 this
will help you 2.

05e14040-523e-4baf-a4d1-011ce69ab14c/13422-0
01:09:07.033 --> 01:09:08.393
This will lead you 1/2.

05e14040-523e-4baf-a4d1-011ce69ab14c/13430-0
01:09:09.193 --> 01:09:11.753
This will give you 123.

05e14040-523e-4baf-a4d1-011ce69ab14c/13452-0
01:09:12.253 --> 01:09:16.358
This will really two this will
you two maximum of it is 3 so

05e14040-523e-4baf-a4d1-011ce69ab14c/13452-1
01:09:16.358 --> 01:09:17.973
height of the tree is 3.

05e14040-523e-4baf-a4d1-011ce69ab14c/13456-0
01:09:24.633 --> 01:09:24.803
Cool.

05e14040-523e-4baf-a4d1-011ce69ab14c/13466-0
01:09:25.873 --> 01:09:27.543
Let's give it another minute for
others to join.

05e14040-523e-4baf-a4d1-011ce69ab14c/13474-0
01:09:30.993 --> 01:09:31.563
So far so good.

05e14040-523e-4baf-a4d1-011ce69ab14c/13476-0
01:09:31.573 --> 01:09:31.933
All of you.

05e14040-523e-4baf-a4d1-011ce69ab14c/13482-0
01:09:33.133 --> 01:09:34.043
What is a tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/13485-0
01:09:34.093 --> 01:09:35.003
It's motivation.

05e14040-523e-4baf-a4d1-011ce69ab14c/13490-0
01:09:35.013 --> 01:09:35.883
How are they related?

05e14040-523e-4baf-a4d1-011ce69ab14c/13513-0
01:09:35.893 --> 01:09:40.324
The parent child and about the
various terminologies, number of

05e14040-523e-4baf-a4d1-011ce69ab14c/13513-1
01:09:40.324 --> 01:09:43.093
sub trees in this problem is 3
correct?

05e14040-523e-4baf-a4d1-011ce69ab14c/13528-0
01:09:43.103 --> 01:09:45.913
Yeah, the T1T2T3 that I have
marked, right, correct.

05e14040-523e-4baf-a4d1-011ce69ab14c/13536-0
01:09:45.963 --> 01:09:49.503
They are subtrees which I have
created.

05e14040-523e-4baf-a4d1-011ce69ab14c/13546-0
01:09:49.513 --> 01:09:51.043
You could have carved out
anything else.

05e14040-523e-4baf-a4d1-011ce69ab14c/13583-0
01:09:51.053 --> 01:09:55.364
Also, you can just take that EKL
that also you can take out you

05e14040-523e-4baf-a4d1-011ce69ab14c/13583-1
01:09:55.364 --> 01:09:59.473
can put it as T4 however you
want you can you know it's just

05e14040-523e-4baf-a4d1-011ce69ab14c/13583-2
01:09:59.473 --> 01:10:01.763
a sub part of your original
tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/13595-0
01:10:08.443 --> 01:10:09.373
I thought D is 2.

05e14040-523e-4baf-a4d1-011ce69ab14c/13598-0
01:10:09.383 --> 01:10:10.033
Yes, that's correct.

05e14040-523e-4baf-a4d1-011ce69ab14c/13606-0
01:10:17.623 --> 01:10:18.783
All of you, is it clear guys?

05e14040-523e-4baf-a4d1-011ce69ab14c/13610-0
01:10:20.163 --> 01:10:21.053
Pre terminologies.

05e14040-523e-4baf-a4d1-011ce69ab14c/13621-0
01:10:25.283 --> 01:10:28.043
You can give a thumbs up as a
reaction.

05e14040-523e-4baf-a4d1-011ce69ab14c/13644-0
01:10:41.673 --> 01:10:44.883
Without a T1T2T3 form forest.

05e14040-523e-4baf-a4d1-011ce69ab14c/13648-0
01:10:44.973 --> 01:10:46.523
Yeah, exactly correct.

05e14040-523e-4baf-a4d1-011ce69ab14c/13660-0
01:10:46.873 --> 01:10:49.763
So if A is not there, then they
all become disjoint, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/13670-0
01:10:50.223 --> 01:10:52.203
So they all become like 3
different trees.

05e14040-523e-4baf-a4d1-011ce69ab14c/13681-0
01:10:52.213 --> 01:10:55.813
They're not connected, so you
can call them as a forest.

05e14040-523e-4baf-a4d1-011ce69ab14c/13701-0
01:10:59.593 --> 01:11:03.640
Yeah, we can consider you K also
we can consider as I told it is

05e14040-523e-4baf-a4d1-011ce69ab14c/13701-1
01:11:03.640 --> 01:11:04.573
not exhaustive.

05e14040-523e-4baf-a4d1-011ce69ab14c/13710-0
01:11:04.983 --> 01:11:06.623
You can carve out any portions
of it.

05e14040-523e-4baf-a4d1-011ce69ab14c/13722-0
01:11:08.753 --> 01:11:10.893
Cool guys, it's 940, so let's
get started.

05e14040-523e-4baf-a4d1-011ce69ab14c/13724-0
01:11:10.953 --> 01:11:11.113
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/13733-0
01:11:12.513 --> 01:11:13.533
So some tree methods.

05e14040-523e-4baf-a4d1-011ce69ab14c/13745-0
01:11:13.543 --> 01:11:17.963
So what are the main methods of
a stack real quick?

05e14040-523e-4baf-a4d1-011ce69ab14c/13753-0
01:11:19.493 --> 01:11:21.063
What is the heart of a stack?

05e14040-523e-4baf-a4d1-011ce69ab14c/13761-0
01:11:21.073 --> 01:11:22.463
What operations can you do on
them?

05e14040-523e-4baf-a4d1-011ce69ab14c/13768-0
01:11:25.143 --> 01:11:25.953
Yeah, push and pop.

05e14040-523e-4baf-a4d1-011ce69ab14c/13771-0
01:11:25.963 --> 01:11:26.493
Very good.

05e14040-523e-4baf-a4d1-011ce69ab14c/13775-0
01:11:26.943 --> 01:11:27.803
What about a queue?

05e14040-523e-4baf-a4d1-011ce69ab14c/13787-0
01:11:30.403 --> 01:11:31.653
In a queue, what can I do?

05e14040-523e-4baf-a4d1-011ce69ab14c/13794-0
01:11:31.943 --> 01:11:33.323
I can do NQR.

05e14040-523e-4baf-a4d1-011ce69ab14c/13797-0
01:11:34.263 --> 01:11:34.613
Thank you.

05e14040-523e-4baf-a4d1-011ce69ab14c/13799-0
01:11:35.803 --> 01:11:36.173
Right.

05e14040-523e-4baf-a4d1-011ce69ab14c/13825-0
01:11:36.743 --> 01:11:39.387
Similarly, in a linked list, we
saw a lot of things that we can

05e14040-523e-4baf-a4d1-011ce69ab14c/13825-1
01:11:39.387 --> 01:11:40.873
do and in three what all can we
do?

05e14040-523e-4baf-a4d1-011ce69ab14c/13845-0
01:11:41.343 --> 01:11:45.420
I have two types, one is called
generic methods, one is called

05e14040-523e-4baf-a4d1-011ce69ab14c/13845-1
01:11:45.420 --> 01:11:46.973
accessor methods, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/13870-0
01:11:47.043 --> 01:11:49.979
Or just to access them so
generic methods I can have the

05e14040-523e-4baf-a4d1-011ce69ab14c/13870-1
01:11:49.979 --> 01:11:52.863
size which will return the
number of nodes in the tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/13882-0
01:11:53.883 --> 01:11:56.813
I can ask it's empty if the
whole tree is empty.

05e14040-523e-4baf-a4d1-011ce69ab14c/13893-0
01:11:56.823 --> 01:11:58.723
I don't have anything in the
tree right then.

05e14040-523e-4baf-a4d1-011ce69ab14c/13899-0
01:11:58.733 --> 01:11:59.613
It is is empty.

05e14040-523e-4baf-a4d1-011ce69ab14c/13903-0
01:11:59.623 --> 01:12:00.663
Is true, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/13913-0
01:12:00.843 --> 01:12:02.013
Give me an answer as Boolean.

05e14040-523e-4baf-a4d1-011ce69ab14c/13926-0
01:12:02.283 --> 01:12:04.113
This will give me an answer as
integer right?

05e14040-523e-4baf-a4d1-011ce69ab14c/13928-0
01:12:04.123 --> 01:12:04.813
The number of nodes.

05e14040-523e-4baf-a4d1-011ce69ab14c/13959-0
01:12:06.413 --> 01:12:09.818
Or I can ask the elements where
it will return an iterator of

05e14040-523e-4baf-a4d1-011ce69ab14c/13959-1
01:12:09.818 --> 01:12:12.343
all the elements stored at nodes
of the tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/13985-0
01:12:12.633 --> 01:12:16.171
Meaning iterator, it will return
right, meaning it will give me a

05e14040-523e-4baf-a4d1-011ce69ab14c/13985-1
01:12:16.171 --> 01:12:19.602
pointer via which I can iterate
all the nodes more like a loop,

05e14040-523e-4baf-a4d1-011ce69ab14c/13985-2
01:12:19.602 --> 01:12:19.923
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/13995-0
01:12:20.193 --> 01:12:21.973
I'll be able to get all the
elements.

05e14040-523e-4baf-a4d1-011ce69ab14c/14017-0
01:12:22.943 --> 01:12:25.827
Whereas I can also have a
position, I can ask, you know,

05e14040-523e-4baf-a4d1-011ce69ab14c/14017-1
01:12:25.827 --> 01:12:27.243
return the root of the tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/14032-0
01:12:28.143 --> 01:12:34.059
I can pass some node P and ask
return the parent of this node P

05e14040-523e-4baf-a4d1-011ce69ab14c/14032-1
01:12:34.059 --> 01:12:34.613
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/14053-0
01:12:34.683 --> 01:12:38.636
But if I pause that P as my root
itself, then the root will not

05e14040-523e-4baf-a4d1-011ce69ab14c/14053-1
01:12:38.636 --> 01:12:39.933
have a parent, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/14065-0
01:12:39.943 --> 01:12:41.103
So it will end up in an error.

05e14040-523e-4baf-a4d1-011ce69ab14c/14084-0
01:12:41.743 --> 01:12:45.372
Similarly, I can, you know, give
a P and ask give me all its

05e14040-523e-4baf-a4d1-011ce69ab14c/14084-1
01:12:45.372 --> 01:12:46.323
children. Right.

05e14040-523e-4baf-a4d1-011ce69ab14c/14125-0
01:12:46.493 --> 01:12:50.544
So all these type of methods I
can have, I can have query

05e14040-523e-4baf-a4d1-011ce69ab14c/14125-1
01:12:50.544 --> 01:12:54.874
methods, meaning I can give a
particular node and ask is this

05e14040-523e-4baf-a4d1-011ce69ab14c/14125-2
01:12:54.874 --> 01:12:58.995
an internal node, right test
whether node V is internal or

05e14040-523e-4baf-a4d1-011ce69ab14c/14125-3
01:12:58.995 --> 01:12:59.763
not, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/14164-0
01:12:59.943 --> 01:13:04.046
Similarly, I can have is leaf or
is external where I will pass

05e14040-523e-4baf-a4d1-011ce69ab14c/14164-1
01:13:04.046 --> 01:13:07.824
that node V and ask is this
external node or not they how

05e14040-523e-4baf-a4d1-011ce69ab14c/14164-2
01:13:07.824 --> 01:13:10.363
will you find out if it's degree
zero?

05e14040-523e-4baf-a4d1-011ce69ab14c/14187-0
01:13:10.793 --> 01:13:13.722
Meaning, if it doesn't have any
children, or if it doesn't have

05e14040-523e-4baf-a4d1-011ce69ab14c/14187-1
01:13:13.722 --> 01:13:15.963
any descendants, it means it's
an external node.

05e14040-523e-4baf-a4d1-011ce69ab14c/14197-0
01:13:16.053 --> 01:13:20.263
Otherwise it's an internal node
is root, yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/14211-0
01:13:20.273 --> 01:13:21.963
How will you know if something
is a root or not?

05e14040-523e-4baf-a4d1-011ce69ab14c/14230-0
01:13:23.543 --> 01:13:27.588
It will not have a parent right
then that node is a root update

05e14040-523e-4baf-a4d1-011ce69ab14c/14230-1
01:13:27.588 --> 01:13:28.093
methods.

05e14040-523e-4baf-a4d1-011ce69ab14c/14250-0
01:13:28.163 --> 01:13:32.131
You can have you know V and WS2
nodes swap the elements stored

05e14040-523e-4baf-a4d1-011ce69ab14c/14250-1
01:13:32.131 --> 01:13:33.453
at the nodes V&amp;W.

05e14040-523e-4baf-a4d1-011ce69ab14c/14265-0
01:13:33.463 --> 01:13:38.023
You can swap them or you can
replace the node V with E right.

05e14040-523e-4baf-a4d1-011ce69ab14c/14269-0
01:13:38.033 --> 01:13:39.843
You can replace them right?

05e14040-523e-4baf-a4d1-011ce69ab14c/14280-0
01:13:39.933 --> 01:13:41.893
So all these type of methods you
can do.

05e14040-523e-4baf-a4d1-011ce69ab14c/14282-0
01:13:42.623 --> 01:13:42.843
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/14292-0
01:13:42.853 --> 01:13:44.363
Will you be able to implement
all of these?

05e14040-523e-4baf-a4d1-011ce69ab14c/14297-0
01:13:47.123 --> 01:13:47.453
And then?

05e14040-523e-4baf-a4d1-011ce69ab14c/14303-0
01:13:47.463 --> 01:13:47.893
He asked.

05e14040-523e-4baf-a4d1-011ce69ab14c/14311-0
01:13:47.953 --> 01:13:49.143
Arthur built-in function.

05e14040-523e-4baf-a4d1-011ce69ab14c/14343-0
01:13:49.233 --> 01:13:52.723
Can I use this so in a couple of
languages these are built in,

05e14040-523e-4baf-a4d1-011ce69ab14c/14343-1
01:13:52.723 --> 01:13:56.157
but in a language like say see
or C++ they might not be built

05e14040-523e-4baf-a4d1-011ce69ab14c/14343-2
01:13:56.157 --> 01:13:56.323
in.

05e14040-523e-4baf-a4d1-011ce69ab14c/14385-0
01:13:57.143 --> 01:14:00.693
If you want to implement their
own tree, then you will have to

05e14040-523e-4baf-a4d1-011ce69ab14c/14385-1
01:14:00.693 --> 01:14:04.187
implement all these functions or
methods also right in Python

05e14040-523e-4baf-a4d1-011ce69ab14c/14385-2
01:14:04.187 --> 01:14:07.850
there are advanced libraries, so
you will be able to import them

05e14040-523e-4baf-a4d1-011ce69ab14c/14385-3
01:14:07.850 --> 01:14:08.413
in use it.

05e14040-523e-4baf-a4d1-011ce69ab14c/14398-0
01:14:09.353 --> 01:14:12.323
But knowing me, you know what is
to be done in your assignments?

05e14040-523e-4baf-a4d1-011ce69ab14c/14410-0
01:14:12.413 --> 01:14:14.263
You will not use any built-in
functions.

05e14040-523e-4baf-a4d1-011ce69ab14c/14412-0
01:14:14.833 --> 01:14:15.383
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/14432-0
01:14:15.453 --> 01:14:17.223
So there will be a rubric for
two marks.

05e14040-523e-4baf-a4d1-011ce69ab14c/14439-0
01:14:17.513 --> 01:14:20.808
If you have used built-in
functions, those two marks will

05e14040-523e-4baf-a4d1-011ce69ab14c/14439-1
01:14:20.808 --> 01:14:21.603
be one, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/14454-0
01:14:21.613 --> 01:14:25.102
Because the point here is to
understand how a tree works

05e14040-523e-4baf-a4d1-011ce69ab14c/14454-1
01:14:25.102 --> 01:14:26.203
internally, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/14467-0
01:14:26.253 --> 01:14:29.518
So how can you calculate if
something is external node or

05e14040-523e-4baf-a4d1-011ce69ab14c/14467-1
01:14:29.518 --> 01:14:29.743
not?

05e14040-523e-4baf-a4d1-011ce69ab14c/14531-0
01:14:30.133 --> 01:14:33.553
How can you know if something is
internal node or not, so that is

05e14040-523e-4baf-a4d1-011ce69ab14c/14531-1
01:14:33.553 --> 01:14:36.558
the point if you just use a
built in function, it is just

05e14040-523e-4baf-a4d1-011ce69ab14c/14531-2
01:14:36.558 --> 01:14:39.666
going to give you a true or
false where there is no meaning

05e14040-523e-4baf-a4d1-011ce69ab14c/14531-3
01:14:39.666 --> 01:14:42.930
then so in all your assignments
you will not be using built-in

05e14040-523e-4baf-a4d1-011ce69ab14c/14531-4
01:14:42.930 --> 01:14:45.313
functions although they are
available, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/14537-0
01:14:47.603 --> 01:14:47.853
Cool.

05e14040-523e-4baf-a4d1-011ce69ab14c/14543-0
01:14:47.863 --> 01:14:48.413
So far so good.

05e14040-523e-4baf-a4d1-011ce69ab14c/14555-0
01:14:48.423 --> 01:14:53.233
All of you, we will just try to
learn sudo codes.

05e14040-523e-4baf-a4d1-011ce69ab14c/14565-0
01:14:53.283 --> 01:14:55.773
One for depth and one for height
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/14570-0
01:14:55.783 --> 01:14:56.653
And then we'll proceed ahead.

05e14040-523e-4baf-a4d1-011ce69ab14c/14576-0
01:14:59.913 --> 01:15:00.703
So depth.

05e14040-523e-4baf-a4d1-011ce69ab14c/14581-0
01:15:00.793 --> 01:15:01.623
Yeah, all of you are here.

05e14040-523e-4baf-a4d1-011ce69ab14c/14593-0
01:15:01.633 --> 01:15:03.543
I don't see any replies, so I'm
a little confused.

05e14040-523e-4baf-a4d1-011ce69ab14c/14596-0
01:15:03.553 --> 01:15:03.673
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/14600-0
01:15:04.633 --> 01:15:05.583
Is everyone back?

05e14040-523e-4baf-a4d1-011ce69ab14c/14609-0
01:15:05.653 --> 01:15:07.093
Did you get all the methods?

05e14040-523e-4baf-a4d1-011ce69ab14c/14627-0
01:15:08.523 --> 01:15:12.162
I can have query methods update
methods or you know accessing

05e14040-523e-4baf-a4d1-011ce69ab14c/14627-1
01:15:12.162 --> 01:15:13.453
methods and all those.

05e14040-523e-4baf-a4d1-011ce69ab14c/14629-0
01:15:13.463 --> 01:15:13.753
Right.

05e14040-523e-4baf-a4d1-011ce69ab14c/14631-0
01:15:14.303 --> 01:15:14.653
Cool.

05e14040-523e-4baf-a4d1-011ce69ab14c/14652-0
01:15:14.703 --> 01:15:17.157
It's a good practice for you,
you know, try to do them, you

05e14040-523e-4baf-a4d1-011ce69ab14c/14652-1
01:15:17.157 --> 01:15:18.383
know, in scratch using Python.

05e14040-523e-4baf-a4d1-011ce69ab14c/14667-0
01:15:19.893 --> 01:15:23.393
Let's go back to these two my
thirds depth and height.

05e14040-523e-4baf-a4d1-011ce69ab14c/14673-0
01:15:23.643 --> 01:15:24.563
I want to calculate it.

05e14040-523e-4baf-a4d1-011ce69ab14c/14681-0
01:15:25.623 --> 01:15:27.773
Let V be a node of a treaty.

05e14040-523e-4baf-a4d1-011ce69ab14c/14692-0
01:15:28.243 --> 01:15:29.983
Yeah, we some node inside a
tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/14718-0
01:15:30.863 --> 01:15:36.379
I want to know that node V's the
death of V is the number of

05e14040-523e-4baf-a4d1-011ce69ab14c/14718-1
01:15:36.379 --> 01:15:39.543
ancestors of V excluding V
itself.

05e14040-523e-4baf-a4d1-011ce69ab14c/14723-0
01:15:39.553 --> 01:15:42.523
Itself you definition right.

05e14040-523e-4baf-a4d1-011ce69ab14c/14727-0
01:15:43.783 --> 01:15:45.033
Previously we saw depth test.

05e14040-523e-4baf-a4d1-011ce69ab14c/14730-0
01:15:45.043 --> 01:15:46.213
Something else, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/14738-0
01:15:46.223 --> 01:15:47.233
We told from the root.

05e14040-523e-4baf-a4d1-011ce69ab14c/14743-0
01:15:47.243 --> 01:15:47.953
I'll come till here.

05e14040-523e-4baf-a4d1-011ce69ab14c/14772-0
01:15:48.903 --> 01:15:52.213
That end, this definitions are
the same only, but it has been

05e14040-523e-4baf-a4d1-011ce69ab14c/14772-1
01:15:52.213 --> 01:15:55.523
rephrased in a manner that you
know you can convert this into

05e14040-523e-4baf-a4d1-011ce69ab14c/14772-2
01:15:55.523 --> 01:15:56.163
programming.

05e14040-523e-4baf-a4d1-011ce69ab14c/14784-0
01:15:57.383 --> 01:15:58.993
I'll repeat what I've just told.

05e14040-523e-4baf-a4d1-011ce69ab14c/14801-0
01:15:59.303 --> 01:16:04.756
The depth of V is the number of
ancestors of V excluding V

05e14040-523e-4baf-a4d1-011ce69ab14c/14801-1
01:16:04.756 --> 01:16:05.403
itself.

05e14040-523e-4baf-a4d1-011ce69ab14c/14807-0
01:16:06.343 --> 01:16:07.513
Let's put it into practice.

05e14040-523e-4baf-a4d1-011ce69ab14c/14816-0
01:16:07.523 --> 01:16:11.683
Let's take an example for this
particular node.

05e14040-523e-4baf-a4d1-011ce69ab14c/14824-0
01:16:11.693 --> 01:16:13.173
Consider this node right.

05e14040-523e-4baf-a4d1-011ce69ab14c/14829-0
01:16:13.343 --> 01:16:15.263
I want to calculate its dip.

05e14040-523e-4baf-a4d1-011ce69ab14c/14834-0
01:16:17.053 --> 01:16:17.293
Right.

05e14040-523e-4baf-a4d1-011ce69ab14c/14843-0
01:16:18.053 --> 01:16:22.623
The number of ancestors of it,
excluding him, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/14849-0
01:16:23.543 --> 01:16:24.603
So what can I tell about this?

05e14040-523e-4baf-a4d1-011ce69ab14c/14863-0
01:16:29.223 --> 01:16:31.433
And sister Susan ancestor, this
is an and sister.

05e14040-523e-4baf-a4d1-011ce69ab14c/14882-0
01:16:31.443 --> 01:16:34.811
This is an ancestor SO3
ancestors are there, so that is

05e14040-523e-4baf-a4d1-011ce69ab14c/14882-1
01:16:34.811 --> 01:16:36.073
nothing but it's def.

05e14040-523e-4baf-a4d1-011ce69ab14c/14885-0
01:16:37.523 --> 01:16:37.753
Yes.

05e14040-523e-4baf-a4d1-011ce69ab14c/14896-0
01:16:37.763 --> 01:16:40.353
No, maybe that is what we are
doing here.

05e14040-523e-4baf-a4d1-011ce69ab14c/14904-0
01:16:41.533 --> 01:16:44.103
So that again, how do I
calculate right?

05e14040-523e-4baf-a4d1-011ce69ab14c/14925-0
01:16:44.573 --> 01:16:50.093
I know that if V is the root,
then the depth of V0 correct?

05e14040-523e-4baf-a4d1-011ce69ab14c/14941-0
01:16:50.543 --> 01:16:54.139
How I can calculate this now you
will see the magic for this

05e14040-523e-4baf-a4d1-011ce69ab14c/14941-1
01:16:54.139 --> 01:16:54.433
node.

05e14040-523e-4baf-a4d1-011ce69ab14c/14961-0
01:16:54.443 --> 01:16:59.973
I want to calculate, so I will
say that depth of this is one

05e14040-523e-4baf-a4d1-011ce69ab14c/14961-1
01:16:59.973 --> 01:17:02.783
place, the depth of its parent.

05e14040-523e-4baf-a4d1-011ce69ab14c/14972-0
01:17:04.943 --> 01:17:06.553
So what is the depth of its
parent?

05e14040-523e-4baf-a4d1-011ce69ab14c/14989-0
01:17:06.743 --> 01:17:10.537
I don't know that is again the
one plus the depth of its

05e14040-523e-4baf-a4d1-011ce69ab14c/14989-1
01:17:10.537 --> 01:17:11.003
parent.

05e14040-523e-4baf-a4d1-011ce69ab14c/14999-0
01:17:12.083 --> 01:17:16.183
What about his one plus the
depth of his parent?

05e14040-523e-4baf-a4d1-011ce69ab14c/15002-0
01:17:18.903 --> 01:17:19.113
Right.

05e14040-523e-4baf-a4d1-011ce69ab14c/15011-0
01:17:20.323 --> 01:17:22.083
And what about the depth of the
parent?

05e14040-523e-4baf-a4d1-011ce69ab14c/15028-0
01:17:22.973 --> 01:17:26.599
This is 0 correct because this
is the root, so this zero will

05e14040-523e-4baf-a4d1-011ce69ab14c/15028-1
01:17:26.599 --> 01:17:27.183
come here.

05e14040-523e-4baf-a4d1-011ce69ab14c/15036-0
01:17:27.673 --> 01:17:29.023
So 1 + 0 is 1.

05e14040-523e-4baf-a4d1-011ce69ab14c/15046-0
01:17:29.073 --> 01:17:31.083
This one will come here 1 + 1 is
2.

05e14040-523e-4baf-a4d1-011ce69ab14c/15053-0
01:17:31.613 --> 01:17:32.803
This two will come here.

05e14040-523e-4baf-a4d1-011ce69ab14c/15067-0
01:17:32.913 --> 01:17:37.293
2 + 1 is 3 and sister by default
doesn't include V right?

05e14040-523e-4baf-a4d1-011ce69ab14c/15073-0
01:17:37.303 --> 01:17:38.473
Why are we exclusively?

05e14040-523e-4baf-a4d1-011ce69ab14c/15077-0
01:17:38.483 --> 01:17:38.653
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/15083-0
01:17:38.663 --> 01:17:39.953
Just just to make it clear.

05e14040-523e-4baf-a4d1-011ce69ab14c/15107-0
01:17:40.023 --> 01:17:43.362
Yeah, it doesn't include by
definition, just to make it

05e14040-523e-4baf-a4d1-011ce69ab14c/15107-1
01:17:43.362 --> 01:17:47.296
clear for you, I have explicitly
told that don't count them. Also

05e14040-523e-4baf-a4d1-011ce69ab14c/15107-2
01:17:47.296 --> 01:17:47.653
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/15110-0
01:17:48.063 --> 01:17:48.463
Is it clear?

05e14040-523e-4baf-a4d1-011ce69ab14c/15126-0
01:17:51.183 --> 01:17:54.103
If if we use the root, then the
depth of V0.

05e14040-523e-4baf-a4d1-011ce69ab14c/15133-0
01:17:54.423 --> 01:17:56.053
So now why is this line given?

05e14040-523e-4baf-a4d1-011ce69ab14c/15144-0
01:17:56.123 --> 01:17:58.883
Yeah, in your actual code, where
will this be used?

05e14040-523e-4baf-a4d1-011ce69ab14c/15148-0
01:18:01.003 --> 01:18:01.433
Let's see.

05e14040-523e-4baf-a4d1-011ce69ab14c/15154-0
01:18:01.443 --> 01:18:02.463
Someone is able to get that.

05e14040-523e-4baf-a4d1-011ce69ab14c/15161-0
01:18:05.933 --> 01:18:08.463
Yeah, in your recursion.

05e14040-523e-4baf-a4d1-011ce69ab14c/15163-0
01:18:08.473 --> 01:18:09.083
Exactly.

05e14040-523e-4baf-a4d1-011ce69ab14c/15171-0
01:18:09.093 --> 01:18:11.203
Yeah, common is bang on.

05e14040-523e-4baf-a4d1-011ce69ab14c/15178-0
01:18:11.213 --> 01:18:12.933
That is your base case, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/15197-0
01:18:12.943 --> 01:18:16.063
Your base case is nothing, but
when you hit the root, the root

05e14040-523e-4baf-a4d1-011ce69ab14c/15197-1
01:18:16.063 --> 01:18:17.103
will have a 0, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/15204-0
01:18:17.113 --> 01:18:18.623
So that is your base case.

05e14040-523e-4baf-a4d1-011ce69ab14c/15226-0
01:18:19.033 --> 01:18:21.839
So if you see the algorithm,
otherwise the depth of VS1 plus

05e14040-523e-4baf-a4d1-011ce69ab14c/15226-1
01:18:21.839 --> 01:18:22.943
the depth of the parent.

05e14040-523e-4baf-a4d1-011ce69ab14c/15267-0
01:18:23.473 --> 01:18:27.716
So if you see the code here,
depth three is the TV is the

05e14040-523e-4baf-a4d1-011ce69ab14c/15267-1
01:18:27.716 --> 01:18:32.250
node I want to find out if T dot
is root of V, meaning in the

05e14040-523e-4baf-a4d1-011ce69ab14c/15267-2
01:18:32.250 --> 01:18:34.883
tree I'm asking is this V the
root?

05e14040-523e-4baf-a4d1-011ce69ab14c/15275-0
01:18:35.173 --> 01:18:36.573
If so, then return it as zero.

05e14040-523e-4baf-a4d1-011ce69ab14c/15282-0
01:18:37.553 --> 01:18:38.303
That is the base case.

05e14040-523e-4baf-a4d1-011ce69ab14c/15295-0
01:18:39.343 --> 01:18:43.248
Otherwise return one plus depth,
meaning the same word is being

05e14040-523e-4baf-a4d1-011ce69ab14c/15295-1
01:18:43.248 --> 01:18:43.553
used.

05e14040-523e-4baf-a4d1-011ce69ab14c/15319-0
01:18:43.613 --> 01:18:48.227
So recursion you pass the same
key there is instead of V you

05e14040-523e-4baf-a4d1-011ce69ab14c/15319-1
01:18:48.227 --> 01:18:52.083
are passing it's parent is root
of V where is the.

05e14040-523e-4baf-a4d1-011ce69ab14c/15322-0
01:18:52.093 --> 01:18:52.683
I'll go for this.

05e14040-523e-4baf-a4d1-011ce69ab14c/15341-0
01:18:52.693 --> 01:18:55.013
Yeah, that is what we told here
that you will be able to write.

05e14040-523e-4baf-a4d1-011ce69ab14c/15347-0
01:18:55.023 --> 01:18:56.853
It is root of V.

05e14040-523e-4baf-a4d1-011ce69ab14c/15365-0
01:18:58.113 --> 01:19:01.479
Yeah, he's root of how will you
check someone who doesn't have a

05e14040-523e-4baf-a4d1-011ce69ab14c/15365-1
01:19:01.479 --> 01:19:02.463
parent is the root.

05e14040-523e-4baf-a4d1-011ce69ab14c/15380-0
01:19:02.893 --> 01:19:05.243
So you'll have to write this,
you know definitions.

05e14040-523e-4baf-a4d1-011ce69ab14c/15394-0
01:19:05.293 --> 01:19:07.699
But as I told in Python there
are already functions to do all

05e14040-523e-4baf-a4d1-011ce69ab14c/15394-1
01:19:07.699 --> 01:19:07.893
this.

05e14040-523e-4baf-a4d1-011ce69ab14c/15403-0
01:19:10.023 --> 01:19:10.803
Yeah, so far, so good.

05e14040-523e-4baf-a4d1-011ce69ab14c/15409-0
01:19:11.893 --> 01:19:13.473
This algorithm did all of you
get it?

05e14040-523e-4baf-a4d1-011ce69ab14c/15430-0
01:19:15.603 --> 01:19:18.380
We'll keep doing one plus the
depth of parent one plus the

05e14040-523e-4baf-a4d1-011ce69ab14c/15430-1
01:19:18.380 --> 01:19:19.133
depth of parent.

05e14040-523e-4baf-a4d1-011ce69ab14c/15453-0
01:19:19.523 --> 01:19:22.339
You will hit the root at some
stage where the root will give

05e14040-523e-4baf-a4d1-011ce69ab14c/15453-1
01:19:22.339 --> 01:19:24.693
you 0 and then you will be able
to get the answer.

05e14040-523e-4baf-a4d1-011ce69ab14c/15455-0
01:19:28.863 --> 01:19:29.043
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/15461-0
01:19:30.533 --> 01:19:31.343
Yeah, you can use it.

05e14040-523e-4baf-a4d1-011ce69ab14c/15477-0
01:19:31.353 --> 01:19:34.520
Yeah, no problem in your
assignment alone, you cannot use

05e14040-523e-4baf-a4d1-011ce69ab14c/15477-1
01:19:34.520 --> 01:19:35.393
in other places.

05e14040-523e-4baf-a4d1-011ce69ab14c/15481-0
01:19:35.403 --> 01:19:35.933
You can use it.

05e14040-523e-4baf-a4d1-011ce69ab14c/15484-0
01:19:38.003 --> 01:19:38.453
Cool.

05e14040-523e-4baf-a4d1-011ce69ab14c/15491-0
01:19:38.543 --> 01:19:41.073
So what is the worst case? Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/15494-0
01:19:43.353 --> 01:19:43.633
Oops.

05e14040-523e-4baf-a4d1-011ce69ab14c/15517-0
01:19:46.413 --> 01:19:50.317
During time of the algorithm is
depth of T comma, V is 1 + d of

05e14040-523e-4baf-a4d1-011ce69ab14c/15517-1
01:19:50.317 --> 01:19:50.743
1 plus.

05e14040-523e-4baf-a4d1-011ce69ab14c/15536-0
01:19:52.063 --> 01:19:55.247
Yeah, we were D of V denotes the
depth of the node way in the

05e14040-523e-4baf-a4d1-011ce69ab14c/15536-1
01:19:55.247 --> 01:19:55.503
tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/15562-0
01:19:55.733 --> 01:19:58.481
In the worst case, the depth
algorithm runs in Bitcoin time,

05e14040-523e-4baf-a4d1-011ce69ab14c/15562-1
01:19:58.481 --> 01:20:00.733
where N is the total number of
nodes in the tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/15567-0
01:20:01.503 --> 01:20:02.043
Why is it so?

05e14040-523e-4baf-a4d1-011ce69ab14c/15576-0
01:20:03.533 --> 01:20:05.953
Yeah, T dot parent is also a
method, correct?

05e14040-523e-4baf-a4d1-011ce69ab14c/15579-0
01:20:08.753 --> 01:20:08.933
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/15588-0
01:20:09.683 --> 01:20:10.473
Why is this guy?

05e14040-523e-4baf-a4d1-011ce69ab14c/15596-0
01:20:10.483 --> 01:20:12.613
So this last line, why is this
happening?

05e14040-523e-4baf-a4d1-011ce69ab14c/15606-0
01:20:13.663 --> 01:20:14.993
We are telling we go of yen.

05e14040-523e-4baf-a4d1-011ce69ab14c/15610-0
01:20:16.053 --> 01:20:16.573
Why is it so?

05e14040-523e-4baf-a4d1-011ce69ab14c/15618-0
01:20:18.033 --> 01:20:19.003
Can I have a tree like this?

05e14040-523e-4baf-a4d1-011ce69ab14c/15621-0
01:20:24.633 --> 01:20:24.793
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/15629-0
01:20:27.633 --> 01:20:28.213
Something like this.

05e14040-523e-4baf-a4d1-011ce69ab14c/15662-0
01:20:29.223 --> 01:20:32.492
So in this case, if I ask this
nodes depth, is it not

05e14040-523e-4baf-a4d1-011ce69ab14c/15662-1
01:20:32.492 --> 01:20:36.427
traversing all of them and then
you know giving me the answer as

05e14040-523e-4baf-a4d1-011ce69ab14c/15662-2
01:20:36.427 --> 01:20:38.243
you know, the number of nodes.

05e14040-523e-4baf-a4d1-011ce69ab14c/15668-0
01:20:41.163 --> 01:20:42.053
Exactly right.

05e14040-523e-4baf-a4d1-011ce69ab14c/15676-0
01:20:42.103 --> 01:20:43.733
By the way, this is a very
powerful concept.

05e14040-523e-4baf-a4d1-011ce69ab14c/15683-0
01:20:43.743 --> 01:20:44.863
This is called a skewed tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/15697-0
01:20:46.873 --> 01:20:49.663
While the squirrel tree we'll
come back to him later.

05e14040-523e-4baf-a4d1-011ce69ab14c/15718-0
01:20:49.733 --> 01:20:54.619
Yeah, but because of him running
time is again we go off and cool

05e14040-523e-4baf-a4d1-011ce69ab14c/15718-1
01:20:54.619 --> 01:20:55.803
depth algorithm.

05e14040-523e-4baf-a4d1-011ce69ab14c/15720-0
01:20:55.813 --> 01:20:56.283
You understood.

05e14040-523e-4baf-a4d1-011ce69ab14c/15727-0
01:20:56.293 --> 01:20:56.983
What about the height?

05e14040-523e-4baf-a4d1-011ce69ab14c/15747-0
01:20:57.833 --> 01:21:01.753
So for height the height of a
treaty is equal to the maximum

05e14040-523e-4baf-a4d1-011ce69ab14c/15747-1
01:21:01.753 --> 01:21:03.423
depth of an external node.

05e14040-523e-4baf-a4d1-011ce69ab14c/15752-0
01:21:03.493 --> 01:21:04.593
Again, another new definition.

05e14040-523e-4baf-a4d1-011ce69ab14c/15764-0
01:21:05.403 --> 01:21:07.623
Can you explain the last two
points which last two points?

05e14040-523e-4baf-a4d1-011ce69ab14c/15767-0
01:21:07.633 --> 01:21:08.113
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/15773-0
01:21:08.523 --> 01:21:09.833
So forget about this point.

05e14040-523e-4baf-a4d1-011ce69ab14c/15781-0
01:21:09.843 --> 01:21:11.173
This is what is the correct
answer.

05e14040-523e-4baf-a4d1-011ce69ab14c/15795-0
01:21:11.483 --> 01:21:14.919
The worst case of you know
calculating the depth is we go

05e14040-523e-4baf-a4d1-011ce69ab14c/15795-1
01:21:14.919 --> 01:21:15.333
of yen.

05e14040-523e-4baf-a4d1-011ce69ab14c/15801-0
01:21:15.663 --> 01:21:16.353
Why is that?

05e14040-523e-4baf-a4d1-011ce69ab14c/15821-0
01:21:16.683 --> 01:21:19.633
Because of this type of a tree,
if I draw a tree like this, this

05e14040-523e-4baf-a4d1-011ce69ab14c/15821-1
01:21:19.633 --> 01:21:20.313
is also a tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/15852-0
01:21:20.883 --> 01:21:24.626
If I want to calculate the depth
of this last node here, I should

05e14040-523e-4baf-a4d1-011ce69ab14c/15852-1
01:21:24.626 --> 01:21:27.916
come all the way from the root
till this and I would have

05e14040-523e-4baf-a4d1-011ce69ab14c/15852-2
01:21:27.916 --> 01:21:29.503
touched all the nodes right?

05e14040-523e-4baf-a4d1-011ce69ab14c/15861-0
01:21:29.593 --> 01:21:31.413
That is why complexities big O
of N.

05e14040-523e-4baf-a4d1-011ce69ab14c/15869-0
01:21:33.533 --> 01:21:36.773
Full height of a tree, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/15877-0
01:21:37.083 --> 01:21:38.373
Yeah, that is something
different.

05e14040-523e-4baf-a4d1-011ce69ab14c/15880-0
01:21:38.383 --> 01:21:39.413
That is one place.

05e14040-523e-4baf-a4d1-011ce69ab14c/15890-0
01:21:39.523 --> 01:21:42.403
This part is going to take
another time, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/15915-0
01:21:42.943 --> 01:21:45.677
So and this part we are telling
that is a deep this is more like

05e14040-523e-4baf-a4d1-011ce69ab14c/15915-1
01:21:45.677 --> 01:21:47.233
an average case which we don't
want.

05e14040-523e-4baf-a4d1-011ce69ab14c/15921-0
01:21:47.473 --> 01:21:48.753
Yeah, forget about it.

05e14040-523e-4baf-a4d1-011ce69ab14c/15945-0
01:21:48.763 --> 01:21:51.892
This is always the correct
answer because I can always draw

05e14040-523e-4baf-a4d1-011ce69ab14c/15945-1
01:21:51.892 --> 01:21:54.603
a tree like this and prove that
it is big of north.

05e14040-523e-4baf-a4d1-011ce69ab14c/15950-0
01:21:55.903 --> 01:21:56.313
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/15968-0
01:21:56.373 --> 01:21:58.990
And yeah, as I told, we will not
go into best case, average case

05e14040-523e-4baf-a4d1-011ce69ab14c/15968-1
01:21:58.990 --> 01:21:59.513
and all that.

05e14040-523e-4baf-a4d1-011ce69ab14c/15979-0
01:21:59.563 --> 01:22:02.093
Yeah, big of north is the
correct answer here.

05e14040-523e-4baf-a4d1-011ce69ab14c/15986-0
01:22:02.143 --> 01:22:03.103
Yeah, forget about this.

05e14040-523e-4baf-a4d1-011ce69ab14c/15993-0
01:22:03.113 --> 01:22:05.593
Also, because I can always draw
tree like this.

05e14040-523e-4baf-a4d1-011ce69ab14c/15995-0
01:22:08.323 --> 01:22:08.483
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/16005-0
01:22:10.423 --> 01:22:12.293
For root running time will be 0,
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/16014-0
01:22:12.303 --> 01:22:13.173
So what do you mean by that?

05e14040-523e-4baf-a4d1-011ce69ab14c/16020-0
01:22:13.183 --> 01:22:14.173
If you have only one root.

05e14040-523e-4baf-a4d1-011ce69ab14c/16035-0
01:22:16.713 --> 01:22:19.643
And by the way, running time is
not zero for any algorithm.

05e14040-523e-4baf-a4d1-011ce69ab14c/16044-0
01:22:19.693 --> 01:22:21.553
Yeah, it will definitely take
some constant.

05e14040-523e-4baf-a4d1-011ce69ab14c/16050-0
01:22:22.073 --> 01:22:22.993
You cannot tell it as zero.

05e14040-523e-4baf-a4d1-011ce69ab14c/16070-0
01:22:25.083 --> 01:22:28.738
Well, so the height of a tree is
equal to the maximum depth of an

05e14040-523e-4baf-a4d1-011ce69ab14c/16070-1
01:22:28.738 --> 01:22:29.513
external node.

05e14040-523e-4baf-a4d1-011ce69ab14c/16075-0
01:22:29.563 --> 01:22:29.773
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/16080-0
01:22:29.783 --> 01:22:30.633
Again, a new definition.

05e14040-523e-4baf-a4d1-011ce69ab14c/16093-0
01:22:30.643 --> 01:22:35.274
We are coming up right maximum
depth of an external node,

05e14040-523e-4baf-a4d1-011ce69ab14c/16093-1
01:22:35.274 --> 01:22:35.753
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/16100-0
01:22:35.983 --> 01:22:37.283
Let's again, you know, go back
here.

05e14040-523e-4baf-a4d1-011ce69ab14c/16111-0
01:22:40.443 --> 01:22:42.933
So the height of all the leaves
are zero.

05e14040-523e-4baf-a4d1-011ce69ab14c/16139-0
01:22:43.683 --> 01:22:48.751
Bricked the height of this one
is one child for this it is

05e14040-523e-4baf-a4d1-011ce69ab14c/16139-1
01:22:48.751 --> 01:22:53.303
going to be this one because
there are two children.

05e14040-523e-4baf-a4d1-011ce69ab14c/16163-0
01:22:53.313 --> 01:22:56.180
Both of them are in the same,
you know they don't have any sub

05e14040-523e-4baf-a4d1-011ce69ab14c/16163-1
01:22:56.180 --> 01:22:57.863
children, so it is one for this
one.

05e14040-523e-4baf-a4d1-011ce69ab14c/16174-0
01:22:57.873 --> 01:22:59.943
It is 2 because it is one, then
again 2.

05e14040-523e-4baf-a4d1-011ce69ab14c/16197-0
01:23:00.493 --> 01:23:04.747
For this node, we'll have to
enumerate all of them and then

05e14040-523e-4baf-a4d1-011ce69ab14c/16197-1
01:23:04.747 --> 01:23:06.873
try to take the maximum right.

05e14040-523e-4baf-a4d1-011ce69ab14c/16220-0
01:23:08.653 --> 01:23:14.046
But if you observe this
carefully, is the height of this

05e14040-523e-4baf-a4d1-011ce69ab14c/16220-1
01:23:14.046 --> 01:23:18.303
route same as the depth of the
deepest node?

05e14040-523e-4baf-a4d1-011ce69ab14c/16252-0
01:23:20.683 --> 01:23:24.412
Yeah, the depth of this whole
tree is 3 and that is nothing

05e14040-523e-4baf-a4d1-011ce69ab14c/16252-1
01:23:24.412 --> 01:23:28.203
but the height of the root or
the height of the tree, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/16269-0
01:23:28.213 --> 01:23:30.733
There's some observations that
you need to keep doing, but now

05e14040-523e-4baf-a4d1-011ce69ab14c/16269-1
01:23:30.733 --> 01:23:31.493
let's look at this.

05e14040-523e-4baf-a4d1-011ce69ab14c/16287-0
01:23:33.483 --> 01:23:38.203
The height of a treaty is equal
to the maximum depth of an

05e14040-523e-4baf-a4d1-011ce69ab14c/16287-1
01:23:38.203 --> 01:23:39.883
external node, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/16296-0
01:23:40.233 --> 01:23:41.293
That is what we just saw.

05e14040-523e-4baf-a4d1-011ce69ab14c/16312-0
01:23:41.593 --> 01:23:45.563
If we as an external node then
the height of V0, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/16331-0
01:23:45.573 --> 01:23:48.113
We know that for all the leaves,
the height is 0 because it

05e14040-523e-4baf-a4d1-011ce69ab14c/16331-1
01:23:48.113 --> 01:23:49.213
doesn't have any children.

05e14040-523e-4baf-a4d1-011ce69ab14c/16340-0
01:23:49.223 --> 01:23:50.403
Then what is the question of
height?

05e14040-523e-4baf-a4d1-011ce69ab14c/16355-0
01:23:51.743 --> 01:23:56.298
Otherwise the height of V is 1
plus the maximum height of the

05e14040-523e-4baf-a4d1-011ce69ab14c/16355-1
01:23:56.298 --> 01:23:57.253
child, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/16381-0
01:23:57.263 --> 01:24:01.257
Otherwise, if it is not a leaf,
if it is an internal node then

05e14040-523e-4baf-a4d1-011ce69ab14c/16381-1
01:24:01.257 --> 01:24:04.933
it is maximum of the child's you
know number of children.

05e14040-523e-4baf-a4d1-011ce69ab14c/16383-0
01:24:04.943 --> 01:24:05.293
Children.

05e14040-523e-4baf-a4d1-011ce69ab14c/16428-0
01:24:05.433 --> 01:24:09.296
So how will you write the
algorithm if T dot is 6, is

05e14040-523e-4baf-a4d1-011ce69ab14c/16428-1
01:24:09.296 --> 01:24:13.801
external or is leaf, then return
0, because for external nodes

05e14040-523e-4baf-a4d1-011ce69ab14c/16428-2
01:24:13.801 --> 01:24:18.379
the height is 0, otherwise have
it as zero, like a variable for

05e14040-523e-4baf-a4d1-011ce69ab14c/16428-3
01:24:18.379 --> 01:24:20.953
each W belonging to T dot
children.

05e14040-523e-4baf-a4d1-011ce69ab14c/16435-0
01:24:21.003 --> 01:24:22.653
So manually, how did we do it?

05e14040-523e-4baf-a4d1-011ce69ab14c/16444-0
01:24:22.663 --> 01:24:24.823
You remember right, we had to
enumerate them.

05e14040-523e-4baf-a4d1-011ce69ab14c/16498-0
01:24:25.593 --> 01:24:29.390
We will enumerate from A to BB
to E2F that is one path and then

05e14040-523e-4baf-a4d1-011ce69ab14c/16498-1
01:24:29.390 --> 01:24:32.830
from B2C E to E that is the 2nd
path like that we need to

05e14040-523e-4baf-a4d1-011ce69ab14c/16498-2
01:24:32.830 --> 01:24:36.568
enumerate so that is why we are
doing for each for each of the

05e14040-523e-4baf-a4d1-011ce69ab14c/16498-3
01:24:36.568 --> 01:24:37.813
children that it has.

05e14040-523e-4baf-a4d1-011ce69ab14c/16507-0
01:24:38.243 --> 01:24:41.773
Try to calculate that maximum
right Max function.

05e14040-523e-4baf-a4d1-011ce69ab14c/16523-0
01:24:41.783 --> 01:24:46.211
We are using maximum of existing
H that is why we initialize to

05e14040-523e-4baf-a4d1-011ce69ab14c/16523-1
01:24:46.211 --> 01:24:46.833
00 comma.

05e14040-523e-4baf-a4d1-011ce69ab14c/16534-0
01:24:47.063 --> 01:24:48.909
Again, we are putting height
which is nothing but a

05e14040-523e-4baf-a4d1-011ce69ab14c/16534-1
01:24:48.909 --> 01:24:49.263
recursion.

05e14040-523e-4baf-a4d1-011ce69ab14c/16545-0
01:24:50.053 --> 01:24:53.073
Finally, you will add one to it,
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/16569-0
01:24:54.023 --> 01:24:57.853
If you want to calculate the
whole height of a tree instead

05e14040-523e-4baf-a4d1-011ce69ab14c/16569-1
01:24:57.853 --> 01:25:00.533
of this V you can pass T dot
root itself.

05e14040-523e-4baf-a4d1-011ce69ab14c/16597-0
01:25:00.543 --> 01:25:04.511
If you pass the root itself to
this algorithm, you will get the

05e14040-523e-4baf-a4d1-011ce69ab14c/16597-1
01:25:04.511 --> 01:25:07.921
height of the whole tree right
again for this also the

05e14040-523e-4baf-a4d1-011ce69ab14c/16597-2
01:25:07.921 --> 01:25:09.533
complexity is big off yen.

05e14040-523e-4baf-a4d1-011ce69ab14c/16601-0
01:25:11.423 --> 01:25:11.653
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/16609-0
01:25:11.663 --> 01:25:12.583
Is it clear, guys, all of you?

05e14040-523e-4baf-a4d1-011ce69ab14c/16627-0
01:25:14.483 --> 01:25:16.953
If it is a leaf given to you
directly, give it a 0.

05e14040-523e-4baf-a4d1-011ce69ab14c/16643-0
01:25:17.783 --> 01:25:21.100
Otherwise, do one plus the
maximum height of all its

05e14040-523e-4baf-a4d1-011ce69ab14c/16643-1
01:25:21.100 --> 01:25:21.663
children.

05e14040-523e-4baf-a4d1-011ce69ab14c/16657-0
01:25:21.673 --> 01:25:25.024
You'll have to enumerate them
and calculate the number of

05e14040-523e-4baf-a4d1-011ce69ab14c/16657-1
01:25:25.024 --> 01:25:26.583
children and their heights.

05e14040-523e-4baf-a4d1-011ce69ab14c/16666-0
01:25:28.583 --> 01:25:29.753
Yeah, so far, so good, all of
you.

05e14040-523e-4baf-a4d1-011ce69ab14c/16669-0
01:25:36.483 --> 01:25:37.063
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/16690-0
01:25:37.343 --> 01:25:40.444
So the worst case we we go of
yen for both the algorithms

05e14040-523e-4baf-a4d1-011ce69ab14c/16690-1
01:25:40.444 --> 01:25:41.353
depth and height.

05e14040-523e-4baf-a4d1-011ce69ab14c/16701-0
01:25:41.643 --> 01:25:43.973
So more about it in your, you
know text.

05e14040-523e-4baf-a4d1-011ce69ab14c/16713-0
01:25:44.043 --> 01:25:47.213
I've also given you some, you
know chapter names here, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/16723-0
01:25:47.463 --> 01:25:49.213
So you can also have a look at
this.

05e14040-523e-4baf-a4d1-011ce69ab14c/16740-0
01:25:49.263 --> 01:25:52.659
Yeah, but I also give you a
simple example of a skewed tree,

05e14040-523e-4baf-a4d1-011ce69ab14c/16740-1
01:25:52.659 --> 01:25:52.993
right.

05e14040-523e-4baf-a4d1-011ce69ab14c/16776-0
01:25:53.003 --> 01:25:56.026
If you have a tree like this,
then if you want to calculate

05e14040-523e-4baf-a4d1-011ce69ab14c/16776-1
01:25:56.026 --> 01:25:58.998
depth or height, you might have
to touch all the nodes and

05e14040-523e-4baf-a4d1-011ce69ab14c/16776-2
01:25:58.998 --> 01:26:01.113
because of that it will become
we go off.

05e14040-523e-4baf-a4d1-011ce69ab14c/16778-0
01:26:01.123 --> 01:26:01.313
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/16780-0
01:26:02.863 --> 01:26:03.003
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/16790-0
01:26:04.463 --> 01:26:05.613
So far so good, guys, all of
you.

05e14040-523e-4baf-a4d1-011ce69ab14c/16793-0
01:26:06.883 --> 01:26:07.563
Can you proceed ahead?

05e14040-523e-4baf-a4d1-011ce69ab14c/16795-0
01:26:09.703 --> 01:26:09.863
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/16803-0
01:26:11.933 --> 01:26:13.103
So it's pretty straightforward.

05e14040-523e-4baf-a4d1-011ce69ab14c/16809-0
01:26:13.113 --> 01:26:14.383
I'll again and again repeat.

05e14040-523e-4baf-a4d1-011ce69ab14c/16815-0
01:26:14.393 --> 01:26:15.423
Please practice these.

05e14040-523e-4baf-a4d1-011ce69ab14c/16817-0
01:26:15.433 --> 01:26:16.043
Trace them.

05e14040-523e-4baf-a4d1-011ce69ab14c/16831-0
01:26:16.083 --> 01:26:16.563
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/16836-0
01:26:16.633 --> 01:26:19.345
In the class, we may not be able
to trace like you know every

05e14040-523e-4baf-a4d1-011ce69ab14c/16836-1
01:26:19.345 --> 01:26:19.563
line.

05e14040-523e-4baf-a4d1-011ce69ab14c/16838-0
01:26:19.973 --> 01:26:20.323
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/16911-0
01:26:20.333 --> 01:26:24.033
So it's if it's an external
node, the height is 0, otherwise

05e14040-523e-4baf-a4d1-011ce69ab14c/16911-1
01:26:24.033 --> 01:26:27.671
this simple block of code is
again using recursion where we

05e14040-523e-4baf-a4d1-011ce69ab14c/16911-2
01:26:27.671 --> 01:26:31.128
are trying to enumerate them
right for all its children,

05e14040-523e-4baf-a4d1-011ce69ab14c/16911-3
01:26:31.128 --> 01:26:34.948
right for each W belonging to
their children, catch hold of it

05e14040-523e-4baf-a4d1-011ce69ab14c/16911-4
01:26:34.948 --> 01:26:38.405
and try to take the maximum
height of it right, which is

05e14040-523e-4baf-a4d1-011ce69ab14c/16911-5
01:26:38.405 --> 01:26:40.163
exactly what we did manually.

05e14040-523e-4baf-a4d1-011ce69ab14c/16914-0
01:26:40.173 --> 01:26:41.253
Also right.

05e14040-523e-4baf-a4d1-011ce69ab14c/16949-0
01:26:41.263 --> 01:26:44.686
For example, if I want to
calculate the height of this

05e14040-523e-4baf-a4d1-011ce69ab14c/16949-1
01:26:44.686 --> 01:26:47.921
node right, I should be doing
this path I should be

05e14040-523e-4baf-a4d1-011ce69ab14c/16949-2
01:26:47.921 --> 01:26:51.592
calculating for this path I
should be calculating for this

05e14040-523e-4baf-a4d1-011ce69ab14c/16949-3
01:26:51.592 --> 01:26:51.903
path.

05e14040-523e-4baf-a4d1-011ce69ab14c/16965-0
01:26:52.173 --> 01:26:54.629
Then I should take the maximum
amount of it, which is what we

05e14040-523e-4baf-a4d1-011ce69ab14c/16965-1
01:26:54.629 --> 01:26:55.223
are doing here.

05e14040-523e-4baf-a4d1-011ce69ab14c/16985-0
01:26:56.143 --> 01:27:00.917
What each of its children try to
calculate it the height and use

05e14040-523e-4baf-a4d1-011ce69ab14c/16985-1
01:27:00.917 --> 01:27:02.973
the mask Max function, yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/16994-0
01:27:05.463 --> 01:27:07.113
Actually proceed it, guys, all
of you.

05e14040-523e-4baf-a4d1-011ce69ab14c/17003-0
01:27:07.203 --> 01:27:08.313
Yeah, it's an open book exam.

05e14040-523e-4baf-a4d1-011ce69ab14c/17019-0
01:27:08.323 --> 01:27:11.436
Of course you know you can refer
these if at all it is needed,

05e14040-523e-4baf-a4d1-011ce69ab14c/17019-1
01:27:11.436 --> 01:27:11.683
yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/17030-0
01:27:14.853 --> 01:27:16.523
Is exactly what we did manually,
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/17059-0
01:27:16.533 --> 01:27:20.499
We have to enumerate all of that
path, that is, for each children

05e14040-523e-4baf-a4d1-011ce69ab14c/17059-1
01:27:20.499 --> 01:27:23.743
W right for each W belonging to
this children, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/17072-0
01:27:23.753 --> 01:27:25.963
This is one child, this one
child again, children and so on.

05e14040-523e-4baf-a4d1-011ce69ab14c/17076-0
01:27:26.883 --> 01:27:27.253
Right.

05e14040-523e-4baf-a4d1-011ce69ab14c/17097-0
01:27:27.603 --> 01:27:30.558
And since we start from the, you
know, base, we'll have to do it

05e14040-523e-4baf-a4d1-011ce69ab14c/17097-1
01:27:30.558 --> 01:27:31.103
as one plus.

05e14040-523e-4baf-a4d1-011ce69ab14c/17105-0
01:27:31.163 --> 01:27:34.263
Otherwise, you'll get one lesser
right, this one.

05e14040-523e-4baf-a4d1-011ce69ab14c/17131-0
01:27:34.273 --> 01:27:37.500
Also, we should account right
this one, otherwise you will

05e14040-523e-4baf-a4d1-011ce69ab14c/17131-1
01:27:37.500 --> 01:27:40.945
just be counting these further
children's and you will get one

05e14040-523e-4baf-a4d1-011ce69ab14c/17131-2
01:27:40.945 --> 01:27:42.093
height lesser, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/17138-0
01:27:43.863 --> 01:27:44.933
Cool so far.

05e14040-523e-4baf-a4d1-011ce69ab14c/17149-0
01:27:45.043 --> 01:27:49.453
Have we put any constraints on
the tree panda tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/17156-0
01:27:49.463 --> 01:27:50.383
Have you know ten children?

05e14040-523e-4baf-a4d1-011ce69ab14c/17159-0
01:27:52.143 --> 01:27:52.703
Is it possible?

05e14040-523e-4baf-a4d1-011ce69ab14c/17163-0
01:27:55.463 --> 01:27:56.043
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/17169-0
01:27:56.323 --> 01:27:57.583
Is it possible or not here?

05e14040-523e-4baf-a4d1-011ce69ab14c/17174-0
01:27:59.523 --> 01:27:59.743
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/17180-0
01:27:59.753 --> 01:28:01.973
In this, A has three children,
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/17204-0
01:28:02.043 --> 01:28:04.908
All that is possible, but now we
will start putting a lot of

05e14040-523e-4baf-a4d1-011ce69ab14c/17204-1
01:28:04.908 --> 01:28:07.772
constraints and they are called
different different types of

05e14040-523e-4baf-a4d1-011ce69ab14c/17204-2
01:28:07.772 --> 01:28:08.053
trees.

05e14040-523e-4baf-a4d1-011ce69ab14c/17217-0
01:28:08.683 --> 01:28:10.603
I want to discard all those,
come back fresh.

05e14040-523e-4baf-a4d1-011ce69ab14c/17220-0
01:28:11.573 --> 01:28:11.713
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/17231-0
01:28:13.393 --> 01:28:17.103
And we will keep putting them
names very, very important.

05e14040-523e-4baf-a4d1-011ce69ab14c/17236-0
01:28:17.173 --> 01:28:18.663
They are all very related.

05e14040-523e-4baf-a4d1-011ce69ab14c/17245-0
01:28:18.953 --> 01:28:20.753
Yeah, I want all of you to
focus.

05e14040-523e-4baf-a4d1-011ce69ab14c/17260-0
01:28:20.813 --> 01:28:23.234
Yeah, just another few minutes,
then I'll leave you free for the

05e14040-523e-4baf-a4d1-011ce69ab14c/17260-1
01:28:23.234 --> 01:28:23.383
day.

05e14040-523e-4baf-a4d1-011ce69ab14c/17267-0
01:28:23.673 --> 01:28:24.923
But they are very important.

05e14040-523e-4baf-a4d1-011ce69ab14c/17272-0
01:28:25.463 --> 01:28:27.333
Yeah, firstly binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/17289-0
01:28:29.683 --> 01:28:32.063
A binary tree is a tree with the
following properties.

05e14040-523e-4baf-a4d1-011ce69ab14c/17298-0
01:28:33.123 --> 01:28:37.013
Each internal node has at most
two children.

05e14040-523e-4baf-a4d1-011ce69ab14c/17310-0
01:28:38.113 --> 01:28:41.450
The children of the node are
called as left child and right

05e14040-523e-4baf-a4d1-011ce69ab14c/17310-1
01:28:41.450 --> 01:28:41.783
child.

05e14040-523e-4baf-a4d1-011ce69ab14c/17320-0
01:28:42.093 --> 01:28:45.493
So what does this mean at most?
Meaning maximum?

05e14040-523e-4baf-a4d1-011ce69ab14c/17329-0
01:28:45.903 --> 01:28:48.043
Yeah, at most you can get 100
marks.

05e14040-523e-4baf-a4d1-011ce69ab14c/17360-0
01:28:48.753 --> 01:28:53.170
Something like that, right in a
binary tree, each internal node

05e14040-523e-4baf-a4d1-011ce69ab14c/17360-1
01:28:53.170 --> 01:28:57.448
can have at most two children,
meaning it can have one child,

05e14040-523e-4baf-a4d1-011ce69ab14c/17360-2
01:28:57.448 --> 01:28:59.173
or it can have two child.

05e14040-523e-4baf-a4d1-011ce69ab14c/17369-0
01:28:59.263 --> 01:29:00.803
It cannot be more than two.

05e14040-523e-4baf-a4d1-011ce69ab14c/17371-0
01:29:02.103 --> 01:29:02.403
Great.

05e14040-523e-4baf-a4d1-011ce69ab14c/17389-0
01:29:04.213 --> 01:29:07.783
So if you consider this
particular tree is a leaf,

05e14040-523e-4baf-a4d1-011ce69ab14c/17389-1
01:29:07.783 --> 01:29:09.603
there's a leaf no problem.

05e14040-523e-4baf-a4d1-011ce69ab14c/17398-0
01:29:09.613 --> 01:29:10.483
This is an internal node.

05e14040-523e-4baf-a4d1-011ce69ab14c/17403-0
01:29:10.493 --> 01:29:11.273
It has one child.

05e14040-523e-4baf-a4d1-011ce69ab14c/17409-0
01:29:11.323 --> 01:29:12.233
This is an internal node.

05e14040-523e-4baf-a4d1-011ce69ab14c/17415-0
01:29:12.243 --> 01:29:13.093
It has two children.

05e14040-523e-4baf-a4d1-011ce69ab14c/17422-0
01:29:13.343 --> 01:29:14.173
This is an internal node.

05e14040-523e-4baf-a4d1-011ce69ab14c/17429-0
01:29:14.183 --> 01:29:15.033
It has two children.

05e14040-523e-4baf-a4d1-011ce69ab14c/17436-0
01:29:15.123 --> 01:29:16.503
Internal node has one child.

05e14040-523e-4baf-a4d1-011ce69ab14c/17448-0
01:29:16.703 --> 01:29:20.273
Internal node has two children,
so this is a binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/17451-0
01:29:21.483 --> 01:29:22.173
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/17459-0
01:29:22.343 --> 01:29:23.393
Is it making sense days?

05e14040-523e-4baf-a4d1-011ce69ab14c/17479-0
01:29:23.403 --> 01:29:27.627
All of you for every internal
node it can have maximum two

05e14040-523e-4baf-a4d1-011ce69ab14c/17479-1
01:29:27.627 --> 01:29:29.703
children, not more than that.

05e14040-523e-4baf-a4d1-011ce69ab14c/17498-0
01:29:32.173 --> 01:29:35.949
This is also a binary tree
because this has only one node,

05e14040-523e-4baf-a4d1-011ce69ab14c/17498-1
01:29:35.949 --> 01:29:36.333
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/17511-0
01:29:36.463 --> 01:29:38.723
So this is this is acting like a
leaf.

05e14040-523e-4baf-a4d1-011ce69ab14c/17524-0
01:29:38.823 --> 01:29:41.413
It doesn't have any child, so
this is also a binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/17527-0
01:29:41.843 --> 01:29:42.413
What about this?

05e14040-523e-4baf-a4d1-011ce69ab14c/17544-0
01:29:44.623 --> 01:29:47.243
Can someone tell me if this is a
binary tree or not?

05e14040-523e-4baf-a4d1-011ce69ab14c/17550-0
01:29:48.393 --> 01:29:49.643
This is an internal node.

05e14040-523e-4baf-a4d1-011ce69ab14c/17557-0
01:29:49.713 --> 01:29:50.623
It has two children.

05e14040-523e-4baf-a4d1-011ce69ab14c/17563-0
01:29:51.173 --> 01:29:52.043
This is an internal node.

05e14040-523e-4baf-a4d1-011ce69ab14c/17568-0
01:29:52.053 --> 01:29:52.833
It has one child.

05e14040-523e-4baf-a4d1-011ce69ab14c/17574-0
01:29:52.843 --> 01:29:53.583
This is an internal node.

05e14040-523e-4baf-a4d1-011ce69ab14c/17591-0
01:29:53.593 --> 01:29:57.333
It has one child, so this is
also a binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/17597-0
01:29:58.343 --> 01:29:59.753
Perfect, all of you.

05e14040-523e-4baf-a4d1-011ce69ab14c/17601-0
01:29:59.763 --> 01:30:00.373
Binary trees.

05e14040-523e-4baf-a4d1-011ce69ab14c/17619-0
01:30:00.383 --> 01:30:05.564
It clear all internal nodes if
they have maximum two children

05e14040-523e-4baf-a4d1-011ce69ab14c/17619-1
01:30:05.564 --> 01:30:07.653
then it is a binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/17627-0
01:30:09.923 --> 01:30:10.803
Now there is another one.

05e14040-523e-4baf-a4d1-011ce69ab14c/17644-0
01:30:11.663 --> 01:30:15.383
It is called as a strict or a
proper or a full binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/17651-0
01:30:15.443 --> 01:30:16.813
Yeah, all three are the same.

05e14040-523e-4baf-a4d1-011ce69ab14c/17665-0
01:30:16.983 --> 01:30:19.493
I will prefer to call it as a
proper binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/17677-0
01:30:19.943 --> 01:30:22.493
Yeah, you can prefer to call it
in other ways.

05e14040-523e-4baf-a4d1-011ce69ab14c/17686-0
01:30:22.503 --> 01:30:25.643
Also, a proper binary tree is.

05e14040-523e-4baf-a4d1-011ce69ab14c/17692-0
01:30:25.733 --> 01:30:30.153
Each internal node has exactly
two children, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/17705-0
01:30:32.313 --> 01:30:36.253
Exactly two children it has to
have something like this.

05e14040-523e-4baf-a4d1-011ce69ab14c/17711-0
01:30:36.783 --> 01:30:37.653
This is an internal node.

05e14040-523e-4baf-a4d1-011ce69ab14c/17718-0
01:30:37.663 --> 01:30:38.853
It has exactly two children.

05e14040-523e-4baf-a4d1-011ce69ab14c/17724-0
01:30:39.343 --> 01:30:40.263
This is an internal node.

05e14040-523e-4baf-a4d1-011ce69ab14c/17738-0
01:30:40.273 --> 01:30:43.013
It has exactly two children,
those an internal node.

05e14040-523e-4baf-a4d1-011ce69ab14c/17742-0
01:30:43.023 --> 01:30:44.193
It has exactly two children.

05e14040-523e-4baf-a4d1-011ce69ab14c/17757-0
01:30:44.283 --> 01:30:47.463
These are all leads, so this is
a proper binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/17772-0
01:30:48.813 --> 01:30:52.953
Yeah, each node can have either
two or zero children.

05e14040-523e-4baf-a4d1-011ce69ab14c/17787-0
01:30:52.963 --> 01:30:55.363
If it is having two then it
means it is internal node.

05e14040-523e-4baf-a4d1-011ce69ab14c/17796-0
01:30:55.483 --> 01:30:57.233
If it is having zero, it means
it is a leaf.

05e14040-523e-4baf-a4d1-011ce69ab14c/17802-0
01:30:59.923 --> 01:31:01.293
Complete binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/17806-0
01:31:01.643 --> 01:31:01.933
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/17828-0
01:31:01.943 --> 01:31:06.374
Is is this clear case all of you
proper binary tree binary tree

05e14040-523e-4baf-a4d1-011ce69ab14c/17828-1
01:31:06.374 --> 01:31:08.243
means maximum two children.

05e14040-523e-4baf-a4d1-011ce69ab14c/17851-0
01:31:08.293 --> 01:31:11.615
It can have one child also,
whereas in proper binary tree it

05e14040-523e-4baf-a4d1-011ce69ab14c/17851-1
01:31:11.615 --> 01:31:14.663
has to have exactly two children
or no children at all.

05e14040-523e-4baf-a4d1-011ce69ab14c/17859-0
01:31:16.063 --> 01:31:16.953
Yeah, so far, so good.

05e14040-523e-4baf-a4d1-011ce69ab14c/17867-0
01:31:16.963 --> 01:31:18.553
All of you will slowly.

05e14040-523e-4baf-a4d1-011ce69ab14c/17871-0
01:31:18.563 --> 01:31:19.653
It will get complicated.

05e14040-523e-4baf-a4d1-011ce69ab14c/17879-0
01:31:19.663 --> 01:31:21.873
Yeah, these two trees are.

05e14040-523e-4baf-a4d1-011ce69ab14c/17881-0
01:31:21.883 --> 01:31:22.233
Is it clear?

05e14040-523e-4baf-a4d1-011ce69ab14c/17893-0
01:31:24.763 --> 01:31:28.613
Yeah, I don't see any responses
real quick and you react.

05e14040-523e-4baf-a4d1-011ce69ab14c/17900-0
01:31:35.313 --> 01:31:37.633
Yeah, I only see Aditi.

05e14040-523e-4baf-a4d1-011ce69ab14c/17904-0
01:31:39.823 --> 01:31:40.213
Others.

05e14040-523e-4baf-a4d1-011ce69ab14c/17911-0
01:31:40.223 --> 01:31:43.603
Yeah, full complete binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/17917-0
01:31:44.413 --> 01:31:45.703
Very, very important.

05e14040-523e-4baf-a4d1-011ce69ab14c/17926-0
01:31:46.193 --> 01:31:49.981
Many other concepts will use
this, so please focus here,

05e14040-523e-4baf-a4d1-011ce69ab14c/17926-1
01:31:49.981 --> 01:31:50.313
yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/17951-0
01:31:51.893 --> 01:31:55.327
Complete binary tree is nothing
but a binary tree in which first

05e14040-523e-4baf-a4d1-011ce69ab14c/17951-1
01:31:55.327 --> 01:31:57.123
of all it's a binary tree,
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/17969-0
01:31:57.133 --> 01:31:59.848
Meaning it cannot have three
children and so one maximum only

05e14040-523e-4baf-a4d1-011ce69ab14c/17969-1
01:31:59.848 --> 01:32:00.023
two.

05e14040-523e-4baf-a4d1-011ce69ab14c/17994-0
01:32:00.033 --> 01:32:05.585
It can have a binary tree in
which every level except the

05e14040-523e-4baf-a4d1-011ce69ab14c/17994-1
01:32:05.585 --> 01:32:11.423
lowermost is completely filled
right at the lowermost level.

05e14040-523e-4baf-a4d1-011ce69ab14c/18003-0
01:32:11.673 --> 01:32:13.853
Loads must be filled from left
to right.

05e14040-523e-4baf-a4d1-011ce69ab14c/18011-0
01:32:15.373 --> 01:32:17.883
Yeah, let's look at this.

05e14040-523e-4baf-a4d1-011ce69ab14c/18039-0
01:32:18.943 --> 01:32:24.593
This is level 0 level one, level
2, Level 3 right level 0 level

05e14040-523e-4baf-a4d1-011ce69ab14c/18039-1
01:32:24.593 --> 01:32:28.123
one, level 2 level 3IN level 0
maximum.

05e14040-523e-4baf-a4d1-011ce69ab14c/18045-0
01:32:28.133 --> 01:32:29.213
How many nodes you can have?

05e14040-523e-4baf-a4d1-011ce69ab14c/18055-0
01:32:33.813 --> 01:32:37.003
Yeah, at level 0, can I have
two?

05e14040-523e-4baf-a4d1-011ce69ab14c/18064-0
01:32:37.533 --> 01:32:38.823
No, I can have only the root.

05e14040-523e-4baf-a4d1-011ce69ab14c/18070-0
01:32:38.833 --> 01:32:40.983
Only one node can be there,
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/18104-0
01:32:41.863 --> 01:32:45.785
Or in other terms, I can say two
power level, meaning two power

05e14040-523e-4baf-a4d1-011ce69ab14c/18104-1
01:32:45.785 --> 01:32:49.033
02 power 0 is what anything to
the power, zero is 1.

05e14040-523e-4baf-a4d1-011ce69ab14c/18120-0
01:32:49.303 --> 01:32:53.281
So I can have only one node that
one node is already here in

05e14040-523e-4baf-a4d1-011ce69ab14c/18120-1
01:32:53.281 --> 01:32:53.933
level one.

05e14040-523e-4baf-a4d1-011ce69ab14c/18126-0
01:32:54.123 --> 01:32:55.243
How many children can be there?

05e14040-523e-4baf-a4d1-011ce69ab14c/18135-0
01:32:57.413 --> 01:32:59.933
Yeah, since it is binary, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/18148-0
01:33:00.933 --> 01:33:04.253
Two power 1/2 power level right
to two can be there.

05e14040-523e-4baf-a4d1-011ce69ab14c/18158-0
01:33:04.413 --> 01:33:05.623
So if there there is 2 here.

05e14040-523e-4baf-a4d1-011ce69ab14c/18165-0
01:33:07.623 --> 01:33:09.703
Completely there in level 2.

05e14040-523e-4baf-a4d1-011ce69ab14c/18172-0
01:33:09.713 --> 01:33:10.703
How many children can be there?

05e14040-523e-4baf-a4d1-011ce69ab14c/18185-0
01:33:12.713 --> 01:33:14.513
If no children, then also proper
yes.

05e14040-523e-4baf-a4d1-011ce69ab14c/18193-0
01:33:14.523 --> 01:33:17.423
Yeah, poop power 24 can be
there.

05e14040-523e-4baf-a4d1-011ce69ab14c/18204-0
01:33:17.433 --> 01:33:19.423
So all four are here meeting
here.

05e14040-523e-4baf-a4d1-011ce69ab14c/18212-0
01:33:19.433 --> 01:33:21.503
Also, two children can be there
for this board.

05e14040-523e-4baf-a4d1-011ce69ab14c/18221-0
01:33:21.513 --> 01:33:22.783
Both are there for this.

05e14040-523e-4baf-a4d1-011ce69ab14c/18240-0
01:33:22.793 --> 01:33:25.018
Node two can be there, both are
there for this whole, so two can

05e14040-523e-4baf-a4d1-011ce69ab14c/18240-1
01:33:25.018 --> 01:33:25.873
be there, both are there.

05e14040-523e-4baf-a4d1-011ce69ab14c/18273-0
01:33:26.813 --> 01:33:31.116
So this is still the last but
one level in the last level it

05e14040-523e-4baf-a4d1-011ce69ab14c/18273-1
01:33:31.116 --> 01:33:35.207
is filled from as left as
possible, meaning here there is

05e14040-523e-4baf-a4d1-011ce69ab14c/18273-2
01:33:35.207 --> 01:33:36.123
a left child.

05e14040-523e-4baf-a4d1-011ce69ab14c/18285-0
01:33:36.133 --> 01:33:38.563
There is a right child, then the
next child should be.

05e14040-523e-4baf-a4d1-011ce69ab14c/18297-0
01:33:38.573 --> 01:33:41.073
For this only I cannot draw it
for this one or this one.

05e14040-523e-4baf-a4d1-011ce69ab14c/18308-0
01:33:41.673 --> 01:33:44.063
Yeah, I'll have to draw for this
node also.

05e14040-523e-4baf-a4d1-011ce69ab14c/18333-0
01:33:44.073 --> 01:33:47.815
1st it's left child, then it's
right child, meaning at the

05e14040-523e-4baf-a4d1-011ce69ab14c/18333-1
01:33:47.815 --> 01:33:51.683
lowermost level the nodes must
be filled from left to right.

05e14040-523e-4baf-a4d1-011ce69ab14c/18343-0
01:33:51.993 --> 01:33:54.183
I'll have to start from here and
start filling here.

05e14040-523e-4baf-a4d1-011ce69ab14c/18362-0
01:33:54.733 --> 01:33:57.470
I can't randomly add somewhere
here, then it will not be a

05e14040-523e-4baf-a4d1-011ce69ab14c/18362-1
01:33:57.470 --> 01:33:58.443
complete binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/18370-0
01:33:59.553 --> 01:34:00.673
Is this clear for all of you?

05e14040-523e-4baf-a4d1-011ce69ab14c/18383-0
01:34:03.113 --> 01:34:06.453
Maximum nodes at a level is 2
power I.

05e14040-523e-4baf-a4d1-011ce69ab14c/18395-0
01:34:07.283 --> 01:34:09.323
What are the difference between
complete binary and proper?

05e14040-523e-4baf-a4d1-011ce69ab14c/18423-0
01:34:09.333 --> 01:34:12.995
That's exactly what we are
looking at in a proper binary

05e14040-523e-4baf-a4d1-011ce69ab14c/18423-1
01:34:12.995 --> 01:34:16.656
tree, all the nodes will have
exactly two children or no

05e14040-523e-4baf-a4d1-011ce69ab14c/18423-2
01:34:16.656 --> 01:34:17.683
children at all.

05e14040-523e-4baf-a4d1-011ce69ab14c/18439-0
01:34:18.583 --> 01:34:21.973
But here I can always have
something like I'll write and

05e14040-523e-4baf-a4d1-011ce69ab14c/18439-1
01:34:21.973 --> 01:34:22.983
show you for you.

05e14040-523e-4baf-a4d1-011ce69ab14c/18448-0
01:34:26.973 --> 01:34:28.303
Is this now a complete binary
tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/18487-0
01:34:31.593 --> 01:34:34.570
Yeah, it is still a complete
binary tree because still this

05e14040-523e-4baf-a4d1-011ce69ab14c/18487-1
01:34:34.570 --> 01:34:37.695
level 2, all of them are fully
filled and at the last level it

05e14040-523e-4baf-a4d1-011ce69ab14c/18487-2
01:34:37.695 --> 01:34:39.133
is filled from left to right.

05e14040-523e-4baf-a4d1-011ce69ab14c/18493-0
01:34:39.633 --> 01:34:41.913
Whereas is this a proper binary
tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/18497-0
01:34:44.383 --> 01:34:44.933
Publish.

05e14040-523e-4baf-a4d1-011ce69ab14c/18503-0
01:34:44.943 --> 01:34:46.893
Is this a proper binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/18521-0
01:34:46.903 --> 01:34:50.209
No, because this should have
also had two, otherwise it is

05e14040-523e-4baf-a4d1-011ce69ab14c/18521-1
01:34:50.209 --> 01:34:51.273
not a proper right.

05e14040-523e-4baf-a4d1-011ce69ab14c/18530-0
01:34:51.643 --> 01:34:52.743
So now we've got the difference.

05e14040-523e-4baf-a4d1-011ce69ab14c/18533-0
01:34:54.333 --> 01:34:54.823
This one.

05e14040-523e-4baf-a4d1-011ce69ab14c/18544-0
01:34:54.833 --> 01:34:56.173
Is it a complete binary tree or
not?

05e14040-523e-4baf-a4d1-011ce69ab14c/18554-0
01:34:57.883 --> 01:35:00.133
The moment you look at it, you
should be replying. Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/18568-0
01:35:00.143 --> 01:35:02.423
No, it is not a complete binary.

05e14040-523e-4baf-a4d1-011ce69ab14c/18570-0
01:35:02.433 --> 01:35:03.343
Because of this guy.

05e14040-523e-4baf-a4d1-011ce69ab14c/18597-0
01:35:04.943 --> 01:35:08.385
L0L1L2 all of them are
completely filled no problem,

05e14040-523e-4baf-a4d1-011ce69ab14c/18597-1
01:35:08.385 --> 01:35:10.073
but in L3 it is violating.

05e14040-523e-4baf-a4d1-011ce69ab14c/18603-0
01:35:10.563 --> 01:35:12.793
It is not as left as possible.

05e14040-523e-4baf-a4d1-011ce69ab14c/18608-0
01:35:12.843 --> 01:35:13.643
What about this guy?

05e14040-523e-4baf-a4d1-011ce69ab14c/18629-0
01:35:14.463 --> 01:35:17.510
This should have had the
children, right, but it is not

05e14040-523e-4baf-a4d1-011ce69ab14c/18629-1
01:35:17.510 --> 01:35:20.013
there, so this is not a complete
binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/18633-0
01:35:20.843 --> 01:35:21.953
OK, no problem.

05e14040-523e-4baf-a4d1-011ce69ab14c/18652-0
01:35:22.363 --> 01:35:25.942
Now we agree this is not a
complete binary tree, but is

05e14040-523e-4baf-a4d1-011ce69ab14c/18652-1
01:35:25.942 --> 01:35:27.603
this a proper binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/18671-0
01:35:30.283 --> 01:35:33.374
Proper binary tree, meaning all
nodes should have internal nodes

05e14040-523e-4baf-a4d1-011ce69ab14c/18671-1
01:35:33.374 --> 01:35:35.133
should have exactly 2 internal
node.

05e14040-523e-4baf-a4d1-011ce69ab14c/18688-0
01:35:35.143 --> 01:35:38.450
It has exactly 2 internal node,
exactly 2 internal node, exactly

05e14040-523e-4baf-a4d1-011ce69ab14c/18688-1
01:35:38.450 --> 01:35:39.823
2 internal node, exactly 2.

05e14040-523e-4baf-a4d1-011ce69ab14c/18703-0
01:35:40.593 --> 01:35:45.803
So this is a proper binary tree,
but not a complete binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/18707-0
01:35:47.433 --> 01:35:48.153
Yeah, all good.

05e14040-523e-4baf-a4d1-011ce69ab14c/18711-0
01:35:50.713 --> 01:35:50.963
Yes.

05e14040-523e-4baf-a4d1-011ce69ab14c/18714-0
01:35:50.973 --> 01:35:51.143
No.

05e14040-523e-4baf-a4d1-011ce69ab14c/18720-0
01:35:51.153 --> 01:35:53.273
Maybe I'll Draw Something for
you.

05e14040-523e-4baf-a4d1-011ce69ab14c/18728-0
01:35:56.183 --> 01:35:57.293
Is this a complete binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/18738-0
01:35:59.443 --> 01:36:00.533
Keep answering me real quick.

05e14040-523e-4baf-a4d1-011ce69ab14c/18742-0
01:36:02.363 --> 01:36:02.673
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/18749-0
01:36:02.683 --> 01:36:03.793
Is this a complete binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/18753-0
01:36:03.803 --> 01:36:03.943
Yes.

05e14040-523e-4baf-a4d1-011ce69ab14c/18758-0
01:36:05.273 --> 01:36:06.393
Is this a complete binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/18763-0
01:36:08.373 --> 01:36:08.803
Yes.

05e14040-523e-4baf-a4d1-011ce69ab14c/18781-0
01:36:08.893 --> 01:36:11.425
Now also it is a complete binary
tree because this level this

05e14040-523e-4baf-a4d1-011ce69ab14c/18781-1
01:36:11.425 --> 01:36:12.323
level is fully filled.

05e14040-523e-4baf-a4d1-011ce69ab14c/18788-0
01:36:12.493 --> 01:36:13.813
Here I'm feeling from left to
right.

05e14040-523e-4baf-a4d1-011ce69ab14c/18812-0
01:36:14.813 --> 01:36:18.739
So which is the only position
where I can put the next node to

05e14040-523e-4baf-a4d1-011ce69ab14c/18812-1
01:36:18.739 --> 01:36:21.543
still maintain it as a complete
binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/18821-0
01:36:21.733 --> 01:36:24.333
I'll have to put it here now.

05e14040-523e-4baf-a4d1-011ce69ab14c/18834-0
01:36:24.343 --> 01:36:26.956
If I put something here now, it
is not a complete territory,

05e14040-523e-4baf-a4d1-011ce69ab14c/18834-1
01:36:26.956 --> 01:36:27.213
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/18840-0
01:36:27.223 --> 01:36:28.183
Because here it is missing.

05e14040-523e-4baf-a4d1-011ce69ab14c/18843-0
01:36:29.223 --> 01:36:29.573
Cool.

05e14040-523e-4baf-a4d1-011ce69ab14c/18846-0
01:36:29.643 --> 01:36:30.243
Now you got it.

05e14040-523e-4baf-a4d1-011ce69ab14c/18858-0
01:36:33.383 --> 01:36:36.413
Now we have something called as
perfect binary tree, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/18864-0
01:36:36.483 --> 01:36:37.093
What is this?

05e14040-523e-4baf-a4d1-011ce69ab14c/18884-0
01:36:37.583 --> 01:36:40.570
A perfect binary tree is a type
of binary tree in which every

05e14040-523e-4baf-a4d1-011ce69ab14c/18884-1
01:36:40.570 --> 01:36:42.593
internal node is exactly two
child nodes.

05e14040-523e-4baf-a4d1-011ce69ab14c/18906-0
01:36:42.643 --> 01:36:46.683
So till here in the definition,
if you see what does it reflect

05e14040-523e-4baf-a4d1-011ce69ab14c/18906-1
01:36:46.683 --> 01:36:48.513
still here in the definition?

05e14040-523e-4baf-a4d1-011ce69ab14c/18911-0
01:36:48.683 --> 01:36:49.453
What is that called?

05e14040-523e-4baf-a4d1-011ce69ab14c/18927-0
01:36:50.923 --> 01:36:53.193
By any trees are in which every
node has exactly 2.

05e14040-523e-4baf-a4d1-011ce69ab14c/18942-0
01:36:53.203 --> 01:36:59.640
It is proper right and and all
the leaf nodes are at the same

05e14040-523e-4baf-a4d1-011ce69ab14c/18942-1
01:36:59.640 --> 01:37:00.263
level.

05e14040-523e-4baf-a4d1-011ce69ab14c/18949-0
01:37:02.103 --> 01:37:03.313
Two conditions, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/18975-0
01:37:03.623 --> 01:37:07.091
If it is having exactly two
children and all the leaves are

05e14040-523e-4baf-a4d1-011ce69ab14c/18975-1
01:37:07.091 --> 01:37:10.153
at the same level, then it is a
perfect binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/18984-0
01:37:10.943 --> 01:37:12.673
In this case, internal has two
children.

05e14040-523e-4baf-a4d1-011ce69ab14c/18992-0
01:37:12.683 --> 01:37:13.993
Internal has 22.

05e14040-523e-4baf-a4d1-011ce69ab14c/19004-0
01:37:14.283 --> 01:37:18.393
All these leaf nodes are in the
same level then it is.

05e14040-523e-4baf-a4d1-011ce69ab14c/19009-0
01:37:20.623 --> 01:37:21.633
Perfect. Right?

05e14040-523e-4baf-a4d1-011ce69ab14c/19016-0
01:37:21.643 --> 01:37:23.163
Let me also clarify this to you.

05e14040-523e-4baf-a4d1-011ce69ab14c/19040-0
01:37:29.563 --> 01:37:33.547
But this particular tree that I
have drawn is this a proper

05e14040-523e-4baf-a4d1-011ce69ab14c/19040-1
01:37:33.547 --> 01:37:34.343
binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/19043-0
01:37:36.023 --> 01:37:36.773
Internal node.

05e14040-523e-4baf-a4d1-011ce69ab14c/19050-0
01:37:36.863 --> 01:37:37.773
It has two children.

05e14040-523e-4baf-a4d1-011ce69ab14c/19058-0
01:37:38.103 --> 01:37:40.753
This internal node has two
children, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/19073-0
01:37:40.803 --> 01:37:44.233
So this is a proper binary tree,
but is it a perfect binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/19078-0
01:37:46.633 --> 01:37:46.963
No.

05e14040-523e-4baf-a4d1-011ce69ab14c/19082-0
01:37:47.193 --> 01:37:48.923
Why with us?

05e14040-523e-4baf-a4d1-011ce69ab14c/19089-0
01:37:49.333 --> 01:37:50.763
This is L0 level 0.

05e14040-523e-4baf-a4d1-011ce69ab14c/19094-0
01:37:50.773 --> 01:37:51.553
This is level one.

05e14040-523e-4baf-a4d1-011ce69ab14c/19131-0
01:37:51.563 --> 01:37:55.716
This is level 2 and you will
observe that these two leaf

05e14040-523e-4baf-a4d1-011ce69ab14c/19131-1
01:37:55.716 --> 01:38:00.232
nodes are in level 2, whereas
this particular leaf node is in

05e14040-523e-4baf-a4d1-011ce69ab14c/19131-2
01:38:00.232 --> 01:38:03.583
level one, so that is not
allowed in perfect.

05e14040-523e-4baf-a4d1-011ce69ab14c/19140-0
01:38:05.553 --> 01:38:07.723
Right, but this is completely
agreed.

05e14040-523e-4baf-a4d1-011ce69ab14c/19155-0
01:38:07.733 --> 01:38:11.259
This is a proper binary tree
because each internal node has

05e14040-523e-4baf-a4d1-011ce69ab14c/19155-1
01:38:11.259 --> 01:38:12.493
exactly two children.

05e14040-523e-4baf-a4d1-011ce69ab14c/19158-0
01:38:13.893 --> 01:38:14.053
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/19172-0
01:38:15.163 --> 01:38:19.433
Now I have another question, is
this a complete binary tree CBT?

05e14040-523e-4baf-a4d1-011ce69ab14c/19176-0
01:38:21.263 --> 01:38:21.533
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/19184-0
01:38:21.543 --> 01:38:22.893
Is this a complete binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/19193-0
01:38:24.403 --> 01:38:26.313
Yes, because here it is fully
filled.

05e14040-523e-4baf-a4d1-011ce69ab14c/19198-0
01:38:26.323 --> 01:38:27.313
Here it is fully filled.

05e14040-523e-4baf-a4d1-011ce69ab14c/19206-0
01:38:27.543 --> 01:38:29.243
Here it is filled from left to
right.

05e14040-523e-4baf-a4d1-011ce69ab14c/19215-0
01:38:31.493 --> 01:38:32.793
Is a clear case all of you.

05e14040-523e-4baf-a4d1-011ce69ab14c/19235-0
01:38:35.083 --> 01:38:40.167
So can I put some lines like all
perfect binary trees are proper

05e14040-523e-4baf-a4d1-011ce69ab14c/19235-1
01:38:40.167 --> 01:38:41.183
binary trees?

05e14040-523e-4baf-a4d1-011ce69ab14c/19237-0
01:38:42.343 --> 01:38:42.833
Is that correct?

05e14040-523e-4baf-a4d1-011ce69ab14c/19250-0
01:38:44.943 --> 01:38:48.163
All perfect binary trees are
proper binary trees.

05e14040-523e-4baf-a4d1-011ce69ab14c/19259-0
01:38:49.743 --> 01:38:53.553
All proper binary trees are not
perfect.

05e14040-523e-4baf-a4d1-011ce69ab14c/19262-0
01:38:53.563 --> 01:38:54.073
Binary trees.

05e14040-523e-4baf-a4d1-011ce69ab14c/19264-0
01:38:54.993 --> 01:38:55.463
Is that correct?

05e14040-523e-4baf-a4d1-011ce69ab14c/19267-0
01:38:57.463 --> 01:38:58.443
All perfect.

05e14040-523e-4baf-a4d1-011ce69ab14c/19283-0
01:39:00.163 --> 01:39:06.443
Are of proper, but all proper
may not be perfect well.

05e14040-523e-4baf-a4d1-011ce69ab14c/19293-0
01:39:08.693 --> 01:39:10.383
There are some small formulas
for you.

05e14040-523e-4baf-a4d1-011ce69ab14c/19307-0
01:39:10.473 --> 01:39:12.843
Yeah, I will urge you to, you
know, have a look at this.

05e14040-523e-4baf-a4d1-011ce69ab14c/19322-0
01:39:13.073 --> 01:39:15.753
This is there in particular in
your Corman textbook.

05e14040-523e-4baf-a4d1-011ce69ab14c/19337-0
01:39:16.483 --> 01:39:18.893
Yeah, there's nothing related to
your exams and all that.

05e14040-523e-4baf-a4d1-011ce69ab14c/19362-0
01:39:18.903 --> 01:39:22.539
But if you're interested, you
can have a look at these proofs,

05e14040-523e-4baf-a4d1-011ce69ab14c/19362-1
01:39:22.539 --> 01:39:26.175
meaning the maximum number of
nodes in a binary tree with high

05e14040-523e-4baf-a4d1-011ce69ab14c/19362-2
01:39:26.175 --> 01:39:26.463
tech.

05e14040-523e-4baf-a4d1-011ce69ab14c/19374-0
01:39:28.293 --> 01:39:32.793
Right, all perfect binary tree
are proper and complete tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/19378-0
01:39:34.463 --> 01:39:36.983
Think about it, yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/19389-0
01:39:38.893 --> 01:39:41.393
Are perfect binary trees
complete binary trees also?

05e14040-523e-4baf-a4d1-011ce69ab14c/19396-0
01:39:43.693 --> 01:39:44.203
Is that the case?

05e14040-523e-4baf-a4d1-011ce69ab14c/19398-0
01:39:45.523 --> 01:39:45.903
Yes. No.

05e14040-523e-4baf-a4d1-011ce69ab14c/19401-0
01:39:51.493 --> 01:39:51.653
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/19407-0
01:39:55.173 --> 01:39:56.243
Yeah, Krishna says no.

05e14040-523e-4baf-a4d1-011ce69ab14c/19417-0
01:39:56.293 --> 01:39:58.103
So can you come with some
counter argument?

05e14040-523e-4baf-a4d1-011ce69ab14c/19429-0
01:39:58.173 --> 01:39:59.883
Can you Draw Something and show
why is it not?

05e14040-523e-4baf-a4d1-011ce69ab14c/19441-0
01:40:01.793 --> 01:40:03.893
Yeah, you can expect all these
type of questions, guys.

05e14040-523e-4baf-a4d1-011ce69ab14c/19459-0
01:40:03.903 --> 01:40:07.425
Yeah, unable to get the
difference between perfect and

05e14040-523e-4baf-a4d1-011ce69ab14c/19459-1
01:40:07.425 --> 01:40:09.473
complete binary tree so perfect.

05e14040-523e-4baf-a4d1-011ce69ab14c/19476-0
01:40:09.483 --> 01:40:13.765
Meaning all the leaves should
also be in the same level, so

05e14040-523e-4baf-a4d1-011ce69ab14c/19476-1
01:40:13.765 --> 01:40:15.763
this is a perfect one right?

05e14040-523e-4baf-a4d1-011ce69ab14c/19494-0
01:40:16.273 --> 01:40:19.343
The moment I add a new node
here, I add a new node here.

05e14040-523e-4baf-a4d1-011ce69ab14c/19500-0
01:40:19.823 --> 01:40:21.473
So is this perfect binary tree
now?

05e14040-523e-4baf-a4d1-011ce69ab14c/19514-0
01:40:23.053 --> 01:40:27.053
Apparati is this now a perfect
binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/19517-0
01:40:28.203 --> 01:40:29.103
Akhil, answer yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/19543-0
01:40:31.123 --> 01:40:35.046
Because all these leaf nodes are
in some level, but this leaf

05e14040-523e-4baf-a4d1-011ce69ab14c/19543-1
01:40:35.046 --> 01:40:37.893
node alone, he's in some other
level, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/19576-0
01:40:37.903 --> 01:40:41.125
So the moment you do this, this
is not a perfect binary tree,

05e14040-523e-4baf-a4d1-011ce69ab14c/19576-1
01:40:41.125 --> 01:40:44.502
whereas this is still a complete
binary tree then it is also not

05e14040-523e-4baf-a4d1-011ce69ab14c/19576-2
01:40:44.502 --> 01:40:45.593
complete by any tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/19585-0
01:40:45.603 --> 01:40:47.573
No, it is a complete binary
tree, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/19627-0
01:40:47.803 --> 01:40:50.655
It is definitely a complete
binary tree because till this

05e14040-523e-4baf-a4d1-011ce69ab14c/19627-1
01:40:50.655 --> 01:40:53.703
last but one level all are fully
filled in the last level you

05e14040-523e-4baf-a4d1-011ce69ab14c/19627-2
01:40:53.703 --> 01:40:56.653
have added a node from left to
right, so this is a complete

05e14040-523e-4baf-a4d1-011ce69ab14c/19627-3
01:40:56.653 --> 01:40:57.243
binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/19631-0
01:40:59.003 --> 01:40:59.243
Right.

05e14040-523e-4baf-a4d1-011ce69ab14c/19637-0
01:41:00.753 --> 01:41:01.243
What is it?

05e14040-523e-4baf-a4d1-011ce69ab14c/19640-0
01:41:01.253 --> 01:41:02.093
A proper binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/19650-0
01:41:03.853 --> 01:41:06.723
Yeah, it is not a proper binary.

05e14040-523e-4baf-a4d1-011ce69ab14c/19665-0
01:41:06.733 --> 01:41:09.333
Correct, because this internal
node does not have two children.

05e14040-523e-4baf-a4d1-011ce69ab14c/19676-0
01:41:10.373 --> 01:41:14.013
So in this example, this is only
a complete binary tree, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/19685-0
01:41:14.023 --> 01:41:15.583
This is not a perfect binary
tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/19692-0
01:41:15.593 --> 01:41:17.323
This is not a proper binary tree
also.

05e14040-523e-4baf-a4d1-011ce69ab14c/19700-0
01:41:20.403 --> 01:41:23.133
Yeah, fully filled, meaning
fully occupied.

05e14040-523e-4baf-a4d1-011ce69ab14c/19715-0
01:41:23.283 --> 01:41:25.673
So in the level 0 you can have
only one node.

05e14040-523e-4baf-a4d1-011ce69ab14c/19723-0
01:41:25.733 --> 01:41:27.823
It is already there in level
one.

05e14040-523e-4baf-a4d1-011ce69ab14c/19734-0
01:41:27.833 --> 01:41:29.873
You can have two power, one
which is 2 nodes.

05e14040-523e-4baf-a4d1-011ce69ab14c/19753-0
01:41:29.923 --> 01:41:35.350
Both are here in Level 3 it is 3
right Level 3 so it can have two

05e14040-523e-4baf-a4d1-011ce69ab14c/19753-1
01:41:35.350 --> 01:41:35.843
power.

05e14040-523e-4baf-a4d1-011ce69ab14c/19758-0
01:41:36.703 --> 01:41:37.733
Oops, this is 0.

05e14040-523e-4baf-a4d1-011ce69ab14c/19764-0
01:41:37.743 --> 01:41:38.173
This is 1.

05e14040-523e-4baf-a4d1-011ce69ab14c/19768-0
01:41:38.183 --> 01:41:38.673
This is 2.

05e14040-523e-4baf-a4d1-011ce69ab14c/19785-0
01:41:38.763 --> 01:41:42.154
This is level 2, so two power
two is 4, so four only can be

05e14040-523e-4baf-a4d1-011ce69ab14c/19785-1
01:41:42.154 --> 01:41:42.493
there.

05e14040-523e-4baf-a4d1-011ce69ab14c/19789-0
01:41:42.563 --> 01:41:43.443
So all four are here.

05e14040-523e-4baf-a4d1-011ce69ab14c/19807-0
01:41:44.643 --> 01:41:47.673
So it is we can call it as in
that level it is fully occupied.

05e14040-523e-4baf-a4d1-011ce69ab14c/19821-0
01:41:48.633 --> 01:41:50.903
It is not that this node is
missing or this node is missing.

05e14040-523e-4baf-a4d1-011ce69ab14c/19825-0
01:41:52.913 --> 01:41:53.123
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/19853-0
01:41:53.133 --> 01:41:56.486
Is it making sense for all of
you said why the first shown

05e14040-523e-4baf-a4d1-011ce69ab14c/19853-1
01:41:56.486 --> 01:41:59.043
complete binary is not a proper
binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/19863-0
01:41:59.053 --> 01:42:03.323
Where this one you mean with
slight NANDINI?

05e14040-523e-4baf-a4d1-011ce69ab14c/19875-0
01:42:07.553 --> 01:42:10.553
Yeah, first example, this one
right.

05e14040-523e-4baf-a4d1-011ce69ab14c/19885-0
01:42:12.213 --> 01:42:15.153
This was my very first example,
yeah, so this one.

05e14040-523e-4baf-a4d1-011ce69ab14c/19891-0
01:42:15.983 --> 01:42:17.363
So each internal node.

05e14040-523e-4baf-a4d1-011ce69ab14c/19904-0
01:42:17.373 --> 01:42:19.674
So first of all, all of us agree
that this is a complete binary

05e14040-523e-4baf-a4d1-011ce69ab14c/19904-1
01:42:19.674 --> 01:42:19.853
tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/19906-0
01:42:19.893 --> 01:42:20.243
Yes. No.

05e14040-523e-4baf-a4d1-011ce69ab14c/19911-0
01:42:23.253 --> 01:42:23.823
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/19920-0
01:42:23.893 --> 01:42:25.603
So that is why I was again going
slow.

05e14040-523e-4baf-a4d1-011ce69ab14c/19933-0
01:42:25.613 --> 01:42:27.883
But you know, so we can lot of
you have got confused.

05e14040-523e-4baf-a4d1-011ce69ab14c/19946-0
01:42:28.093 --> 01:42:30.443
Let me repeat it very clearly
one last time.

05e14040-523e-4baf-a4d1-011ce69ab14c/19950-0
01:42:30.893 --> 01:42:32.943
All of you, please focus. Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/19956-0
01:42:34.843 --> 01:42:35.393
Let's go back.

05e14040-523e-4baf-a4d1-011ce69ab14c/19961-0
01:42:35.403 --> 01:42:36.113
Come from here.

05e14040-523e-4baf-a4d1-011ce69ab14c/19970-0
01:42:36.383 --> 01:42:39.473
Proper meaning only one rule
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/19976-0
01:42:39.483 --> 01:42:40.173
Very simple.

05e14040-523e-4baf-a4d1-011ce69ab14c/19979-0
01:42:40.183 --> 01:42:41.173
Only one rule, Amit.

05e14040-523e-4baf-a4d1-011ce69ab14c/19984-0
01:42:41.183 --> 01:42:41.793
Yeah, all of you.

05e14040-523e-4baf-a4d1-011ce69ab14c/19993-0
01:42:41.803 --> 01:42:43.503
Please listen, don't ask the
same thing.

05e14040-523e-4baf-a4d1-011ce69ab14c/20011-0
01:42:43.513 --> 01:42:47.362
I'm repeating all the trees
again binary tree, meaning it

05e14040-523e-4baf-a4d1-011ce69ab14c/20011-1
01:42:47.362 --> 01:42:49.883
can have maximum two children,
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/20016-0
01:42:51.773 --> 01:42:52.673
Is this a binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/20023-0
01:42:54.693 --> 01:42:55.523
We'll stay focused.

05e14040-523e-4baf-a4d1-011ce69ab14c/20028-0
01:42:55.533 --> 01:42:56.273
We learn one by one.

05e14040-523e-4baf-a4d1-011ce69ab14c/20031-0
01:42:57.133 --> 01:42:57.313
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/20037-0
01:42:59.083 --> 01:43:00.003
Is this a binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/20045-0
01:43:01.053 --> 01:43:02.193
Yes, it is a binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/20054-0
01:43:02.203 --> 01:43:03.293
Why is it not a binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/20069-0
01:43:04.113 --> 01:43:07.563
It is having only one child
binary treatments maximum.

05e14040-523e-4baf-a4d1-011ce69ab14c/20078-0
01:43:07.573 --> 01:43:09.383
It can have two it can have one.

05e14040-523e-4baf-a4d1-011ce69ab14c/20084-0
01:43:09.393 --> 01:43:12.153
Also, it can have two also
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/20091-0
01:43:12.163 --> 01:43:13.283
So this is a binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/20093-0
01:43:13.413 --> 01:43:13.663
Perfect.

05e14040-523e-4baf-a4d1-011ce69ab14c/20104-0
01:43:14.423 --> 01:43:17.313
Now let's come back to proper
proper meaning.

05e14040-523e-4baf-a4d1-011ce69ab14c/20109-0
01:43:17.323 --> 01:43:19.583
Each internal node has exactly
two children.

05e14040-523e-4baf-a4d1-011ce69ab14c/20118-0
01:43:22.563 --> 01:43:24.063
Is this a proper binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/20127-0
01:43:26.593 --> 01:43:27.423
This is an internal node.

05e14040-523e-4baf-a4d1-011ce69ab14c/20132-0
01:43:28.313 --> 01:43:29.283
This has a child.

05e14040-523e-4baf-a4d1-011ce69ab14c/20148-0
01:43:29.373 --> 01:43:32.853
It has only one child, so it is
not a proper binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/20157-0
01:43:33.093 --> 01:43:34.343
It has to have exactly 2.

05e14040-523e-4baf-a4d1-011ce69ab14c/20166-0
01:43:35.313 --> 01:43:38.813
Now it has become a proper
binary tree, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/20183-0
01:43:39.263 --> 01:43:41.728
So if for every level, so if you
see here, this is an internal

05e14040-523e-4baf-a4d1-011ce69ab14c/20183-1
01:43:41.728 --> 01:43:41.923
node.

05e14040-523e-4baf-a4d1-011ce69ab14c/20193-0
01:43:41.933 --> 01:43:44.013
This has two this is an internal
node.

05e14040-523e-4baf-a4d1-011ce69ab14c/20203-0
01:43:44.023 --> 01:43:45.533
It has two this is an internal
node.

05e14040-523e-4baf-a4d1-011ce69ab14c/20217-0
01:43:45.543 --> 01:43:49.623
It has two, so this is called a
proper binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/20221-0
01:43:50.113 --> 01:43:51.213
I draw one for here.

05e14040-523e-4baf-a4d1-011ce69ab14c/20236-0
01:43:53.333 --> 01:43:55.963
The moment I have done this now,
is it a proper binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/20247-0
01:43:57.053 --> 01:43:59.443
Because this internal node has
only one child.

05e14040-523e-4baf-a4d1-011ce69ab14c/20253-0
01:43:59.813 --> 01:44:00.983
So now I have spoiled it.

05e14040-523e-4baf-a4d1-011ce69ab14c/20262-0
01:44:01.053 --> 01:44:02.163
He played the spoilsport.

05e14040-523e-4baf-a4d1-011ce69ab14c/20270-0
01:44:02.173 --> 01:44:03.803
Now this is not a proper binary
tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/20280-0
01:44:03.873 --> 01:44:05.513
How can I make it a proper
binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/20288-0
01:44:06.433 --> 01:44:07.433
I will add one more here.

05e14040-523e-4baf-a4d1-011ce69ab14c/20295-0
01:44:08.273 --> 01:44:09.753
So is this now a proper binary
tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/20310-0
01:44:12.343 --> 01:44:14.053
ASMI nadas all of you now.

05e14040-523e-4baf-a4d1-011ce69ab14c/20319-0
01:44:14.063 --> 01:44:15.343
Is this a proper binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/20323-0
01:44:15.353 --> 01:44:15.653
Yes.

05e14040-523e-4baf-a4d1-011ce69ab14c/20330-0
01:44:15.963 --> 01:44:18.403
So now is proper binary tree
clear for everyone?

05e14040-523e-4baf-a4d1-011ce69ab14c/20333-0
01:44:20.883 --> 01:44:21.083
Right.

05e14040-523e-4baf-a4d1-011ce69ab14c/20345-0
01:44:22.653 --> 01:44:26.093
Cool, now coming back to
complete binary tree complete

05e14040-523e-4baf-a4d1-011ce69ab14c/20345-1
01:44:26.093 --> 01:44:27.343
binary tree meaning.

05e14040-523e-4baf-a4d1-011ce69ab14c/20358-0
01:44:29.333 --> 01:44:32.623
Until the last but one level, it
should be fully filled.

05e14040-523e-4baf-a4d1-011ce69ab14c/20380-0
01:44:32.933 --> 01:44:39.334
What do I mean by fully filled
meaning in this level 0 maximum

05e14040-523e-4baf-a4d1-011ce69ab14c/20380-1
01:44:39.334 --> 01:44:41.873
I can have only one node.

05e14040-523e-4baf-a4d1-011ce69ab14c/20396-0
01:44:42.543 --> 01:44:48.579
That formula is given by two
power I where I stands for level

05e14040-523e-4baf-a4d1-011ce69ab14c/20396-1
01:44:48.579 --> 01:44:49.163
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/20410-0
01:44:49.263 --> 01:44:52.263
SO2 Power 0 means two power zero
is equal to 1.

05e14040-523e-4baf-a4d1-011ce69ab14c/20436-0
01:44:52.273 --> 01:44:56.235
Only one node can be there, it
is already there and then in

05e14040-523e-4baf-a4d1-011ce69ab14c/20436-1
01:44:56.235 --> 01:44:59.403
level one I can have two power,
one which is 2.

05e14040-523e-4baf-a4d1-011ce69ab14c/20452-0
01:44:59.813 --> 01:45:04.233
I can have two nodes, both of
them are there and index level.

05e14040-523e-4baf-a4d1-011ce69ab14c/20467-0
01:45:04.543 --> 01:45:07.733
It is L2 so I can have two power
two which is 4 nodes.

05e14040-523e-4baf-a4d1-011ce69ab14c/20479-0
01:45:08.083 --> 01:45:11.583
All four are here, meaning it's
fully filled, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/20511-0
01:45:11.593 --> 01:45:15.473
We up to its full capacity, it
is already filled and in the

05e14040-523e-4baf-a4d1-011ce69ab14c/20511-1
01:45:15.473 --> 01:45:19.418
last level it may not be fully
filled, but it should be from

05e14040-523e-4baf-a4d1-011ce69ab14c/20511-2
01:45:19.418 --> 01:45:20.323
left to right.

05e14040-523e-4baf-a4d1-011ce69ab14c/20538-0
01:45:20.773 --> 01:45:25.085
So in this case, is it from left
to right these two nodes they're

05e14040-523e-4baf-a4d1-011ce69ab14c/20538-1
01:45:25.085 --> 01:45:27.893
coming suddenly from this
particular node.

05e14040-523e-4baf-a4d1-011ce69ab14c/20545-0
01:45:27.983 --> 01:45:28.723
What about this guy?

05e14040-523e-4baf-a4d1-011ce69ab14c/20552-0
01:45:30.023 --> 01:45:31.333
He should have been here, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/20566-0
01:45:31.863 --> 01:45:34.373
So now I cannot tell it this is
a complete binary.

05e14040-523e-4baf-a4d1-011ce69ab14c/20597-0
01:45:34.383 --> 01:45:38.649
This is not a complete binary
tree, whereas if I draw it here,

05e14040-523e-4baf-a4d1-011ce69ab14c/20597-1
01:45:38.649 --> 01:45:42.373
even if I put one now, this is a
complete binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/20613-0
01:45:44.213 --> 01:45:46.822
But the moment I put only one,
is this now a proper binary

05e14040-523e-4baf-a4d1-011ce69ab14c/20613-1
01:45:46.822 --> 01:45:47.043
tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/20627-0
01:45:48.323 --> 01:45:51.828
Because proper definition says
that every internal node should

05e14040-523e-4baf-a4d1-011ce69ab14c/20627-1
01:45:51.828 --> 01:45:52.773
have two exactly.

05e14040-523e-4baf-a4d1-011ce69ab14c/20640-0
01:45:52.843 --> 01:45:55.053
But here 2 is not there, but
still I'm OK.

05e14040-523e-4baf-a4d1-011ce69ab14c/20645-0
01:45:55.063 --> 01:45:56.313
This is a complete binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/20701-0
01:45:56.603 --> 01:46:00.570
This is not a proper binary
tree, but if I add one more here

05e14040-523e-4baf-a4d1-011ce69ab14c/20701-1
01:46:00.570 --> 01:46:04.406
Now this becomes both complete
binary tree also and proper

05e14040-523e-4baf-a4d1-011ce69ab14c/20701-2
01:46:04.406 --> 01:46:08.437
binary tree also because till
this level all are fully filled

05e14040-523e-4baf-a4d1-011ce69ab14c/20701-3
01:46:08.437 --> 01:46:12.598
in the last level we are filling
it from left to right so it is

05e14040-523e-4baf-a4d1-011ce69ab14c/20701-4
01:46:12.598 --> 01:46:13.963
complete binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/20712-0
01:46:14.013 --> 01:46:16.723
It is AC T and proper monetary
also.

05e14040-523e-4baf-a4d1-011ce69ab14c/20721-0
01:46:16.733 --> 01:46:18.703
Yes, because this internal node
has two children.

05e14040-523e-4baf-a4d1-011ce69ab14c/20727-0
01:46:18.753 --> 01:46:19.623
This has two children.

05e14040-523e-4baf-a4d1-011ce69ab14c/20733-0
01:46:19.633 --> 01:46:20.423
This has two children.

05e14040-523e-4baf-a4d1-011ce69ab14c/20746-0
01:46:20.433 --> 01:46:22.343
This has two children, so it is
proper.

05e14040-523e-4baf-a4d1-011ce69ab14c/20753-0
01:46:22.353 --> 01:46:27.203
Also, right now certainly I add
one node here.

05e14040-523e-4baf-a4d1-011ce69ab14c/20770-0
01:46:29.523 --> 01:46:34.113
Now you will comment about is it
a proper binary tree or not?

05e14040-523e-4baf-a4d1-011ce69ab14c/20779-0
01:46:34.203 --> 01:46:35.463
Is it a CBT or not?

05e14040-523e-4baf-a4d1-011ce69ab14c/20786-0
01:46:37.123 --> 01:46:37.843
Go ahead and tell me.

05e14040-523e-4baf-a4d1-011ce69ab14c/20792-0
01:46:39.433 --> 01:46:40.723
Don't jump the bridge, Amit.

05e14040-523e-4baf-a4d1-011ce69ab14c/20799-0
01:46:40.733 --> 01:46:41.983
We will come there for now.

05e14040-523e-4baf-a4d1-011ce69ab14c/20813-0
01:46:41.993 --> 01:46:44.460
We have just learned what is
binary, what is proper, what is

05e14040-523e-4baf-a4d1-011ce69ab14c/20813-1
01:46:44.460 --> 01:46:44.823
complete.

05e14040-523e-4baf-a4d1-011ce69ab14c/20822-0
01:46:45.793 --> 01:46:48.063
Yeah, there's also no.

05e14040-523e-4baf-a4d1-011ce69ab14c/20839-0
01:46:48.153 --> 01:46:51.823
There's also no correct because
here you are not filling it from

05e14040-523e-4baf-a4d1-011ce69ab14c/20839-1
01:46:51.823 --> 01:46:52.613
left to right.

05e14040-523e-4baf-a4d1-011ce69ab14c/20844-0
01:46:52.623 --> 01:46:53.503
What about this node?

05e14040-523e-4baf-a4d1-011ce69ab14c/20852-0
01:46:53.513 --> 01:46:54.613
What about this left node?

05e14040-523e-4baf-a4d1-011ce69ab14c/20879-0
01:46:54.623 --> 01:46:58.406
Suddenly you add it here so it
is not a CPT and here again this

05e14040-523e-4baf-a4d1-011ce69ab14c/20879-1
01:46:58.406 --> 01:47:01.893
internal node is not having two
children, it has only one.

05e14040-523e-4baf-a4d1-011ce69ab14c/20898-0
01:47:02.263 --> 01:47:06.235
So it is not a proper also, so
no one knows the correct answer

05e14040-523e-4baf-a4d1-011ce69ab14c/20898-1
01:47:06.235 --> 01:47:06.613
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/20903-0
01:47:06.623 --> 01:47:07.613
So far so good, all of you.

05e14040-523e-4baf-a4d1-011ce69ab14c/20917-0
01:47:09.733 --> 01:47:10.873
Right I have added a node.

05e14040-523e-4baf-a4d1-011ce69ab14c/20929-0
01:47:10.883 --> 01:47:15.623
Here is the CBT right I've added
one more.

05e14040-523e-4baf-a4d1-011ce69ab14c/20943-0
01:47:16.113 --> 01:47:19.621
This is the CBT also and now
this is a proper binary tree

05e14040-523e-4baf-a4d1-011ce69ab14c/20943-1
01:47:19.621 --> 01:47:19.923
also.

05e14040-523e-4baf-a4d1-011ce69ab14c/20952-0
01:47:20.213 --> 01:47:21.723
Now let's go back to that last
day.

05e14040-523e-4baf-a4d1-011ce69ab14c/20962-0
01:47:21.733 --> 01:47:25.503
Who's perfect perfect is very
simple, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/20986-0
01:47:25.613 --> 01:47:30.525
He just says all internal nodes
should have exactly two children

05e14040-523e-4baf-a4d1-011ce69ab14c/20986-1
01:47:30.525 --> 01:47:34.453
and and all the leaves should be
in the same level.

05e14040-523e-4baf-a4d1-011ce69ab14c/21013-0
01:47:35.813 --> 01:47:39.188
So in this case, if you see the
first part of the definition is

05e14040-523e-4baf-a4d1-011ce69ab14c/21013-1
01:47:39.188 --> 01:47:42.193
clear, all the internal nodes
have exactly two children.

05e14040-523e-4baf-a4d1-011ce69ab14c/21018-0
01:47:42.583 --> 01:47:43.863
These internal node has two
children.

05e14040-523e-4baf-a4d1-011ce69ab14c/21024-0
01:47:43.873 --> 01:47:44.683
This has two children.

05e14040-523e-4baf-a4d1-011ce69ab14c/21031-0
01:47:44.693 --> 01:47:45.463
This has two children.

05e14040-523e-4baf-a4d1-011ce69ab14c/21048-0
01:47:45.473 --> 01:47:49.047
This has two children, no
problem, but they are not in the

05e14040-523e-4baf-a4d1-011ce69ab14c/21048-1
01:47:49.047 --> 01:47:49.713
same level.

05e14040-523e-4baf-a4d1-011ce69ab14c/21066-0
01:47:49.783 --> 01:47:54.532
So if you see the leaves date,
these are all leaves which are

05e14040-523e-4baf-a4d1-011ce69ab14c/21066-1
01:47:54.532 --> 01:47:56.523
in which level real quick.

05e14040-523e-4baf-a4d1-011ce69ab14c/21069-0
01:47:56.533 --> 01:47:56.703
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/21074-0
01:47:56.713 --> 01:47:58.993
Which level L0L 1L2.

05e14040-523e-4baf-a4d1-011ce69ab14c/21092-0
01:48:00.893 --> 01:48:04.023
Whereas these two are also
leaves which are in L3.

05e14040-523e-4baf-a4d1-011ce69ab14c/21107-0
01:48:04.833 --> 01:48:07.923
If you have that case, then it
is not a perfect binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/21145-0
01:48:09.123 --> 01:48:12.874
It is not a perfect binary tree,
but you can definitely tell that

05e14040-523e-4baf-a4d1-011ce69ab14c/21145-1
01:48:12.874 --> 01:48:15.943
it is A proper binary tree
because all the nodes have

05e14040-523e-4baf-a4d1-011ce69ab14c/21145-2
01:48:15.943 --> 01:48:19.353
exactly two children and it is
also a complete binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/21164-0
01:48:19.363 --> 01:48:24.562
In this case, what all I can say
proper or not, CBT or not

05e14040-523e-4baf-a4d1-011ce69ab14c/21164-1
01:48:24.562 --> 01:48:25.883
perfect or not?

05e14040-523e-4baf-a4d1-011ce69ab14c/21181-0
01:48:27.383 --> 01:48:34.013
What will be your answers proper
is yes, CBT is yes perfect.

05e14040-523e-4baf-a4d1-011ce69ab14c/21183-0
01:48:34.023 --> 01:48:34.363
There's no.

05e14040-523e-4baf-a4d1-011ce69ab14c/21196-0
01:48:36.613 --> 01:48:39.663
Is it now clear for all of you?
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/21211-0
01:48:42.353 --> 01:48:46.313
Accurately, all of you, others,
all the definitions, right.

05e14040-523e-4baf-a4d1-011ce69ab14c/21215-0
01:48:47.603 --> 01:48:47.803
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/21226-0
01:48:47.813 --> 01:48:50.533
And they draw a tree, which is
all the three.

05e14040-523e-4baf-a4d1-011ce69ab14c/21229-0
01:48:50.963 --> 01:48:51.703
Is that possible?

05e14040-523e-4baf-a4d1-011ce69ab14c/21232-0
01:48:53.213 --> 01:48:53.583
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/21237-0
01:48:53.593 --> 01:48:54.083
Is that possible?

05e14040-523e-4baf-a4d1-011ce69ab14c/21252-0
01:48:55.153 --> 01:48:58.453
Can I draw a tree which satisfy
all the tree properties?

05e14040-523e-4baf-a4d1-011ce69ab14c/21257-0
01:49:01.003 --> 01:49:02.053
Yeah, definitely.

05e14040-523e-4baf-a4d1-011ce69ab14c/21262-0
01:49:02.063 --> 01:49:03.683
Yes, right.

05e14040-523e-4baf-a4d1-011ce69ab14c/21266-0
01:49:04.203 --> 01:49:05.663
If I Draw Something like this.

05e14040-523e-4baf-a4d1-011ce69ab14c/21273-0
01:49:09.393 --> 01:49:10.283
Is this binary?

05e14040-523e-4baf-a4d1-011ce69ab14c/21282-0
01:49:10.333 --> 01:49:12.483
Yes, nobody is having three
children, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/21288-0
01:49:12.493 --> 01:49:13.263
So it is binary.

05e14040-523e-4baf-a4d1-011ce69ab14c/21291-0
01:49:13.653 --> 01:49:14.603
Is it proper?

05e14040-523e-4baf-a4d1-011ce69ab14c/21302-0
01:49:15.053 --> 01:49:17.183
Yes, all internal loads have
exactly two children.

05e14040-523e-4baf-a4d1-011ce69ab14c/21305-0
01:49:17.243 --> 01:49:17.643
Perfect.

05e14040-523e-4baf-a4d1-011ce69ab14c/21311-0
01:49:17.653 --> 01:49:18.403
Is it AC T?

05e14040-523e-4baf-a4d1-011ce69ab14c/21318-0
01:49:18.413 --> 01:49:19.423
Yes, all the nodes.

05e14040-523e-4baf-a4d1-011ce69ab14c/21327-0
01:49:19.493 --> 01:49:21.763
All the levels are fully filled
and is it perfect?

05e14040-523e-4baf-a4d1-011ce69ab14c/21330-0
01:49:21.773 --> 01:49:22.263
Also yes.

05e14040-523e-4baf-a4d1-011ce69ab14c/21332-0
01:49:24.003 --> 01:49:24.173
Cool.

05e14040-523e-4baf-a4d1-011ce69ab14c/21337-0
01:49:26.083 --> 01:49:26.873
Done right.

05e14040-523e-4baf-a4d1-011ce69ab14c/21345-0
01:49:27.083 --> 01:49:29.033
So now we will look at some
formulas, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/21355-0
01:49:29.323 --> 01:49:31.043
So very simple formulas are
there.

05e14040-523e-4baf-a4d1-011ce69ab14c/21373-0
01:49:31.343 --> 01:49:35.933
That is, if I have a binary tree
with height hitch right, that

05e14040-523e-4baf-a4d1-011ce69ab14c/21373-1
01:49:35.933 --> 01:49:37.973
high is given to you, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/21385-0
01:49:37.983 --> 01:49:40.073
I'm telling you that height
cannot go more than four.

05e14040-523e-4baf-a4d1-011ce69ab14c/21387-0
01:49:41.063 --> 01:49:41.293
No.

05e14040-523e-4baf-a4d1-011ce69ab14c/21402-0
01:49:41.303 --> 01:49:44.303
Can you tell me how many maximum
nodes can I fill there?

05e14040-523e-4baf-a4d1-011ce69ab14c/21415-0
01:49:45.293 --> 01:49:49.713
That is given by this formula
that is at the very first level.

05e14040-523e-4baf-a4d1-011ce69ab14c/21421-0
01:49:49.723 --> 01:49:50.733
How many nodes you can have?

05e14040-523e-4baf-a4d1-011ce69ab14c/21443-0
01:49:52.753 --> 01:49:55.948
You can have two power zero and
in level one you can have two

05e14040-523e-4baf-a4d1-011ce69ab14c/21443-1
01:49:55.948 --> 01:49:56.463
power one.

05e14040-523e-4baf-a4d1-011ce69ab14c/21464-0
01:49:56.713 --> 01:50:00.293
Then you can have two power two
and so on up to two power H

05e14040-523e-4baf-a4d1-011ce69ab14c/21464-1
01:50:00.293 --> 01:50:01.963
where H is the height right.

05e14040-523e-4baf-a4d1-011ce69ab14c/21502-0
01:50:02.573 --> 01:50:06.676
So now this is a mathematical
equation, so you can actually,

05e14040-523e-4baf-a4d1-011ce69ab14c/21502-1
01:50:06.676 --> 01:50:10.712
you know, rewrite it as two
power H + 1 -, 1, right where H

05e14040-523e-4baf-a4d1-011ce69ab14c/21502-2
01:50:10.712 --> 01:50:13.873
+ 1 is nothing but the number of
level. Right?

05e14040-523e-4baf-a4d1-011ce69ab14c/21540-0
01:50:14.183 --> 01:50:18.107
So I can just replace that and
tell that this this itself is

05e14040-523e-4baf-a4d1-011ce69ab14c/21540-1
01:50:18.107 --> 01:50:22.351
the answer actually to power H +
1 -, 1 that many number of nodes

05e14040-523e-4baf-a4d1-011ce69ab14c/21540-2
01:50:22.351 --> 01:50:23.573
you can fill right.

05e14040-523e-4baf-a4d1-011ce69ab14c/21559-0
01:50:23.743 --> 01:50:28.612
For example, if I have three as
the height, they have height is

05e14040-523e-4baf-a4d1-011ce69ab14c/21559-1
01:50:28.612 --> 01:50:29.753
equal to three.

05e14040-523e-4baf-a4d1-011ce69ab14c/21573-0
01:50:30.243 --> 01:50:34.163
How many maximum nodes I can
fill at the topmost?

05e14040-523e-4baf-a4d1-011ce69ab14c/21601-0
01:50:34.173 --> 01:50:37.888
I can just put one right and the
next level I can put two and

05e14040-523e-4baf-a4d1-011ce69ab14c/21601-1
01:50:37.888 --> 01:50:41.423
then in the next level I can put
another four right total.

05e14040-523e-4baf-a4d1-011ce69ab14c/21608-0
01:50:41.433 --> 01:50:41.913
How much is it?

05e14040-523e-4baf-a4d1-011ce69ab14c/21611-0
01:50:43.033 --> 01:50:44.843
Only seven, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/21613-0
01:50:45.863 --> 01:50:46.223
Yes. No.

05e14040-523e-4baf-a4d1-011ce69ab14c/21624-0
01:50:48.473 --> 01:50:50.183
Do you also need to know, uh?
Threaded.

05e14040-523e-4baf-a4d1-011ce69ab14c/21629-0
01:50:50.193 --> 01:50:50.883
No, not at all.

05e14040-523e-4baf-a4d1-011ce69ab14c/21633-0
01:50:50.893 --> 01:50:51.783
Yeah, only these.

05e14040-523e-4baf-a4d1-011ce69ab14c/21663-0
01:50:52.313 --> 01:50:55.765
So these are just basic formulas
which is telling you how much

05e14040-523e-4baf-a4d1-011ce69ab14c/21663-1
01:50:55.765 --> 01:50:59.161
maximum number of nodes can be
there with height or the other

05e14040-523e-4baf-a4d1-011ce69ab14c/21663-2
01:50:59.161 --> 01:50:59.763
way around.

05e14040-523e-4baf-a4d1-011ce69ab14c/21683-0
01:50:59.773 --> 01:51:04.371
Also, if maximum number of nodes
are given, we can also find out

05e14040-523e-4baf-a4d1-011ce69ab14c/21683-1
01:51:04.371 --> 01:51:06.563
what will be its height, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/21702-0
01:51:06.943 --> 01:51:11.013
Will he be able to put 10 nodes
in a tree with height 2?

05e14040-523e-4baf-a4d1-011ce69ab14c/21706-0
01:51:11.323 --> 01:51:11.903
Is that possible?

05e14040-523e-4baf-a4d1-011ce69ab14c/21712-0
01:51:13.373 --> 01:51:14.923
I have 10 nodes in hand.

05e14040-523e-4baf-a4d1-011ce69ab14c/21728-0
01:51:15.683 --> 01:51:19.813
Can I just put it in a tree with
height 2 not possible, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/21753-0
01:51:19.823 --> 01:51:22.697
Because I can have only one in
the first level, I can only two,

05e14040-523e-4baf-a4d1-011ce69ab14c/21753-1
01:51:22.697 --> 01:51:24.313
then the others will go down
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/21759-0
01:51:25.113 --> 01:51:27.483
Only four can be here, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/21775-0
01:51:27.553 --> 01:51:30.503
So here I was not able to occupy
all 10 right?

05e14040-523e-4baf-a4d1-011ce69ab14c/21784-0
01:51:30.673 --> 01:51:33.593
So this formula gives you the
height needed.

05e14040-523e-4baf-a4d1-011ce69ab14c/21803-0
01:51:34.483 --> 01:51:39.960
So if we have 10 nodes, what is
the you know log 10 value floor

05e14040-523e-4baf-a4d1-011ce69ab14c/21803-1
01:51:39.960 --> 01:51:40.473
value?

05e14040-523e-4baf-a4d1-011ce69ab14c/21820-0
01:51:40.523 --> 01:51:44.647
Right, that'll be your answer of
how much height you will need in

05e14040-523e-4baf-a4d1-011ce69ab14c/21820-1
01:51:44.647 --> 01:51:46.333
order to fit your 10 nodes.

05e14040-523e-4baf-a4d1-011ce69ab14c/21822-0
01:51:48.303 --> 01:51:48.503
Right.

05e14040-523e-4baf-a4d1-011ce69ab14c/21838-0
01:51:50.503 --> 01:51:54.233
What is the min and Max height
of a binary tree, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/21858-0
01:51:54.583 --> 01:51:58.147
If I want the minimum height, I
will start filling in all the

05e14040-523e-4baf-a4d1-011ce69ab14c/21858-1
01:51:58.147 --> 01:51:59.813
sites maximum possible right?

05e14040-523e-4baf-a4d1-011ce69ab14c/21875-0
01:51:59.823 --> 01:52:03.767
In this only one possible, I'll
put it in this I have I can put

05e14040-523e-4baf-a4d1-011ce69ab14c/21875-1
01:52:03.767 --> 01:52:04.013
two.

05e14040-523e-4baf-a4d1-011ce69ab14c/21885-0
01:52:04.023 --> 01:52:06.053
I have put two this I can put
four.

05e14040-523e-4baf-a4d1-011ce69ab14c/21915-0
01:52:06.063 --> 01:52:09.700
I'll put all the four so then
I'll get the minimum height, but

05e14040-523e-4baf-a4d1-011ce69ab14c/21915-1
01:52:09.700 --> 01:52:13.163
if I want maximum height then
I'll just put one one in each

05e14040-523e-4baf-a4d1-011ce69ab14c/21915-2
01:52:13.163 --> 01:52:13.913
level, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/21939-0
01:52:13.923 --> 01:52:18.088
Then I'll have maximum if I want
to place 8 nodes then I'll have

05e14040-523e-4baf-a4d1-011ce69ab14c/21939-1
01:52:18.088 --> 01:52:19.113
high test seven.

05e14040-523e-4baf-a4d1-011ce69ab14c/21944-0
01:52:19.463 --> 01:52:20.703
I can put it like this, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/21966-0
01:52:23.863 --> 01:52:27.253
This will give you the maximum
height, but the same 8 nodes.

05e14040-523e-4baf-a4d1-011ce69ab14c/21975-0
01:52:27.263 --> 01:52:29.643
If you want minimum height, I'll
fully occupy it like this.

05e14040-523e-4baf-a4d1-011ce69ab14c/21977-0
01:52:31.743 --> 01:52:31.963
Right.

05e14040-523e-4baf-a4d1-011ce69ab14c/21989-0
01:52:34.203 --> 01:52:36.373
Well, they're all simple, you
know, formulas and tricks.

05e14040-523e-4baf-a4d1-011ce69ab14c/21992-0
01:52:36.383 --> 01:52:37.533
Yeah, not much.

05e14040-523e-4baf-a4d1-011ce69ab14c/22002-0
01:52:39.313 --> 01:52:40.883
Balanced binary tree will come.

05e14040-523e-4baf-a4d1-011ce69ab14c/22009-0
01:52:40.893 --> 01:52:41.943
We will come to this later.

05e14040-523e-4baf-a4d1-011ce69ab14c/22012-0
01:52:41.953 --> 01:52:42.283
Don't.

05e14040-523e-4baf-a4d1-011ce69ab14c/22021-0
01:52:42.293 --> 01:52:44.163
Uh, you know, worry too much
about it.

05e14040-523e-4baf-a4d1-011ce69ab14c/22028-0
01:52:44.173 --> 01:52:45.803
There's a complete class on
this.

05e14040-523e-4baf-a4d1-011ce69ab14c/22037-0
01:52:46.053 --> 01:52:47.483
We will look at it at that time.

05e14040-523e-4baf-a4d1-011ce69ab14c/22053-0
01:52:47.773 --> 01:52:50.064
So, but it is something to do
with calculating some

05e14040-523e-4baf-a4d1-011ce69ab14c/22053-1
01:52:50.064 --> 01:52:51.033
differences and so on.

05e14040-523e-4baf-a4d1-011ce69ab14c/22062-0
01:52:51.043 --> 01:52:52.343
Who will come back at that time?

05e14040-523e-4baf-a4d1-011ce69ab14c/22067-0
01:52:52.353 --> 01:52:52.983
Forget it for now.

05e14040-523e-4baf-a4d1-011ce69ab14c/22076-0
01:52:54.043 --> 01:52:55.683
Yeah, but so far, so good.

05e14040-523e-4baf-a4d1-011ce69ab14c/22078-0
01:52:55.693 --> 01:52:56.063
All of you.

05e14040-523e-4baf-a4d1-011ce69ab14c/22084-0
01:52:56.983 --> 01:52:58.253
What is a binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/22092-0
01:52:58.263 --> 01:52:59.893
What is a proper binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/22100-0
01:52:59.903 --> 01:53:01.513
What is a complete binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/22126-0
01:53:01.763 --> 01:53:04.833
What is a perfect binary tree
and some small definitions here

05e14040-523e-4baf-a4d1-011ce69ab14c/22126-1
01:53:04.833 --> 01:53:07.753
and there like formulas of, you
know, log north and so on?

05e14040-523e-4baf-a4d1-011ce69ab14c/22133-0
01:53:08.103 --> 01:53:09.073
It's an open book exam.

05e14040-523e-4baf-a4d1-011ce69ab14c/22147-0
01:53:09.083 --> 01:53:11.613
You can always, you know, refer
them, if at all you need.

05e14040-523e-4baf-a4d1-011ce69ab14c/22154-0
01:53:13.063 --> 01:53:14.103
Is it clear, guys, all of you?

05e14040-523e-4baf-a4d1-011ce69ab14c/22157-0
01:53:16.133 --> 01:53:16.403
Yes.

05e14040-523e-4baf-a4d1-011ce69ab14c/22159-0
01:53:16.413 --> 01:53:16.763
No, maybe.

05e14040-523e-4baf-a4d1-011ce69ab14c/22168-0
01:53:20.573 --> 01:53:21.463
Now I have a question.

05e14040-523e-4baf-a4d1-011ce69ab14c/22175-0
01:53:21.473 --> 01:53:23.043
How do you implement a stack?

05e14040-523e-4baf-a4d1-011ce69ab14c/22177-0
01:53:24.313 --> 01:53:24.763
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/22185-0
01:53:24.813 --> 01:53:26.003
How do you implement a stack?

05e14040-523e-4baf-a4d1-011ce69ab14c/22189-0
01:53:30.823 --> 01:53:31.563
Yeah, real quick.

05e14040-523e-4baf-a4d1-011ce69ab14c/22197-0
01:53:36.463 --> 01:53:37.913
No, no, you need not memorize.

05e14040-523e-4baf-a4d1-011ce69ab14c/22211-0
01:53:37.923 --> 01:53:41.564
Yeah, there will not be
questions which will require you

05e14040-523e-4baf-a4d1-011ce69ab14c/22211-1
01:53:41.564 --> 01:53:42.713
to memorize, yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/22219-0
01:53:46.963 --> 01:53:48.413
You can actually derive all
this.

05e14040-523e-4baf-a4d1-011ce69ab14c/22242-0
01:53:48.423 --> 01:53:51.858
Uh, how I drew this you can
actually derive these also by

05e14040-523e-4baf-a4d1-011ce69ab14c/22242-1
01:53:51.858 --> 01:53:53.693
doing it, no push pop is wrong.

05e14040-523e-4baf-a4d1-011ce69ab14c/22257-0
01:53:54.143 --> 01:53:57.513
Akriti is right, you can use
either array or a linked list.

05e14040-523e-4baf-a4d1-011ce69ab14c/22264-0
01:53:57.973 --> 01:53:59.293
Similarly, what about queue?

05e14040-523e-4baf-a4d1-011ce69ab14c/22277-0
01:53:59.343 --> 01:54:01.073
You can use an array or a linked
list.

05e14040-523e-4baf-a4d1-011ce69ab14c/22281-0
01:54:01.483 --> 01:54:03.113
So similarly binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/22302-0
01:54:03.123 --> 01:54:07.067
Also you can use either a linked
list or an array, yeah, but

05e14040-523e-4baf-a4d1-011ce69ab14c/22302-1
01:54:07.067 --> 01:54:08.553
there is a caveat here.

05e14040-523e-4baf-a4d1-011ce69ab14c/22309-0
01:54:09.733 --> 01:54:12.933
Whenever you have a complete
binary tree, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/22315-0
01:54:12.943 --> 01:54:13.483
What is it?

05e14040-523e-4baf-a4d1-011ce69ab14c/22319-0
01:54:13.733 --> 01:54:14.833
Complete binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/22331-0
01:54:15.913 --> 01:54:18.613
Then you will use an array
right.

05e14040-523e-4baf-a4d1-011ce69ab14c/22339-0
01:54:19.443 --> 01:54:21.723
In other cases you will use a
linked list.

05e14040-523e-4baf-a4d1-011ce69ab14c/22342-0
01:54:23.003 --> 01:54:23.533
Why is it so?

05e14040-523e-4baf-a4d1-011ce69ab14c/22385-0
01:54:25.393 --> 01:54:28.435
Because if you represent a
complete binary tree using an

05e14040-523e-4baf-a4d1-011ce69ab14c/22385-1
01:54:28.435 --> 01:54:31.797
array or for that matter, you
can also say perfect binary tree

05e14040-523e-4baf-a4d1-011ce69ab14c/22385-2
01:54:31.797 --> 01:54:35.052
if it is a complete binary tree
or if it is a perfect binary

05e14040-523e-4baf-a4d1-011ce69ab14c/22385-3
01:54:35.052 --> 01:54:36.973
tree, then you can actually have
a.

05e14040-523e-4baf-a4d1-011ce69ab14c/22389-0
01:54:39.033 --> 01:54:39.383
Party.

05e14040-523e-4baf-a4d1-011ce69ab14c/22400-0
01:54:39.913 --> 01:54:42.553
Otherwise you have to use a
linked list, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/22416-0
01:54:43.593 --> 01:54:47.363
But First things first, how do
you represent Petrina Nari?

05e14040-523e-4baf-a4d1-011ce69ab14c/22419-0
01:54:48.403 --> 01:54:48.753
Right.

05e14040-523e-4baf-a4d1-011ce69ab14c/22449-0
01:54:49.323 --> 01:54:52.233
Let's look at that complete
binary trees can be represented

05e14040-523e-4baf-a4d1-011ce69ab14c/22449-1
01:54:52.233 --> 01:54:55.142
in memory with the use of an
array so that all nodes can be

05e14040-523e-4baf-a4d1-011ce69ab14c/22449-2
01:54:55.142 --> 01:54:55.723
accessed in.

05e14040-523e-4baf-a4d1-011ce69ab14c/22464-0
01:54:55.733 --> 01:54:58.993
We go off one time, root will be
in the first position.

05e14040-523e-4baf-a4d1-011ce69ab14c/22477-0
01:54:59.833 --> 01:55:04.280
Label the node sequentially from
top to bottom, left to right,

05e14040-523e-4baf-a4d1-011ce69ab14c/22477-1
01:55:04.280 --> 01:55:04.703
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/22488-0
01:55:04.713 --> 01:55:07.223
If I have it so, what type of a
tree is this?

05e14040-523e-4baf-a4d1-011ce69ab14c/22500-0
01:55:08.583 --> 01:55:10.773
Can you comment about what type
of a tree this is?

05e14040-523e-4baf-a4d1-011ce69ab14c/22515-0
01:55:15.373 --> 01:55:16.853
Of course, firstly it is a
binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/22523-0
01:55:17.773 --> 01:55:19.223
It is a complete binary tree,
correct?

05e14040-523e-4baf-a4d1-011ce69ab14c/22539-0
01:55:19.233 --> 01:55:21.546
The last level from left to
right, we are feeling it is a

05e14040-523e-4baf-a4d1-011ce69ab14c/22539-1
01:55:21.546 --> 01:55:22.383
complete binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/22551-0
01:55:22.773 --> 01:55:24.263
How do you place it in an array?

05e14040-523e-4baf-a4d1-011ce69ab14c/22557-0
01:55:25.193 --> 01:55:26.083
Very simple guys.

05e14040-523e-4baf-a4d1-011ce69ab14c/22566-0
01:55:26.493 --> 01:55:29.563
Just put a label top to bottom,
left to right.

05e14040-523e-4baf-a4d1-011ce69ab14c/22574-0
01:55:30.523 --> 01:55:31.663
Yeah, this is not perfect.

05e14040-523e-4baf-a4d1-011ce69ab14c/22577-0
01:55:31.673 --> 01:55:32.473
Binary tree NANDINI.

05e14040-523e-4baf-a4d1-011ce69ab14c/22580-0
01:55:32.483 --> 01:55:33.073
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/22584-0
01:55:33.123 --> 01:55:34.073
Perfect binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/22588-0
01:55:34.083 --> 01:55:35.033
No, it is wrong.

05e14040-523e-4baf-a4d1-011ce69ab14c/22600-0
01:55:35.123 --> 01:55:38.283
It is only a complete binary
tree because if you see here.

05e14040-523e-4baf-a4d1-011ce69ab14c/22606-0
01:55:40.563 --> 01:55:41.863
These leaves are here.

05e14040-523e-4baf-a4d1-011ce69ab14c/22613-0
01:55:41.873 --> 01:55:42.773
These leaves are here.

05e14040-523e-4baf-a4d1-011ce69ab14c/22621-0
01:55:42.783 --> 01:55:44.543
They are not in the same level,
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/22628-0
01:55:44.553 --> 01:55:45.533
So it is not perfect.

05e14040-523e-4baf-a4d1-011ce69ab14c/22632-0
01:55:45.923 --> 01:55:46.993
It is only complete.

05e14040-523e-4baf-a4d1-011ce69ab14c/22640-0
01:55:48.833 --> 01:55:49.973
OK, now let's you know.

05e14040-523e-4baf-a4d1-011ce69ab14c/22653-0
01:55:50.023 --> 01:55:52.083
Try to see how to represent this
in an array.

05e14040-523e-4baf-a4d1-011ce69ab14c/22681-0
01:55:52.993 --> 01:55:59.662
Start numbering top to bottom,
left to right, meaning you put

05e14040-523e-4baf-a4d1-011ce69ab14c/22681-1
01:55:59.662 --> 01:56:01.813
it as 1234567891011.

05e14040-523e-4baf-a4d1-011ce69ab14c/22688-0
01:56:02.203 --> 01:56:03.563
Is the numbering clear for all
of you?

05e14040-523e-4baf-a4d1-011ce69ab14c/22692-0
01:56:06.473 --> 01:56:06.653
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/22701-0
01:56:08.093 --> 01:56:09.223
Is the numbering clear?

05e14040-523e-4baf-a4d1-011ce69ab14c/22703-0
01:56:09.293 --> 01:56:09.823
All of you.

05e14040-523e-4baf-a4d1-011ce69ab14c/22709-0
01:56:09.903 --> 01:56:10.723
Yeah, Vijay, that's right.

05e14040-523e-4baf-a4d1-011ce69ab14c/22715-0
01:56:10.733 --> 01:56:11.423
It is proper also.

05e14040-523e-4baf-a4d1-011ce69ab14c/22723-0
01:56:12.153 --> 01:56:13.703
Yeah, top to bottom, left to
right.

05e14040-523e-4baf-a4d1-011ce69ab14c/22743-0
01:56:13.713 --> 01:56:16.703
Just put it as 123456 top to
bottom, left to right.

05e14040-523e-4baf-a4d1-011ce69ab14c/22753-0
01:56:16.713 --> 01:56:19.283
You will number it after you
number it.

05e14040-523e-4baf-a4d1-011ce69ab14c/22756-0
01:56:19.743 --> 01:56:21.503
Whatever you numbered, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/22762-0
01:56:21.553 --> 01:56:22.523
Very, very important.

05e14040-523e-4baf-a4d1-011ce69ab14c/22769-0
01:56:22.533 --> 01:56:24.643
Started from one don't start it
from zero.

05e14040-523e-4baf-a4d1-011ce69ab14c/22781-0
01:56:24.933 --> 01:56:27.603
Started from one and then in an
array.

05e14040-523e-4baf-a4d1-011ce69ab14c/22789-0
01:56:27.773 --> 01:56:30.763
Whatever you numbered those
numbers become the index.

05e14040-523e-4baf-a4d1-011ce69ab14c/22820-0
01:56:31.053 --> 01:56:35.363
Put the actual node value as the
content of the array and you are

05e14040-523e-4baf-a4d1-011ce69ab14c/22820-1
01:56:35.363 --> 01:56:39.216
done and now you have these
three formulas which will tell

05e14040-523e-4baf-a4d1-011ce69ab14c/22820-2
01:56:39.216 --> 01:56:40.913
you indexing should start.

05e14040-523e-4baf-a4d1-011ce69ab14c/22854-0
01:56:40.923 --> 01:56:44.197
No, in this case alone it should
not start from zero, because if

05e14040-523e-4baf-a4d1-011ce69ab14c/22854-1
01:56:44.197 --> 01:56:47.017
you start from zero, all these
three formulas will stop

05e14040-523e-4baf-a4d1-011ce69ab14c/22854-2
01:56:47.017 --> 01:56:49.283
working, so that zero position
can be empty.

05e14040-523e-4baf-a4d1-011ce69ab14c/22862-0
01:56:50.673 --> 01:56:51.663
You know that it is empty.

05e14040-523e-4baf-a4d1-011ce69ab14c/22873-0
01:56:51.673 --> 01:56:54.043
Always only from first position
you will put it.

05e14040-523e-4baf-a4d1-011ce69ab14c/22878-0
01:56:54.553 --> 01:56:55.423
You'll start from one.

05e14040-523e-4baf-a4d1-011ce69ab14c/22896-0
01:56:55.433 --> 01:56:59.744
You'll number it top to bottom,
left to right that then you will

05e14040-523e-4baf-a4d1-011ce69ab14c/22896-1
01:56:59.744 --> 01:57:01.003
use these formulas.

05e14040-523e-4baf-a4d1-011ce69ab14c/22904-0
01:57:01.393 --> 01:57:03.703
That is, for any node.

05e14040-523e-4baf-a4d1-011ce69ab14c/22921-0
01:57:03.833 --> 01:57:07.499
If you want to know who is the
left child, let's consider this

05e14040-523e-4baf-a4d1-011ce69ab14c/22921-1
01:57:07.499 --> 01:57:08.313
node 16 right?

05e14040-523e-4baf-a4d1-011ce69ab14c/22924-0
01:57:08.323 --> 01:57:08.913
Where is he?

05e14040-523e-4baf-a4d1-011ce69ab14c/22937-0
01:57:08.963 --> 01:57:12.413
He's positioned in the poor
place this place.

05e14040-523e-4baf-a4d1-011ce69ab14c/22956-0
01:57:12.883 --> 01:57:17.646
If I want to know who is the
left child, I will go to a of

05e14040-523e-4baf-a4d1-011ce69ab14c/22956-1
01:57:17.646 --> 01:57:18.453
two I and.

05e14040-523e-4baf-a4d1-011ce69ab14c/22966-0
01:57:18.463 --> 01:57:19.173
What is a of two?

05e14040-523e-4baf-a4d1-011ce69ab14c/22976-0
01:57:19.183 --> 01:57:22.403
I he of two into three that is a
of six.

05e14040-523e-4baf-a4d1-011ce69ab14c/23001-0
01:57:23.993 --> 01:57:28.830
I'll go to a of 6 and I have 15
so my formula says the left

05e14040-523e-4baf-a4d1-011ce69ab14c/23001-1
01:57:28.830 --> 01:57:30.683
child of this 16 is 15.

05e14040-523e-4baf-a4d1-011ce69ab14c/23021-0
01:57:31.213 --> 01:57:34.669
If you come to this tree, the
left child of 16 is 15, so my

05e14040-523e-4baf-a4d1-011ce69ab14c/23021-1
01:57:34.669 --> 01:57:35.763
formula is correct.

05e14040-523e-4baf-a4d1-011ce69ab14c/23038-0
01:57:36.393 --> 01:57:39.052
Similarly, if I want to know the
right child, I'll do 2I plus

05e14040-523e-4baf-a4d1-011ce69ab14c/23038-1
01:57:39.052 --> 01:57:39.223
one.

05e14040-523e-4baf-a4d1-011ce69ab14c/23051-0
01:57:39.233 --> 01:57:42.303
So I will go to a of seven and
that is 18.

05e14040-523e-4baf-a4d1-011ce69ab14c/23082-0
01:57:42.533 --> 01:57:45.871
So my formula says 18 is your
right child and in the diagram

05e14040-523e-4baf-a4d1-011ce69ab14c/23082-1
01:57:45.871 --> 01:57:47.293
also 18 is my right child.

05e14040-523e-4baf-a4d1-011ce69ab14c/23106-0
01:57:48.883 --> 01:57:52.741
And if I want to know who's the
parent of the 16 right, my

05e14040-523e-4baf-a4d1-011ce69ab14c/23106-1
01:57:52.741 --> 01:57:56.403
formula says parent of I is at
position floor I by two.

05e14040-523e-4baf-a4d1-011ce69ab14c/23131-0
01:57:56.873 --> 01:58:01.629
So my 16 is at position three,
so 3 / 2 floor value is 1.5

05e14040-523e-4baf-a4d1-011ce69ab14c/23131-1
01:58:01.629 --> 01:58:03.483
floor value which is 1.

05e14040-523e-4baf-a4d1-011ce69ab14c/23141-0
01:58:03.953 --> 01:58:05.623
So I'll go to one first
position.

05e14040-523e-4baf-a4d1-011ce69ab14c/23158-0
01:58:06.053 --> 01:58:10.601
First position is 14 so my
formula says 14 is the root or

05e14040-523e-4baf-a4d1-011ce69ab14c/23158-1
01:58:10.601 --> 01:58:11.933
parent of the 16.

05e14040-523e-4baf-a4d1-011ce69ab14c/23177-0
01:58:12.723 --> 01:58:15.883
So actually in diagram also 14
is my parent of 16.

05e14040-523e-4baf-a4d1-011ce69ab14c/23183-0
01:58:16.973 --> 01:58:18.433
So these formulas are working.

05e14040-523e-4baf-a4d1-011ce69ab14c/23219-0
01:58:19.313 --> 01:58:22.776
So if I represent it in a array
using these formulas, I'll be

05e14040-523e-4baf-a4d1-011ce69ab14c/23219-1
01:58:22.776 --> 01:58:25.904
able to know who's the left
child who's the right child

05e14040-523e-4baf-a4d1-011ce69ab14c/23219-2
01:58:25.904 --> 01:58:26.853
who's the parent.

05e14040-523e-4baf-a4d1-011ce69ab14c/23226-0
01:58:28.233 --> 01:58:29.333
Is this clear for all of you?

05e14040-523e-4baf-a4d1-011ce69ab14c/23241-0
01:58:30.983 --> 01:58:33.193
But if you start numbering it
from zero, it will be wrong.

05e14040-523e-4baf-a4d1-011ce69ab14c/23252-0
01:58:34.023 --> 01:58:36.033
Floor value is the floor, the
decimal part.

05e14040-523e-4baf-a4d1-011ce69ab14c/23274-0
01:58:36.503 --> 01:58:40.741
If you have 1.5 floor value, you
will take the answer as one that

05e14040-523e-4baf-a4d1-011ce69ab14c/23274-1
01:58:40.741 --> 01:58:42.153
is called floor value.

05e14040-523e-4baf-a4d1-011ce69ab14c/23294-0
01:58:42.243 --> 01:58:44.722
If it is seal, you will take the
higher number, meaning you will

05e14040-523e-4baf-a4d1-011ce69ab14c/23294-1
01:58:44.722 --> 01:58:45.293
take it as two.

05e14040-523e-4baf-a4d1-011ce69ab14c/23296-0
01:58:47.033 --> 01:58:47.193
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/23305-0
01:58:48.463 --> 01:58:51.243
Which part Prakash did you
understand the numbering part?

05e14040-523e-4baf-a4d1-011ce69ab14c/23311-0
01:58:54.193 --> 01:58:55.023
Yeah, numbering part.

05e14040-523e-4baf-a4d1-011ce69ab14c/23331-0
01:58:55.033 --> 01:58:59.478
Is it clear if numbering part is
clear then the formula just says

05e14040-523e-4baf-a4d1-011ce69ab14c/23331-1
01:58:59.478 --> 01:59:00.623
pick up any node.

05e14040-523e-4baf-a4d1-011ce69ab14c/23344-0
01:59:00.753 --> 01:59:03.803
If you want to know who is the
left child, use this formula.

05e14040-523e-4baf-a4d1-011ce69ab14c/23350-0
01:59:04.253 --> 01:59:05.443
That is, go to two i.e.

05e14040-523e-4baf-a4d1-011ce69ab14c/23400-0
01:59:05.453 --> 01:59:09.298
Position if you want to know for
that node who is the right

05e14040-523e-4baf-a4d1-011ce69ab14c/23400-1
01:59:09.298 --> 01:59:13.398
child, go to to a + 1 position
and if you want to know for that

05e14040-523e-4baf-a4d1-011ce69ab14c/23400-2
01:59:13.398 --> 01:59:17.562
node what is the parent, go to I
by two I is that node where you

05e14040-523e-4baf-a4d1-011ce69ab14c/23400-3
01:59:17.562 --> 01:59:18.523
are looking at.

05e14040-523e-4baf-a4d1-011ce69ab14c/23411-0
01:59:18.993 --> 01:59:21.173
I want to know I consider this
particular node.

05e14040-523e-4baf-a4d1-011ce69ab14c/23414-0
01:59:22.603 --> 01:59:23.443
I will become four.

05e14040-523e-4baf-a4d1-011ce69ab14c/23427-0
01:59:25.113 --> 01:59:27.003
So you want to know who is the
left child of it?

05e14040-523e-4baf-a4d1-011ce69ab14c/23433-0
01:59:27.013 --> 01:59:28.343
You will go to hate.

05e14040-523e-4baf-a4d1-011ce69ab14c/23446-0
01:59:28.513 --> 01:59:29.643
You want to know what is the
right child.

05e14040-523e-4baf-a4d1-011ce69ab14c/23451-0
01:59:29.653 --> 01:59:30.303
You go to 9.

05e14040-523e-4baf-a4d1-011ce69ab14c/23457-0
01:59:30.673 --> 01:59:31.793
You want to know its parent.

05e14040-523e-4baf-a4d1-011ce69ab14c/23468-0
01:59:31.803 --> 01:59:33.613
You'll do 4 / 2, which is 2.

05e14040-523e-4baf-a4d1-011ce69ab14c/23475-0
01:59:34.493 --> 01:59:35.813
There you will find its parent.

05e14040-523e-4baf-a4d1-011ce69ab14c/23486-0
01:59:35.823 --> 01:59:36.943
Here you will find its left.

05e14040-523e-4baf-a4d1-011ce69ab14c/23493-0
01:59:36.953 --> 01:59:37.873
Here you'll find it right.

05e14040-523e-4baf-a4d1-011ce69ab14c/23496-0
01:59:39.803 --> 01:59:40.203
Is it clear?

05e14040-523e-4baf-a4d1-011ce69ab14c/23504-0
01:59:41.663 --> 01:59:43.543
Please put these formulas into
action.

05e14040-523e-4baf-a4d1-011ce69ab14c/23509-0
01:59:43.553 --> 01:59:44.853
Yeah, take some node.

05e14040-523e-4baf-a4d1-011ce69ab14c/23527-0
01:59:44.893 --> 01:59:47.716
Take the I value and substitute
and see are you getting the

05e14040-523e-4baf-a4d1-011ce69ab14c/23527-1
01:59:47.716 --> 01:59:49.833
correct left child, right, child
and parent.

05e14040-523e-4baf-a4d1-011ce69ab14c/23536-0
01:59:51.863 --> 01:59:53.083
Yeah, so far, so good, all of
you.

05e14040-523e-4baf-a4d1-011ce69ab14c/23539-0
01:59:56.413 --> 01:59:56.763
Yes.

05e14040-523e-4baf-a4d1-011ce69ab14c/23552-0
01:59:56.773 --> 01:59:58.553
No, maybe I don't see any
replies at all.

05e14040-523e-4baf-a4d1-011ce69ab14c/23557-0
02:00:00.203 --> 02:00:00.953
Very simple guys.

05e14040-523e-4baf-a4d1-011ce69ab14c/23562-0
02:00:00.963 --> 02:00:01.333
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/23587-0
02:00:01.403 --> 02:00:04.982
Just, you know 3 formulas do I
will give you left child do I

05e14040-523e-4baf-a4d1-011ce69ab14c/23587-1
02:00:04.982 --> 02:00:07.093
plus one will give you right
child.

05e14040-523e-4baf-a4d1-011ce69ab14c/23602-0
02:00:07.403 --> 02:00:10.423
I / 2 floor value will give you
who's the parent of that node.

05e14040-523e-4baf-a4d1-011ce69ab14c/23612-0
02:00:11.233 --> 02:00:13.083
Yeah, always remember thought
from one.

05e14040-523e-4baf-a4d1-011ce69ab14c/23633-0
02:00:13.143 --> 02:00:15.711
If you start from zero then this
will become two into zero, might

05e14040-523e-4baf-a4d1-011ce69ab14c/23633-1
02:00:15.711 --> 02:00:16.683
become zero and all that.

05e14040-523e-4baf-a4d1-011ce69ab14c/23637-0
02:00:16.993 --> 02:00:17.883
So don't do that.

05e14040-523e-4baf-a4d1-011ce69ab14c/23654-0
02:00:18.433 --> 02:00:22.032
So if it is a complete binary
tree, then this representation

05e14040-523e-4baf-a4d1-011ce69ab14c/23654-1
02:00:22.032 --> 02:00:22.503
is good.

05e14040-523e-4baf-a4d1-011ce69ab14c/23671-0
02:00:23.093 --> 02:00:25.710
If it is a normal tree, not a
complete binary tree, then you

05e14040-523e-4baf-a4d1-011ce69ab14c/23671-1
02:00:25.710 --> 02:00:26.353
have a problem.

05e14040-523e-4baf-a4d1-011ce69ab14c/23688-0
02:00:27.283 --> 02:00:29.914
So in this example, let me just
finish this and then I'll leave

05e14040-523e-4baf-a4d1-011ce69ab14c/23688-1
02:00:29.914 --> 02:00:30.283
you free.

05e14040-523e-4baf-a4d1-011ce69ab14c/23696-0
02:00:31.573 --> 02:00:33.433
This tree is this a complete
binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/23700-0
02:00:35.683 --> 02:00:36.123
Real quick.

05e14040-523e-4baf-a4d1-011ce69ab14c/23721-0
02:00:38.043 --> 02:00:40.485
This tree that you see here in
the slide is this a complete

05e14040-523e-4baf-a4d1-011ce69ab14c/23721-1
02:00:40.485 --> 02:00:40.973
binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/23734-0
02:00:41.463 --> 02:00:43.613
No here itself, there is a
violation here itself.

05e14040-523e-4baf-a4d1-011ce69ab14c/23774-0
02:00:43.623 --> 02:00:47.492
There is no right child to this,
so in these cases what will

05e14040-523e-4baf-a4d1-011ce69ab14c/23774-1
02:00:47.492 --> 02:00:50.918
happen is if you try to
represent this in this array,

05e14040-523e-4baf-a4d1-011ce69ab14c/23774-2
02:00:50.918 --> 02:00:54.533
those positions this third
position will become an empty

05e14040-523e-4baf-a4d1-011ce69ab14c/23774-3
02:00:54.533 --> 02:00:54.913
again.

05e14040-523e-4baf-a4d1-011ce69ab14c/23779-0
02:00:54.923 --> 02:00:55.793
Here it's children.

05e14040-523e-4baf-a4d1-011ce69ab14c/23788-0
02:00:55.803 --> 02:00:58.475
All these positions will be
empty, so you are actually

05e14040-523e-4baf-a4d1-011ce69ab14c/23788-1
02:00:58.475 --> 02:00:59.203
wasting memory.

05e14040-523e-4baf-a4d1-011ce69ab14c/23793-0
02:01:00.853 --> 02:01:01.223
Right.

05e14040-523e-4baf-a4d1-011ce69ab14c/23817-0
02:01:01.793 --> 02:01:05.204
So that is why we are claiming
that if it is a complete binary

05e14040-523e-4baf-a4d1-011ce69ab14c/23817-1
02:01:05.204 --> 02:01:08.343
tree, then all of these will be
completely filled, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/23830-0
02:01:08.523 --> 02:01:10.453
So you will have a array which
is like this.

05e14040-523e-4baf-a4d1-011ce69ab14c/23836-0
02:01:10.463 --> 02:01:12.393
It'll be fully filled, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/23841-0
02:01:12.483 --> 02:01:13.113
So no problem.

05e14040-523e-4baf-a4d1-011ce69ab14c/23864-0
02:01:13.823 --> 02:01:17.515
Use an array, but if it is a
normal tree like this, which is

05e14040-523e-4baf-a4d1-011ce69ab14c/23864-1
02:01:17.515 --> 02:01:19.633
not a complete binary tree,
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/23874-0
02:01:19.683 --> 02:01:22.603
In fact, is this even a proper
binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/23878-0
02:01:24.533 --> 02:01:24.773
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/23885-0
02:01:24.783 --> 02:01:25.963
Is this a proper binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/23895-0
02:01:27.883 --> 02:01:29.273
This is not a proper binary
tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/23904-0
02:01:29.283 --> 02:01:31.273
Also, this is not a complete
binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/23913-0
02:01:31.283 --> 02:01:33.133
Also, this is not a perfect
binary tree.

05e14040-523e-4baf-a4d1-011ce69ab14c/23926-0
02:01:33.143 --> 02:01:36.183
Also, this is a normal binary
tree, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/23964-0
02:01:36.193 --> 02:01:39.715
In those cases, you should not
use an array because if you use

05e14040-523e-4baf-a4d1-011ce69ab14c/23964-1
02:01:39.715 --> 02:01:43.292
an array you will have a lot of
empty spaces in between, so you

05e14040-523e-4baf-a4d1-011ce69ab14c/23964-2
02:01:43.292 --> 02:01:45.863
are wasting space, so you should
not do that.

05e14040-523e-4baf-a4d1-011ce69ab14c/23975-0
02:01:46.173 --> 02:01:49.463
Then you should use the linked
list representation, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/23998-0
02:01:50.623 --> 02:01:53.889
There's also a similar example
where these dotted ones are not

05e14040-523e-4baf-a4d1-011ce69ab14c/23998-1
02:01:53.889 --> 02:01:56.844
actually there, so all those
positions are becoming null

05e14040-523e-4baf-a4d1-011ce69ab14c/23998-2
02:01:56.844 --> 02:01:57.103
here.

05e14040-523e-4baf-a4d1-011ce69ab14c/24008-0
02:01:58.123 --> 02:01:59.123
So you are wasting space.

05e14040-523e-4baf-a4d1-011ce69ab14c/24023-0
02:02:00.013 --> 02:02:02.603
So if it is a CBT, you will use
a array.

05e14040-523e-4baf-a4d1-011ce69ab14c/24034-0
02:02:02.873 --> 02:02:06.583
In all other cases, you will use
a linked list representation.

05e14040-523e-4baf-a4d1-011ce69ab14c/24059-0
02:02:06.853 --> 02:02:09.386
We'll look at this in detail in
the next class, but just for you

05e14040-523e-4baf-a4d1-011ce69ab14c/24059-1
02:02:09.386 --> 02:02:10.983
to have a glimpse, it'll look
like this.

05e14040-523e-4baf-a4d1-011ce69ab14c/24093-0
02:02:12.463 --> 02:02:16.063
There'll be 4 compartments, one
will point to the parent, one

05e14040-523e-4baf-a4d1-011ce69ab14c/24093-1
02:02:16.063 --> 02:02:19.430
will point to the left child,
one will point to the right

05e14040-523e-4baf-a4d1-011ce69ab14c/24093-2
02:02:19.430 --> 02:02:22.333
child, one will point to the
actual value, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/24103-0
02:02:22.343 --> 02:02:24.443
This is nothing but a linked
list, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/24108-0
02:02:24.893 --> 02:02:25.663
We will stop here.

05e14040-523e-4baf-a4d1-011ce69ab14c/24122-0
02:02:25.673 --> 02:02:27.243
We will continue from here in
the next class.

05e14040-523e-4baf-a4d1-011ce69ab14c/24153-0
02:02:27.253 --> 02:02:31.263
We will go deep into this linked
list representation and then we

05e14040-523e-4baf-a4d1-011ce69ab14c/24153-1
02:02:31.263 --> 02:02:34.532
will come back to the next
concept of heap and other

05e14040-523e-4baf-a4d1-011ce69ab14c/24153-2
02:02:34.532 --> 02:02:34.963
things.

05e14040-523e-4baf-a4d1-011ce69ab14c/24167-0
02:02:35.753 --> 02:02:38.483
If it is a complete binary tree,
you will use an array.

05e14040-523e-4baf-a4d1-011ce69ab14c/24193-0
02:02:38.573 --> 02:02:41.268
You know, all other cases you
will use this type of a linked

05e14040-523e-4baf-a4d1-011ce69ab14c/24193-1
02:02:41.268 --> 02:02:43.123
list if you have already
understood list.

05e14040-523e-4baf-a4d1-011ce69ab14c/24210-0
02:02:43.133 --> 02:02:44.543
You understood this also right
this.

05e14040-523e-4baf-a4d1-011ce69ab14c/24213-0
02:02:44.553 --> 02:02:48.113
This is having four compartment
will have the actual value.

05e14040-523e-4baf-a4d1-011ce69ab14c/24219-0
02:02:49.633 --> 02:02:51.133
You will have the parent
pointer.

05e14040-523e-4baf-a4d1-011ce69ab14c/24224-0
02:02:52.533 --> 02:02:53.783
You will point to the left.

05e14040-523e-4baf-a4d1-011ce69ab14c/24240-0
02:02:53.843 --> 02:02:57.286
You will point to the right in
that way you will not waste any

05e14040-523e-4baf-a4d1-011ce69ab14c/24240-1
02:02:57.286 --> 02:02:57.613
space.

05e14040-523e-4baf-a4d1-011ce69ab14c/24252-0
02:02:59.783 --> 02:03:02.893
For the root element, the parent
will be empty.

05e14040-523e-4baf-a4d1-011ce69ab14c/24264-0
02:03:03.683 --> 02:03:05.143
I did because it doesn't have
any parent.

05e14040-523e-4baf-a4d1-011ce69ab14c/24275-0
02:03:05.463 --> 02:03:08.443
For leaves, the left child and
right child will be empty.

05e14040-523e-4baf-a4d1-011ce69ab14c/24278-0
02:03:09.343 --> 02:03:10.413
Null pointer right?

05e14040-523e-4baf-a4d1-011ce69ab14c/24292-0
02:03:10.603 --> 02:03:12.813
Was it doesn't have a left or
right child because it's a leaf.

05e14040-523e-4baf-a4d1-011ce69ab14c/24303-0
02:03:14.203 --> 02:03:16.073
Yeah, the actual value is the
actual value, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/24330-0
02:03:16.083 --> 02:03:18.681
It can be a number or it can be
an integer or whatever we have

05e14040-523e-4baf-a4d1-011ce69ab14c/24330-1
02:03:18.681 --> 02:03:19.753
inside these nodes, right?

05e14040-523e-4baf-a4d1-011ce69ab14c/24336-0
02:03:20.283 --> 02:03:22.343
This CB these become the actual
value.

05e14040-523e-4baf-a4d1-011ce69ab14c/24340-0
02:03:24.533 --> 02:03:24.753
Right.

05e14040-523e-4baf-a4d1-011ce69ab14c/24357-0
02:03:26.093 --> 02:03:30.429
Is it clear, guys, all of you,
what is we use link list for

05e14040-523e-4baf-a4d1-011ce69ab14c/24357-1
02:03:30.429 --> 02:03:31.223
everything.

05e14040-523e-4baf-a4d1-011ce69ab14c/24368-0
02:03:31.343 --> 02:03:32.453
Yeah, you can use that also.

05e14040-523e-4baf-a4d1-011ce69ab14c/24381-0
02:03:32.643 --> 02:03:35.308
Yeah, but for a complete
manager, you don't need all that

05e14040-523e-4baf-a4d1-011ce69ab14c/24381-1
02:03:35.308 --> 02:03:35.813
complexity.

05e14040-523e-4baf-a4d1-011ce69ab14c/24406-0
02:03:35.823 --> 02:03:38.566
You can just put it in an array
and that'll work, but you can

05e14040-523e-4baf-a4d1-011ce69ab14c/24406-1
02:03:38.566 --> 02:03:40.423
use linked list also to not be a
problem.

05e14040-523e-4baf-a4d1-011ce69ab14c/24416-0
02:03:41.163 --> 02:03:43.283
Yeah, but you have all this
unwanted, you know.

05e14040-523e-4baf-a4d1-011ce69ab14c/24443-0
02:03:44.293 --> 02:03:47.573
Uh, the complexity is not big of
one you have, you know, extra

05e14040-523e-4baf-a4d1-011ce69ab14c/24443-1
02:03:47.573 --> 02:03:49.603
memory for pointer and all that
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/24453-0
02:03:50.133 --> 02:03:52.263
In actual memory it will occupy
4 cells, yes. Correct.

05e14040-523e-4baf-a4d1-011ce69ab14c/24460-0
02:03:52.513 --> 02:03:55.223
It'll have 4 compartments,
right?

05e14040-523e-4baf-a4d1-011ce69ab14c/24466-0
02:03:55.333 --> 02:03:56.643
4 compartments it'll have.

05e14040-523e-4baf-a4d1-011ce69ab14c/24471-0
02:03:59.093 --> 02:03:59.423
Cool.

05e14040-523e-4baf-a4d1-011ce69ab14c/24477-0
02:03:59.493 --> 02:04:01.123
I hope you got some clarity.
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/24485-0
02:04:01.133 --> 02:04:02.903
So please again watch the
recordings.

05e14040-523e-4baf-a4d1-011ce69ab14c/24487-0
02:04:02.913 --> 02:04:03.113
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/24505-0
02:04:03.123 --> 02:04:05.752
So there are some traversals and
all this we will come back to

05e14040-523e-4baf-a4d1-011ce69ab14c/24505-1
02:04:05.752 --> 02:04:06.503
this later, right.

05e14040-523e-4baf-a4d1-011ce69ab14c/24521-0
02:04:06.773 --> 02:04:10.245
But again and again, I repeat,
yeah, we are slow in the

05e14040-523e-4baf-a4d1-011ce69ab14c/24521-1
02:04:10.245 --> 02:04:10.803
syllabus.

05e14040-523e-4baf-a4d1-011ce69ab14c/24539-0
02:04:10.813 --> 02:04:14.172
Yeah, because there are some
very basic doubts that come up,

05e14040-523e-4baf-a4d1-011ce69ab14c/24539-1
02:04:14.172 --> 02:04:15.163
but which is good.

05e14040-523e-4baf-a4d1-011ce69ab14c/24546-0
02:04:15.333 --> 02:04:15.523
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/24584-0
02:04:15.533 --> 02:04:18.800
We can take some extra class
also which is fine, but I would

05e14040-523e-4baf-a4d1-011ce69ab14c/24584-1
02:04:18.800 --> 02:04:22.067
urge to watch their recordings
right, watch their recordings

05e14040-523e-4baf-a4d1-011ce69ab14c/24584-2
02:04:22.067 --> 02:04:25.333
again and again and practice
things because that is the only

05e14040-523e-4baf-a4d1-011ce69ab14c/24584-3
02:04:25.333 --> 02:04:26.243
way to master it.

05e14040-523e-4baf-a4d1-011ce69ab14c/24587-0
02:04:26.373 --> 02:04:26.843
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/24605-0
02:04:26.893 --> 02:04:29.463
Otherwise, when I talk, it might
be looking OK, but later it

05e14040-523e-4baf-a4d1-011ce69ab14c/24605-1
02:04:29.463 --> 02:04:30.263
might be difficult.

05e14040-523e-4baf-a4d1-011ce69ab14c/24614-0
02:04:30.823 --> 02:04:32.663
So practice them right.

05e14040-523e-4baf-a4d1-011ce69ab14c/24619-0
02:04:34.083 --> 02:04:35.043
So all in sequence.

05e14040-523e-4baf-a4d1-011ce69ab14c/24626-0
02:04:35.053 --> 02:04:36.003
Meaning, what do you mean,
Vinay?

05e14040-523e-4baf-a4d1-011ce69ab14c/24639-0
02:04:37.393 --> 02:04:39.023
But yeah, for all of this,
that's pretty much so.

05e14040-523e-4baf-a4d1-011ce69ab14c/24645-0
02:04:39.033 --> 02:04:39.843
Thank you so much.

05e14040-523e-4baf-a4d1-011ce69ab14c/24658-0
02:04:39.853 --> 02:04:42.323
And again, sorry for, you know,
taking a class on the Sunday.

05e14040-523e-4baf-a4d1-011ce69ab14c/24669-0
02:04:42.713 --> 02:04:44.983
I didn't, you know, about this
semester starting.

05e14040-523e-4baf-a4d1-011ce69ab14c/24685-0
02:04:45.053 --> 02:04:47.133
I had to, you know, travel for
some conferences.

05e14040-523e-4baf-a4d1-011ce69ab14c/24714-0
02:04:47.573 --> 02:04:50.453
So from the next week, we will
always have only on Saturdays we

05e14040-523e-4baf-a4d1-011ce69ab14c/24714-1
02:04:50.453 --> 02:04:53.378
will not, you know, try to have
any, you know, extra Sundays and

05e14040-523e-4baf-a4d1-011ce69ab14c/24714-2
02:04:53.378 --> 02:04:53.783
all that.

05e14040-523e-4baf-a4d1-011ce69ab14c/24719-0
02:04:53.853 --> 02:04:56.263
Yeah, 16 classes.

05e14040-523e-4baf-a4d1-011ce69ab14c/24726-0
02:04:56.273 --> 02:04:57.443
Yeah, 16 classes are total.

05e14040-523e-4baf-a4d1-011ce69ab14c/24744-0
02:04:57.453 --> 02:05:00.928
We are already done with four,
so we just have, you know, or 12

05e14040-523e-4baf-a4d1-011ce69ab14c/24744-1
02:05:00.928 --> 02:05:01.633
more classes.

05e14040-523e-4baf-a4d1-011ce69ab14c/24760-0
02:05:03.193 --> 02:05:06.320
Yeah, NANDINI, Sir, can you
please go to the complete binary

05e14040-523e-4baf-a4d1-011ce69ab14c/24760-1
02:05:06.320 --> 02:05:06.883
tree slide?

05e14040-523e-4baf-a4d1-011ce69ab14c/24781-0
02:05:06.893 --> 02:05:09.893
I want to know whether like an
example is proper binary or not.

05e14040-523e-4baf-a4d1-011ce69ab14c/24793-0
02:05:10.833 --> 02:05:12.923
Yeah, you mean the original
complete binary tree?

05e14040-523e-4baf-a4d1-011ce69ab14c/24797-0
02:05:12.933 --> 02:05:13.633
One this one.

05e14040-523e-4baf-a4d1-011ce69ab14c/24804-0
02:05:17.383 --> 02:05:17.523
Yeah.

05e14040-523e-4baf-a4d1-011ce69ab14c/24815-0
02:05:18.773 --> 02:05:19.463
Is this proper?

05e14040-523e-4baf-a4d1-011ce69ab14c/24821-0
02:05:21.043 --> 02:05:22.693
All internal node have exactly
two.

05e14040-523e-4baf-a4d1-011ce69ab14c/24827-0
02:05:23.733 --> 02:05:24.953
Yeah, this is also proper.

05e14040-523e-4baf-a4d1-011ce69ab14c/24846-0
02:05:24.963 --> 02:05:27.835
This is also complete, but
there's not perfect because

05e14040-523e-4baf-a4d1-011ce69ab14c/24846-1
02:05:27.835 --> 02:05:28.983
these leaves are here.

05e14040-523e-4baf-a4d1-011ce69ab14c/24852-0
02:05:28.993 --> 02:05:29.633
These leaves are here.

05e14040-523e-4baf-a4d1-011ce69ab14c/24856-0
02:05:30.743 --> 02:05:31.053
Cool.

05e14040-523e-4baf-a4d1-011ce69ab14c/24861-0
02:05:31.063 --> 02:05:31.943
I'll stop the recording.

05e14040-523e-4baf-a4d1-011ce69ab14c/24876-0
02:05:31.953 --> 02:05:34.773
I'll stay for another two
minutes and for others.